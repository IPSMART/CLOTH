@model Improvar.ViewModels.ItemMasterEntry

@{
    ViewBag.Title = "Finished Product/Design Master";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string PageControllerName = "M_FinProduct";
}


<script src="~/Scripts/jquery.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        if ("@Model.DefaultAction" == "V" || "@Model.DefaultAction" == "D") {
            modeView();
        }
        else if ("@Model.DefaultAction" == "E") {
            $("#ITCD").attr("readonly", "readonly");
        }
        else if ("@Model.DefaultAction" == "A") {
            $('form :input:enabled:visible:not([readonly]):first').focus();
        }
        $("#WaitingMode").hide();
    });
</script>
<script>
    function requiredFieldValidator() {
        if (!emptyFieldCheck("Enter Design", "STYLENO")) {
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            return false;
        }
        if (!emptyFieldCheck("Enter Item Group Code", "ITGRPCD")) {
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            return false;
        }
        if (!emptyFieldCheck("Enter Brand Code", "BRANDCD")) {
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            return false;
        }
        if (!emptyFieldCheck("Enter  Quality Description", "QUALITY")) {
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            return false;
        }

        if (!emptyFieldCheck("Enter UOM", "UOMCD")) {
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            return false;
        }

        var comtype = $("#protyp").val();
        if (comtype == "0") {
            msgInfo("Select Product Type");
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            message_value = "protyp";
            return false;
        }
        var comtype = $("#gender").val();
        if (comtype == "0") {
            msgInfo("Select Gender");
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            message_value = "gender";
            return false;
        }
        if (!emptyFieldCheck("Enter Pcs. Per Box ", "PCSPERBOX")) {
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            return false;
        }
        var pricestr = "";
        var PricesGridlength = $("#exampleItemPrices > tbody > tr").length;
        for (i = 0; i <= PricesGridlength - 1; i++) {
            var cellslen = $("#exampleItemPrices > tbody > tr:first > td").length;
            for (var j = 0; j < cellslen; j++) {
                pricestr += $("#exampleItemPrices > tbody > tr")[i].cells[j].children[0].value + ",";
            }
            pricestr = pricestr.slice(0, -1) + "~";
        }
        pricestr = pricestr.slice(0, -1);
        $("#STRPRICES").val(pricestr);
        return true;
    }
</script>

<script>
    @{
        string mldauto = "";
        if (@Model.M_SITEM != null)
        {
            mldauto = Model.M_SITEM.M_AUTONO.ToString();
        }
        else
        {
            mldauto = "";
        }
    }
    function ModifyLogDetails() {
        if ("@Model.DefaultAction" == "V") {
            ModifyLogDtl(@mldauto);
        }
    }
</script>

<script>
    function input12(id, id1) {
        var str = $("#tempHDD").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
    }
    function SelectItemGroupCode(id, ITGRPCD, ITGRPNM, BRANDCD, BRANDNM) {
        if (id == "") {
            $("#ITGRPCD").val("");
            $("#ITGRPNM").val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetItemGroupDetails", PageControllerName)",
                data: {
                    val: id
                },
                success: function (result) {
                    var MSG = result.indexOf(String.fromCharCode(181));
                    if (MSG >= 0) {
                        $("#tempHDD").val(result);
                        input12(ITGRPCD, ITGRPNM);
                    }
                    else {
                        $("#ITGRPCD").val("");
                        $("#ITGRPNM").val("");
                        msgInfo("Invalid Item Group Code ! Please Enter a Valid Item Group Code !!");
                        message_value = "ITGRPCD";
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
</script>
<script>
    function input3(id, id1) {
        var str = $("#tempHDD").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
    }
    function SelectSubBrandCode(id, SBRANDCD, SBRANDNM) {
        if (id == "") {
            $("#SBRANDCD").val("");
            $("#SBRANDNM").val("");
        }
        else {
            var BRAND = document.getElementById("BRANDCD").value;
            if (BRAND != "") {
                $.ajax({
                    type: 'GET',
                    url: "@Url.Action("GetSubBrandDetails", PageControllerName)",
                    data:
                        {
                            val: id,
                            Code: BRAND
                        },
                    success: function (result) {
                        var MSG = result.indexOf(String.fromCharCode(181));
                        if (MSG >= 0) {
                            $("#tempHDD").val(result);
                            input3(SBRANDCD, SBRANDNM);
                        }
                        else {
                            $("#SBRANDCD").val("");
                            $("#SBRANDNM").val("");
                            msgInfo("Invalid Sub Brand Code ! Please Enter a Valid Sub Brand Code !!");
                            message_value = "SBRANDCD";
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $("#WaitingMode").hide();
                        msgError(XMLHttpRequest.responseText);
                        $("body span h1").remove(); $("#msgbody_error style").remove();
                    }
                });
            }
            else {
                $("#Msgdiv1").show();
                $("#info").show();
                $("#SBRANDCD").val("");
                $("#btnok").focus();
                $("#msgbody_info").html("Please Select / Enter Group Code & Brand Code !! ");
                message_value = "BRANDCD";
            }
        }
    }
</script>
<script>
    function input4(id, id1) {
        var str = $("#tempHDD").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
    }
    function SelectColorCode(id, COLRCD, COLRNM) {
        if (id == "") {
            $("#COLRCD").val("");
            $("#COLRNM").val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetColorDetails", PageControllerName)",
                data: {
                    val: id
                },
                success: function (result) {
                    var MSG = result.indexOf(String.fromCharCode(181));
                    if (MSG >= 0) {
                        $("#tempHDD").val(result);
                        input4(COLRCD, COLRNM);
                    }
                    else {
                        $("#COLRCD").val("");
                        $("#COLRNM").val("");
                        msgInfo(" Invalid Color Code !! ");
                        message_value = "COLRCD";
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
</script>
<script>
    function inputcolor(id, id1) {
        var str = $("#tempHDD").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
    }

    function SelectCOLORCODEGRID(id, COLRCD_, COLRNM_) {
        if (id == "") {
            $("#" + COLRNM_.id).val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetColorDetails", PageControllerName)",
                data: {
                    val: id
                },
                success: function (result) {
                    var MSG = result.indexOf(String.fromCharCode(181));
                    if (MSG >= 0) {
                        $("#tempHDD").val(result);
                        inputcolor(COLRCD_, COLRNM_);
                    }
                    else {
                        $("#" + COLRCD_.id).val("");
                        $("#" + COLRNM_.id).val("");
                        msgInfo("Invalid Color Code !!");
                        message_value = COLRCD_.id;
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
    //end

</script>
<script>
    function input6(id, id1) {
        var str = $("#tempHDD").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
    }
    function SelectPARTCODEGRID(id, PARTCD_, PARTNM_) {
        if (id == "") {
            $("#" + PARTCD_.id).val("");
            $("#" + PARTNM_.id).val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetPartDetails", PageControllerName)",
                data: {
                    val: id
                },
                success: function (result) {
                    var MSG = result.indexOf(String.fromCharCode(181));
                    if (MSG >= 0) {
                        $("#tempHDD").val(result);
                        input6(PARTCD_, PARTNM_);
                    }
                    else {
                        $("#" + PARTCD_.id).val("");
                        $("#" + PARTNM_.id).val("");
                        msgInfo("Invalid  Part Code !!");
                        message_value = PARTCD_.id;
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
</script>
<script>
    function input5(id, id1) {
        var str = $("#tempHDD").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
    }
    function SelectCollectionCode(id, COLLCD, COLLNM) {
        if (id == "") {
            $("#COLLNM").val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetCollectionDetails", PageControllerName)",
                data: {
                    val: id
                },
                success: function (result) {
                    var MSG = result.indexOf(String.fromCharCode(181));
                    if (MSG >= 0) {
                        $("#tempHDD").val(result);
                        input5(COLLCD, COLLNM);
                    }
                    else {
                        $("#COLLCD").val("");
                        $("#COLLNM").val("");
                        msgInfo(" Invalid Collection Code !! ");
                        message_value = "COLLCD";
                    }

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
</script>
<script>
    function AddRowSIZE(urlstring, id) {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddRowSIZE", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivSIZE").animate({ marginTop: '-10px' }, 50);
                $("#partialdivSIZE").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }

</script>
<script>
    function DeleteRowSIZE(urlstring, id) {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteRowSIZE", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivSIZE").animate({ marginTop: '0px' }, 50);
                $("#partialdivSIZE").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }

</script>
<script>
    function AddRowPARTS(urlstring, id) {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddRowPARTS", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivPART").animate({ marginTop: '-10px' }, 50);
                $("#partialdivPART").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeleteRowPARTS(urlstring, id) {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteRowPARTS", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivPART").animate({ marginTop: '0px' }, 50);
                $("#partialdivPART").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function AddRowCOLOR(urlstring, id) {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddRowCOLOR", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivCOLOR").animate({ marginTop: '-10px' }, 50);
                $("#partialdivCOLOR").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeleteRowCOLOR(urlstring, id) {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteRowCOLOR", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivCOLOR").animate({ marginTop: '0px' }, 50);
                $("#partialdivCOLOR").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }

</script>
<script>
    function AddRowINVCD(urlstring, id) {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddRowINVCD", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivINVCD").animate({ marginTop: '-10px' }, 50);
                $("#partialdivINVCD").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeleteRowINVCD(urlstring, id) {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteRowINVCD", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivINVCD").animate({ marginTop: '0px' }, 50);
                $("#partialdivINVCD").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function AddRowMEASURE(urlstring, id) {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddRowMEASURE", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivMeasurement").animate({ marginTop: '-10px' }, 50);
                $("#partialdivMeasurement").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function DeleteRowMEASURE(urlstring, id) {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteRowMEASURE", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivMeasurement").animate({ marginTop: '0px' }, 50);
                $("#partialdivMeasurement").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function SelectSIZECODE(id, SIZECD_, SIZENM_, BARCODE_) {
        if (id == "") {
            $("#" + SIZENM_.id).val("");
            $("#" + BARCODE_.id).val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetSizeDetails",PageControllerName)",
                data: {
                    val: id
                },
                success: function (result) {
                    var MSG = result.indexOf(String.fromCharCode(181));
                    if (MSG >= 0) {
                        $("#tempHDD").val(result);
                        var str = $("#tempHDD").val().split(String.fromCharCode(181));
                        $("#" + SIZECD_.id).val(str[0]);
                        $("#" + SIZENM_.id).val(str[1].toString());
                        $("#" + BARCODE_.id).val(str[2].toString());
                    }
                    else {
                        $("#" + SIZENM_.id).val("");
                        $("#" + BARCODE_.id).val("");
                        $("#" + SIZECD_.id).val("");
                        msgInfo("Invalid Size Code !!");
                        message_value = SIZECD_.id;
                    }

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
</script>
<script>
    function inputUOM(id, id1) {
        var str = $("#tempHDD").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
    }
    function SelectUOMCode(id, UOMCD, UOMNM) {
        if (id == "") {
            $("#UOMCD").val("");
            $("#UOMNM").val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetUOMDetails", PageControllerName)",
                data: {
                    val: id
                },
                success: function (result) {
                    var MSG = result.indexOf(String.fromCharCode(181));
                    if (MSG >= 0) {
                        $("#tempHDD").val(result);
                        inputUOM(UOMCD, UOMNM);
                    }
                    else {
                        $("#UOMCD").val("");
                        $("#UOMNM").val("");
                        msgInfo("Invalid  UOM Code !!");
                        message_value = "UOMCD";
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
</script>
<script>
    function AddDOCrow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddDOCRow", PageControllerName )",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '-10px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeleteDOCrow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteDOCRow", PageControllerName )",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '0px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function input(id, id1) {
        var str = $("#tempHDD").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
    }
    function SelectBrandCode(id, BRANDCD, BRANDNM) {
        if (id == "") {
            $("#BRANDNM").val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetBrandDetails", PageControllerName)",
                data: {
                    val: id
                },
                success: function (result) {
                    var MSG = result.indexOf(String.fromCharCode(181));
                    if (MSG >= 0) {
                        $("#tempHDD").val(result);
                        input(BRANDCD, BRANDNM);
                    }
                    else {
                        $("#BRANDCD").val("");
                        $("#BRANDNM").val("");
                        msgInfo("Invalid Brand Code !!");
                        message_value = "BRANDCD";
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
</script>
<script>
    debugger;
    function GetFabItcd(id) {
        if ("@Model.DefaultAction" != "V") {
            debugger;
            if (id == "") {
                ClearAllTextBoxes("FABITCD,FABITNM,FABSTYLENO,FABUOMNM");
            }
            else {
                var linkcd = $("#fabitcdlinkcd").val();
                $.ajax({
                    type: 'POST',
                    beforesend: $("#WaitingMode").show(),
                    url: "@Url.Action("GetItemDetails", PageControllerName)",
                    data: "&Code=" + linkcd + "&val=" + id,
                    success: function (result) {
                        var MSG = result.indexOf('#helpDIV');
                        if (MSG >= 0) {
                            ClearAllTextBoxes("FABITCD,FABITNM,FABSTYLENO,FABUOMNM");
                            $('#SearchFldValue').val("FABITCD");
                            $('#helpDIV').html(result);
                            $('#ReferanceFieldID').val("FABITCD/FABITNM/FABSTYLENO/FABUOMNM");
                            $('#ReferanceColumn').val("2/1/0/3");
                            $('#helpDIV_Header').html("Facbric Item Details");
                        }
                        else {
                            var MSG = result.indexOf(String.fromCharCode(181));
                            if (MSG >= 0) {
                                $("#FABITCD").val(returncolvalue(result, "itcd"));
                                $("#FABITNM").val(returncolvalue(result, "itnm"));
                                $("#FABSTYLENO").val(returncolvalue(result, "styleno"));
                                $("#FABUOMNM").val(returncolvalue(result, "uomcd"));
                                if ($("#HSNCODE").val() == "") {
                                    $("#HSNCODE").val(returncolvalue(result, "hsncode"));
                                }
                            }
                            else {
                                $('#helpDIV').html("");
                                msgInfo("" + result + " !");
                                ClearAllTextBoxes("FABITCD,FABITNM,FABSTYLENO,FABUOMNM");
                                message_value = "FABITCD";
                            }
                        }
                        $("#WaitingMode").hide();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $("#WaitingMode").hide();
                        msgError(XMLHttpRequest.responseText);
                        $("body span h1").remove(); $("#msgbody_error style").remove();
                    }
                });
            }
        }
    }
</script>


<script>
    function show_name() {
        var des = document.getElementById("QUALITY").value;
        $("#ITNM").val(des);
    }

</script>
<script>

    function pageprinting() {
        $("#btnprint").click();
    }
</script>
<script>
    function SetEffdt() {
        var effdt = $("#PRICES_EFFDTDROP").val();
        $("#PRICES_EFFDT").val(effdt);
    }
</script>
<script>
    function fillPricesGrid() {
        if (!emptyFieldCheck("Enter Effective Date", "PRICES_EFFDT")) { return false; }
        $.ajax({
            type: 'POST',
            url: "@Url.Action("GeneratePrices", PageControllerName )",
            beforesend: $("#WaitingMode").show(),
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivPriceList").animate({ marginTop: '0px' }, 50);
                $("#partialdivPriceList").html(result);
                $("#WaitingMode").hide();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeletePriceList() {
        if (!emptyFieldCheck("Enter Effective Date", "PRICES_EFFDT")) { return false; }
        if (!confirm("Are you sure to delete pricelist?")) {
            return false;
        }
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeletePrices", PageControllerName )",
            beforesend: $("#WaitingMode").show(),
            data: $('form').serialize(),
            success: function (result) {
                var MSG = result.indexOf('exampleItemPrices');
                if (MSG >= 0) {
                    $("#partialdivPriceList").animate({ marginTop: '0px' }, 50);
                    $("#partialdivPriceList").html(result);
                    $("#WaitingMode").hide();
                    msgInfo("Prices Deleted Successfully..");
                }
                else {
                    msgInfo("" + result + " !");
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>

@section Scripts {
    <script>
        function ReloadWithData() {
            var searchValue = $('#SEARCH_ITCD').val();
            var url = window.location.href;
            var key1 = "searchValue";
            url = updateQueryStringParameter(url, key1, searchValue);
            url = updateQueryStringParameter(url, "loadItem", "Y");
            window.location = url;
        }
    </script>
}
@using (Html.BeginForm())
{
    if (Model.DefaultView == true)
    {
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <input type="hidden" id="btnSave" value="@Url.Action("SAVE", PageControllerName)" />
            <input type="hidden" id="srhpnl" value="@Url.Action("SearchPannelData", PageControllerName)" />
            <input type="submit" id="btnprint" formtarget="_blank" style="display:none" />
            <input type="hidden" id="fabitcdlinkcd" value="C" />
            @Html.HiddenFor(s => s.DefaultAction)
            @Html.HiddenFor(a => a.M_SITEM.M_AUTONO)
            @Html.HiddenFor(a => a.STRPRICES)
            <ul class="nav nav-tabs">
                <li class="active"><a data-toggle="tab" href="#Standard">Standard</a></li>
                <li><a data-toggle="tab" href="#Size">Size</a></li>
                @*<li><a data-toggle="tab" href="#AssortedSize">Assorted Size</a></li>*@
                <li><a data-toggle="tab" href="#Color">Color</a></li>
                <li><a data-toggle="tab" href="#Parts">Parts</a></li>
                <li><a data-toggle="tab" href="#BarCode">Bar Codes</a></li>
                <li><a data-toggle="tab" href="#Measurement">Measurement</a></li>
                <li><a data-toggle="tab" href="#PriceList">Price List</a></li>
                <li><a data-toggle="tab" href="#Documents">Documents</a></li>
            </ul>
            <div class="tab-content">
                <div id="Standard" class="tab-pane fade in active" style="margin-top: 10px;">
                    <div class="col-lg-9">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Item Code")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field" style="">

                                    @Html.EditorFor(model => model.M_SITEM.ITCD, new { htmlAttributes = new { @class = "form-control", id = "ITCD", @style = "text-transform:uppercase;", maxlength = 8, @placeholder = "Code", @readonly = "readonly", @TabIndex = -1 } })
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Design No")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SITEM.STYLENO, new { htmlAttributes = new { @class = "form-control", id = "STYLENO", @style = "", maxlength = 30, @onkeyup = "toUpper(this);", @placeholder = "Design" } })
                                </div>
                            </div>
                            @*<div class="row">*@
                            @if (Model.DefaultAction == "A")
                            {
                                <div class="col-md-6">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Copy from another")
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.SEARCH_ITCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SEARCH_ITCD", onkeydown = "GetHelpBlur('" + @Url.Action("SearchItemData", PageControllerName) + "','Item Details','SEARCH_ITCD','SEARCH_ITCD=itcd=2')", onblur = "GetHelpBlur('" + @Url.Action("SearchItemData", PageControllerName) + "','Item Details','SEARCH_ITCD','SEARCH_ITCD=itcd=2');", @placeholder = "Code", maxlength = 8 } })
                                        <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("SearchItemData", PageControllerName)','Item Details','SEARCH_ITCD','SEARCH_ITCD=itcd=2')" />
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="editor-field">
                                        <input type="button" value="Copy from previous" class="btn-sm" onclick="ReloadWithData()">
                                    </div>
                                </div>
                            }
                            @*</div>*@

                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Item Group Code")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SITEM.ITGRPCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "ITGRPCD", maxlength = 4, onkeyup = "GetHelp('" + @Url.Action("GetItemGroupDetails", PageControllerName) + "','ITGRPCD/ITGRPNM/BRANDCD/BRANDNM','1/0/3/4','Select Group Details','ITGRPCD');", onblur = "SelectItemGroupCode(this.value,ITGRPCD,ITGRPNM,BRANDCD,BRANDNM);", @placeholder = "Code" } })
                                    <img src="~/Image/search.png" style="margin-top: 5px;" width="20px" height="20px" class="Help_image_button" title="Help" onclick="GetHelp('@Url.Action("GetItemGroupDetails", PageControllerName)','ITGRPCD/ITGRPNM/BRANDCD/BRANDNM','1/0/3/4','Select Group Details','ITGRPCD')" />
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_GROUP.ITGRPNM, new { htmlAttributes = new { @class = "form-control", id = "ITGRPNM", maxlength = 30, @title = "Only for View", @placeholder = "Item Group Name", @readonly = "readonly", @TabIndex = -1 } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Name")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-11">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SITEM.ITNM, new { htmlAttributes = new { @class = "form-control", id = "ITNM", @placeholder = "Item Name", maxlength = 60, @readonly = "readonly", @TabIndex = -1 } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Brand Code")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SITEM.BRANDCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "BRANDCD", onblur = "SelectBrandCode(this.value,BRANDCD,BRANDNM);", @placeholder = "Code", onkeyup = "GetHelp('" + @Url.Action("GetBrandDetails", PageControllerName) + "','BRANDCD/BRANDNM','1/0','Brand Details','BRANDCD');toUpper(this);", maxlength = 4 } })
                                    <img src="~/Image/search.png" width="20px" class="Help_image_button" style="margin-top: 5px;" height="20px" title="Help" onclick="GetHelp('@Url.Action("GetBrandDetails", PageControllerName )','BRANDCD/BRANDNM','1/0','Brand Details','BRANDCD')" />
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_BRAND.BRANDNM, new { htmlAttributes = new { @class = "form-control", id = "BRANDNM", maxlength = 15, @title = "Only for View", @placeholder = "Brand Name", @TabIndex = -1, @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Sub Brand")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SITEM.SBRANDCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SBRANDCD", maxlength = 4, onkeyup = "GetHelp_WithId('" + @Url.Action("GetSubBrandDetails", PageControllerName) + "','SBRANDCD/SBRANDNM','1/0','Select Sub Brand Details','SBRANDCD','BRANDCD');", onblur = "SelectSubBrandCode(this.value,SBRANDCD,SBRANDNM);", @placeholder = "Code" } })
                                    <img src="~/Image/search.png" style="margin-top: 5px;" width="20px" height="20px" class="Help_image_button" title="Help" onclick="GetHelp_WithId('@Url.Action("GetSubBrandDetails", PageControllerName)','SBRANDCD/SBRANDNM','1/0','Select Sub Brand Details','SBRANDCD','BRANDCD')" />
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SUBBRAND.SBRANDNM, new { htmlAttributes = new { @class = "form-control", id = "SBRANDNM", maxlength = 15, @placeholder = "Sub Brand Name", @readonly = "readonly", @TabIndex = -1 } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Description")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SITEM.QUALITY, new { htmlAttributes = new { @class = "form-control", id = "QUALITY", @placeholder = "Item Description", maxlength = 40, @onkeyup = "show_name();" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Facbric Item")
                                </div>
                            </div>
                            @*<div class="col-md-7">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.M_SITEM.STYLENO, new { htmlAttributes = new { @class = "form-control textbox_image", id = "STYLENO", maxlength = 12, onkeyup = "GetHelp('" + @Url.Action("GetItemDetails", PageControllerName) + "','STYLENO/ITNM/ITCD/UOMNM','0/1/2/3','ArticleWise Item Details','ITCD')", onblur = "SelectArticleItemCode(this.value,'STYLENO','ITCD','ITNM','UOMNM','A','');CheckArticleItem('ITCD','STYLENO','ITNM','UOMNM');", @placeholder = "Style Number" } })
                                        <img src="~/Image/search.png" width="20px" style="margin-top:5px;" height="20px" class="Help_image_button" id="STYLE_HELP" title="Help" onclick="GetHelp('@Url.Action("GetItemDetails", PageControllerName)','STYLENO/ITNM/ITCD/UOMNM','0/1/2/3','ArticleWise Item Details','ITCD','A')" />
                                    </div>
                                </div>*@
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SITEM.FABITCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "FABITCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetItemDetails", PageControllerName) + "','Facbric Item Details','FABITCD','FABITCD=itcd=2/FABITNM=itnm=1/FABSTYLENO=styleno=0/FABUOMNM=uomcd=3','fabitcdlinkcd')", onblur = "GetFabItcd(this.value);", @placeholder = "Code", maxlength = 8 } })
                                    <img src="~/Image/search.png" id="SLCD_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetItemDetails", PageControllerName)','Facbric Item Details','FABITCD','FABITCD=itcd=2/FABITNM=itnm=1/FABSTYLENO=styleno=0/FABUOMNM=uomcd=3','fabitcdlinkcd')" />

                                </div>
                            </div>
                            <div class="col-md-11">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.FABITNM, new { htmlAttributes = new { @class = "form-control", id = "FABITNM", maxlength = 60, @TabIndex = -1, @title = "Only for View", @placeholder = "Item Name", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.FABSTYLENO, new { htmlAttributes = new { @class = "form-control", id = "FABSTYLENO", maxlength = 30, @TabIndex = -1, @title = "Only for View", @placeholder = "Design Number", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.FABUOMNM, new { htmlAttributes = new { @class = "form-control textbox_image", id = "FABUOMNM", @placeholder = "UOM", maxlength = 5, @TabIndex = -1, @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-labelemp" style="margin-top:0px;margin-bottom: -5px;">
                                    @Html.Label("", "HSN Code")
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SITEM.HSNCODE, new { htmlAttributes = new { @class = "form-control", id = "HSNCODE", @placeholder = "HSNSACCD", maxlength = 8, @list = "hsncode" } })
                                    <datalist id="hsncode">
                                        @foreach (var jg in Model.Database_Combo1)
                                        {
                                            <option value="@jg.FIELD_VALUE" />
                                        }
                                    </datalist>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "UOM")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SITEM.UOMCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "UOMCD", onkeyup = "GetHelp('" + @Url.Action("GetUOMDetails", PageControllerName) + "','UOMCD/UOMNM','1/0','Select UOM Details','UOMCD');toUpper(this);", onblur = "SelectUOMCode(this.value,UOMCD,UOMNM);", @placeholder = "Code", maxlength = 3, required = "required" } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onclick="GetHelp('@Url.Action("GetUOMDetails", PageControllerName)','UOMCD/UOMNM','1/0','Select UOM Details','UOMCD')" />
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_UOM.UOMNM, new { htmlAttributes = new { @class = "form-control", id = "UOMNM", maxlength = 5, @TabIndex = -1, @title = "Only for View", @placeholder = "UOM Description", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Color")
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SITEM.COLRCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "COLRCD", maxlength = 4, onkeyup = "GetHelp('" + @Url.Action("GetColorDetails", PageControllerName) + "','COLRCD/COLRNM','1/0','Select Color Details','COLRCD');", onblur = "SelectColorCode(this.value,COLRCD,COLRNM);", @placeholder = "Code" } })
                                    <img src="~/Image/search.png" style="margin-top: 5px;" width="20px" height="20px" class="Help_image_button" title="Help" onclick="GetHelp('@Url.Action("GetColorDetails", PageControllerName)','COLRCD/COLRNM','1/0','Select Color Details','COLRCD')" />
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_COLOR.COLRNM, new { htmlAttributes = new { @class = "form-control", id = "COLRNM", maxlength = 20, @TabIndex = -1, @placeholder = "Color Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Product Type")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    <select id="protyp" name="protyp" class="form-control">
                                        <option value="0" selected="selected">====Select====</option>
                                        @foreach (var i in Model.ProductType)
                                        {
                                            if (Model.DefaultAction == "A" && Model.M_SITEM == null)
                                            {
                                                <option value="@i.value">@i.text</option>
                                            }
                                            else
                                            {
                                                if (Model.M_SITEM.PRODUCTTYPE == i.value)
                                                {
                                                    <option value="@i.value" selected="selected">@i.text</option>
                                                }
                                                else
                                                {
                                                    <option value="@i.value">@i.text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-3" style="margin-right:-21px;">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Gender")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    <select id="gender" name="gender" class="form-control">
                                        <option value="0" selected="selected">====Select====</option>
                                        @foreach (var i in Model.Gender)
                                        {
                                            if (Model.DefaultAction == "A" && Model.M_SITEM == null)
                                            {
                                                <option value="@i.value">@i.text</option>
                                            }
                                            else
                                            {
                                                if (Model.M_SITEM.GENDER == i.value)
                                                {
                                                    <option value="@i.value" selected="selected">@i.text</option>
                                                }
                                                else
                                                {
                                                    <option value="@i.value">@i.text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Collection Name")
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SITEM.COLLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "COLLCD", maxlength = 4, onkeyup = "GetHelp('" + @Url.Action("GetCollectionDetails", PageControllerName) + "','COLLCD/COLLNM','1/0','Select Collection Details','COLLCD');", onblur = "SelectCollectionCode(this.value,COLLCD,COLLNM);", @placeholder = "Code" } })
                                    <img src="~/Image/search.png" style="margin-top: 5px;" width="20px" height="20px" class="Help_image_button" title="Help" onclick="GetHelp('@Url.Action("GetCollectionDetails", PageControllerName)','COLLCD/COLLNM','1/0','Select Collection Details','COLLCD')" />
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_COLLECTION.COLLNM, new { htmlAttributes = new { @class = "form-control", id = "COLLNM", maxlength = 30, @TabIndex = -1, @placeholder = "Collection Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Pcs. Per Box")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SITEM.PCSPERBOX, new { htmlAttributes = new { @class = "form-control", @title = "Only Numeric", id = "PCSPERBOX", @onkeypress = "return event.charCode > 47 && event.charCode < 58;", maxlength = 4, @placeholder = "eg.1,2" } })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Pcs. Per Set")
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SITEM.PCSPERSET, new { htmlAttributes = new { @class = "form-control", @title = "Only Numeric", id = "PCSPERSET", @onkeypress = "return event.charCode > 47 && event.charCode < 58;", maxlength = 4, @placeholder = "eg.1,2" } })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Colors Per Set")
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SITEM.COLRPERSET, new { htmlAttributes = new { @class = "form-control", @title = "Only Numeric", id = "COLRPERSET", @onkeypress = "return event.charCode > 47 && event.charCode < 58;", maxlength = 4, @placeholder = "eg.1,2" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "De - Active")
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-field" style="margin-top:6px;">
                                    @Html.CheckBoxFor(model => model.Checked)
                                </div>
                            </div>
                        </div>
                    </div>




                    <div class="col-lg-3">
                        @if (Model.DefaultAction == "V" || Model.DefaultAction == "E" || Model.DefaultAction == "D")
                        {
                            <div class="row">
                                <div class="editor-label" style="margin-top: 6px;text-align:center;color:#428bca;">
                                    @Html.Label("", "Product Image")
                                </div>
                            </div>

                            <div class="row" style="text-align:-webkit-center">
                                @if (Model.UploadDOC.Count != 0)
                                {
                                    if (Model.UploadDOC[0].DOC_FILE != null)
                                    {
                                        <div id="myCarousel" class="carousel slide" data-ride="carousel">
                                            <!-- Indicators -->
                                            <ol class="carousel-indicators" style="bottom:0px;">
                                                @if (Model.UploadDOC.Count != 0)
                                                {
                                                    for (int k = 0; k < Model.UploadDOC.Count; k++)
                                                    {
                                                        if (k == 0)
                                                        {
                                                            <li data-target="#myCarousel" data-slide-to="@k" class="active"></li>
                                                        }
                                                        else
                                                        {
                                                            <li data-target="#myCarousel" data-slide-to="@k"></li>
                                                        }
                                                    }
                                                }
                                            </ol>

                                            <!-- Wrapper for slides -->
                                            <div class="carousel-inner">
                                                @if (Model.UploadDOC.Count != 0)
                                                {
                                                    for (int k = 0; k < Model.UploadDOC.Count; k++)
                                                    {
                                                        if (k == 0)
                                                        {
                                                            <div class="item active " style="height:225px">
                                                                <img src="@Model.UploadDOC[k].DOC_FILE" id="emppic_@k" alt="Image is not Support this Browser" style="height:150px; width:100%; vertical-align:middle;cursor:pointer" onclick="imgpreview(this.id);">
                                                                <div class="carousel-caption" style="background: rgba(0,0,0,0.5);bottom: 1px;right:2%; left:2%;min-height:67px;padding-top:10px;padding-bottom:20px;">
                                                                    <p>@Model.UploadDOC[k].DOC_DESC</p>
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="item" style="height:225px">
                                                                <img src="@Model.UploadDOC[k].DOC_FILE" id="emppic_@k" alt="Image is not Support this Browser" style="height:150px; width:100%; vertical-align:middle;cursor:pointer" onclick="imgpreview(this.id);">
                                                                <div class="carousel-caption" style="background: rgba(0,0,0,0.5);bottom: 1px;right:2%; left:2%;min-height:67px;padding-top:10px;padding-bottom:20px;">
                                                                    <p>@Model.UploadDOC[k].DOC_DESC</p>
                                                                </div>
                                                            </div>
                                                        }

                                                    }
                                                }
                                            </div>
                                            <!-- Left and right controls -->
                                            <a class="left carousel-control" href="#myCarousel" data-slide="prev">
                                                <span class="glyphicon glyphicon-chevron-left"></span>
                                                <span class="sr-only">Previous</span>
                                            </a>
                                            <a class="right carousel-control" href="#myCarousel" data-slide="next">
                                                <span class="glyphicon glyphicon-chevron-right"></span>
                                                <span class="sr-only">Next</span>
                                            </a>
                                        </div>
                                    }
                                    else
                                    {
                                        <img src="~/Image/NoImage.jpg" id="emppic" width="190px" height="111px" style="margin-bottom: 2px;text-align:-webkit-center;" alt="No Image Found" />
                                    }
                                }
                            </div>
                        }
                    </div>
                </div>
                <div id="Size" class="tab-pane fade" style="margin-top: 10px;">
                    <div class="row" style="margin-top: 11px;width:fit-content;height:auto;background-color:#c4b9b9">
                        <div id="partialdivSIZE">
                            @Html.Partial("_M_FinProduct_SIZE")
                        </div>
                    </div>
                </div>
                <div id="Color" class="tab-pane fade" style="margin-top: 10px;">
                    <div class="row" style="margin-top: 11px;width:fit-content;height:auto;background-color:#c4b9b9">
                        <div id="partialdivCOLOR">
                            @Html.Partial("_M_FinProduct_COLOR")
                        </div>
                    </div>
                </div>
                <div id="Parts" class="tab-pane fade" style="margin-top: 10px;">
                    <div class="row" style="margin-top: 11px;width:fit-content;height:auto;background-color:#c4b9b9">
                        <div id="partialdivPART">
                            @Html.Partial("_M_FinProduct_PART")
                        </div>
                    </div>
                </div>
                <div id="BarCode" class="tab-pane fade" style="margin-top: 10px;">
                    <div class="row" style="margin-top: 11px;width:fit-content;height:auto;">
                        <div class="col-lg-8" id="partialdivINVCD">
                            @Html.Partial("_M_FinProduct_BARCD")
                        </div>
                        <div class="col-lg-4">
                            @if (Model.DefaultAction != "A")
                            {
                                <div class="row">
                                    <div class="col-lg-3" style="width:auto">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "Item Bar Code")
                                        </div>
                                    </div>
                                    <div class="col-lg-5">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.ITEM_BARCODE, new { htmlAttributes = new { @class = "form-control", id = "ITEM_BARCODE", @TabIndex = -1, @placeholder = "Item Bar Code", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div id="Measurement" class="tab-pane fade" style="margin-top: 10px;">
                    <div class="row" style="margin-top: 11px;width:fit-content;height:auto;background-color:#c4b9b9">
                        <div id="partialdivMeasurement">
                            @Html.Partial("_M_FinProduct_Measurement")
                        </div>
                    </div>
                </div>


                <div id="PriceList" class="tab-pane fade" style="margin-top: 10px;">
                    <div class="row" style="margin-top: 11px;height:auto;">
                        <div id="partialdivPriceList">
                            @Html.Partial("_M_FinProduct_Prices")
                        </div>
                    </div>
                </div>

                <div id="Documents" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                    <div class="row" style="margin-top: 11px;width:fit-content;height:auto;background-color:#c4b9b9">
                        <div id="partialdivDocument">
                            @Html.Partial("_UPLOADDOCUMENTS")
                        </div>
                    </div>
                </div>

            </div>
        </div>

    }
    else
    {
        @ViewBag.ErrorMessage
    }

    <div class="container">
        <div id="helpDIV">

        </div>
    </div>
}
