@model Improvar.ViewModels.PartyitemSummReport
@{
    ViewBag.Title = "Party & Design Summary";
    Layout = "~/Views/Shared/_ReportLayout.cshtml";
    string PageControllerName = "Rep_PartyItemSumm";
}
<script src="~/Scripts/jquery.min.js"></script>
<link rel="stylesheet" href="~/Content/jquery.stickytable.css">
<link rel="stylesheet" media="all" href="~/Content/main_layout.css?v=105" />
<script src="~/Scripts/Cloth.js?Ver=@System.DateTime.Now"></script>
<style>
    #outer {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.70);
    }

    #inner {
        /*width: 50%;
                height: 50%;*/
        top: 31%;
        margin: 0 auto;
        position: relative;
        background-color: #084267;
        border-radius: 15px;
        border: 4px solid #86abd8;
    }

    #outerP {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.70);
        display: none;
    }

    #innerP {
        /*width: 50%;
                height: 50%;*/
        top: 26%;
        margin: 0 auto;
        position: relative;
        background-color: #f8fbb3;
        border-radius: 15px;
        border: 4px solid #86abd8;
    }

    #outerS {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.70);
        display: none;
    }

    #innerS {
        /*width: 50%;
                height: 50%;*/
        top: 26%;
        margin: 0 auto;
        position: relative;
        background-color: #f8fbb3;
        border-radius: 15px;
        border: 4px solid #86abd8;
    }

    #outerR {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.70);
        display: none;
    }

    #innerR {
        /*width: 50%;
                height: 50%;*/
        top: 26%;
        margin: 0 auto;
        position: relative;
        background-color: #f8fbb3;
        border-radius: 15px;
        border: 4px solid #86abd8;
    }

    #outerT {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.70);
        display: none;
    }

    #innerT {
        /*width: 50%;
                height: 50%;*/
        top: 26%;
        margin: 0 auto;
        position: relative;
        background-color: #f8fbb3;
        border-radius: 15px;
        border: 4px solid #86abd8;
    }

    .centered_imageDIV {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .container_imageDIV {
        position: relative;
        text-align: center;
        color: white;
    }

    .active {
        background-color: #000;
        color: #fff;
    }

    .tabtitle {
        float: right;
        height: 30px;
        background: linear-gradient(#86abd8,#244976);
        width: 80px;
        color: white;
        font-size: 11px;
        font-weight: bold;
        vertical-align: central;
        text-align: center;
        border-bottom-left-radius: 15px;
        border-top-right-radius: 10px;
        line-height: 2;
    }

    .tabtitle1 {
        float: right;
        height: 30px;
        background: linear-gradient(#86abd8,#244976);
        width: 150px;
        color: white;
        font-size: 11px;
        font-weight: bold;
        vertical-align: central;
        text-align: center;
        border-bottom-left-radius: 15px;
        line-height: 2;
    }

    .motherdiv {
        width: 40%;
        margin-top: 20px;
    }

    .tabletd {
        padding-left: 5px;
        width: 70%;
        font-size: 12px;
    }

    .tabletd1 {
        padding-left: 5px;
        width: 30%;
        border-right: 1px solid white;
        font-size: 12px;
    }

    .tabletr {
        height: 30px;
    }

    @@media (max-width: 775px) {
        .motherdiv {
            width: 98%;
            padding-left: 10px;
        }

        .tabletd {
            padding-left: 5px;
            width: 70%;
            font-size: 10px;
            margin-top: 6px;
        }

        .tabletd1 {
            padding-left: 5px;
            width: 30%;
            border-right: 1px solid white;
            font-size: 10px;
            margin-top: 6px;
        }

        .tabletr {
            height: 30px;
        }
    }

    }
</style>
<style>
    /* The container */
    .containerCK {
        display: block;
        position: relative;
        padding-left: 30px;
        margin-bottom: 1px;
        cursor: pointer;
        font-size: 17px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        /* Hide the browser's default radio button */
        .containerCK input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

    /* Create a custom radio button */
    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 20px;
        width: 20px;
        background-color: #eee;
        border-radius: 50%;
    }

    /* On mouse-over, add a grey background color */
    .containerCK:hover input ~ .checkmark {
        background-color: #ccc;
    }

    /* When the radio button is checked, add a blue background */
    .containerCK input:checked ~ .checkmark {
        background-color: #2196F3;
    }

    /* Create the indicator (the dot/circle - hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the indicator (dot/circle) when checked */
    .containerCK input:checked ~ .checkmark:after {
        display: block;
    }

    /* Style the indicator (dot/circle) */
    .containerCK .checkmark:after {
        top: 6px;
        left: 6px;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background: white;
    }
</style>
<style>
    .menu {
        position: absolute;
        width: 200px;
        padding: 2px;
        margin: 0;
        border: 1px solid #bbb;
        background: #eee;
        background: -webkit-linear-gradient(to bottom, #fff 0%, #e5e5e5 100px, #e5e5e5 100%);
        background: linear-gradient(to bottom, #fff 0%, #e5e5e5 100px, #e5e5e5 100%);
        z-index: 100;
        border-radius: 3px;
        box-shadow: 1px 1px 4px rgba(0,0,0,.2);
        opacity: 0;
        -webkit-transform: translate(0, 15px) scale(.95);
        transform: translate(0, 15px) scale(.95);
        transition: transform 0.1s ease-out, opacity 0.1s ease-out;
        pointer-events: none;
    }

    .menu1 {
        position: absolute;
        width: 220px;
        padding: 2px;
        margin: 0;
        border: 1px solid #bbb;
        background: #eee;
        background: -webkit-linear-gradient(to bottom, #fff 0%, #e5e5e5 100px, #e5e5e5 100%);
        background: linear-gradient(to bottom, #fff 0%, #e5e5e5 100px, #e5e5e5 100%);
        z-index: 100;
        border-radius: 3px;
        box-shadow: 1px 1px 4px rgba(0,0,0,.2);
        opacity: 0;
        -webkit-transform: translate(0, 15px) scale(.95);
        transform: translate(0, 15px) scale(.95);
        transition: transform 0.1s ease-out, opacity 0.1s ease-out;
        pointer-events: none;
    }

    .menu2 {
        position: absolute;
        width: 220px;
        padding: 2px;
        margin: 0;
        border: 1px solid #bbb;
        background: #eee;
        background: -webkit-linear-gradient(to bottom, #fff 0%, #e5e5e5 100px, #e5e5e5 100%);
        background: linear-gradient(to bottom, #fff 0%, #e5e5e5 100px, #e5e5e5 100%);
        z-index: 100;
        border-radius: 3px;
        box-shadow: 1px 1px 4px rgba(0,0,0,.2);
        opacity: 0;
        -webkit-transform: translate(0, 15px) scale(.95);
        transform: translate(0, 15px) scale(.95);
        transition: transform 0.1s ease-out, opacity 0.1s ease-out;
        pointer-events: none;
    }

    .menu-item {
        display: block;
        position: relative;
        margin: 0;
        padding: 0;
        white-space: nowrap;
    }

    .menu-btn {
        background: none;
        line-height: normal;
        overflow: visible;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        display: block;
        width: 100%;
        color: #444;
        font-family: 'Roboto', sans-serif;
        font-size: 13px;
        text-align: left;
        cursor: pointer;
        border: 1px solid transparent;
        white-space: nowrap;
        padding: 6px 8px;
        border-radius: 3px;
    }

        .menu-btn::-moz-focus-inner, .menu-btn::-moz-focus-inner {
            border: 0;
            padding: 0;
        }

    .menu-text {
        margin-left: 25px;
    }

    .menu-btn .fa {
        position: absolute;
        left: 8px;
        top: 50%;
        -webkit-transform: translateY(-50%);
        transform: translateY(-50%);
    }

    .menu-item:hover > .menu-btn {
        color: #fff;
        outline: none;
        background-color: #2E3940;
        background: -webkit-linear-gradient(to bottom, #5D6D79, #2E3940);
        background: linear-gradient(to bottom, #5D6D79, #2E3940);
        border: 1px solid #2E3940;
    }

    .menu-item.disabled {
        opacity: .5;
        pointer-events: none;
    }

        .menu-item.disabled .menu-btn {
            cursor: default;
        }

    .menu-separator {
        display: block;
        margin: 7px 5px;
        height: 1px;
        border-bottom: 1px solid #fff;
        background-color: #aaa;
    }

    .menu-item.submenu::after {
        content: "";
        position: absolute;
        right: 6px;
        top: 50%;
        -webkit-transform: translateY(-50%);
        transform: translateY(-50%);
        border: 5px solid transparent;
        border-left-color: #808080;
    }

    .menu-item.submenu:hover::after {
        border-left-color: #fff;
    }

    .menu .menu {
        top: 4px;
        left: 99%;
    }

    .show-menu, .menu-item:hover > .menu {
        opacity: 1;
        -webkit-transform: translate(0, 0) scale(1);
        transform: translate(0, 0) scale(1);
        pointer-events: auto;
    }

    .menu-item:hover > .menu {
        -webkit-transition-delay: 100ms;
        transition-delay: 300ms;
    }
</style>
<script>
    var start = null;
    var totalRow = null;
    //$(document).ready(function () {
    //    resizableTables[resizableTables.length] = new ColumnResize(document.getElementById('available_GRP'));
    //    $("td").on("mouseover", function (e)
    //    {
    //        var titlee = $(this).find("input").val();
    //        $(this).attr('title', titlee);
    //    });
    //});

    function dotheneedful(sibling) { //for row selection
        if (sibling != null) {
            start.focus();
            start.style.backgroundColor = '';
            start.style.color = '';
            sibling.focus();
            sibling.style.backgroundColor = '#86d2f7';
            sibling.style.color = 'white';
            start = sibling;
        }
    }
    function dotheneedfulDown(sibling, index, CheckBoxNM) {
        if (sibling != null) {
            sibling.focus();
            sibling.style.backgroundColor = '#86d2f7';
            sibling.style.color = 'white';
            start = sibling;
            document.getElementById(CheckBoxNM + index).checked = true;
        }
    }
    function dotheneedfulUp(sibling, index, CheckBoxNM) {
        if (sibling != null) {
            start.focus();
            start.style.backgroundColor = '';
            start.style.color = '';
            start = sibling;
            document.getElementById(CheckBoxNM + index).checked = false;
        }
    }
    function checkKey(e, tableNM, checkboxNM) {
        e = e || window.event;
        var keyCode = e.keyCode || e.which,
      arrow = { left: 37, up: 38, right: 39, down: 40 };
        if (e.ctrlKey) {
            switch (keyCode) {
                case arrow.up:
                    var idx = start.rowIndex;
                    idx -= 1;
                    if (idx >= 1) {
                        var sibling = document.getElementById(tableNM + idx);
                        dotheneedfulUp(sibling, idx, checkboxNM);
                    }
                    else {
                        idx += 1;
                        var sibling = document.getElementById(tableNM + idx);
                        dotheneedfulUp(sibling, idx - 1, checkboxNM);
                    }
                    break;
                case arrow.down:
                    var idx = start.rowIndex;
                    idx += 1;
                    if (idx <= totalRow) {
                        var sibling = document.getElementById(tableNM + idx);
                        dotheneedfulDown(sibling, idx - 1, checkboxNM);
                    }
                    else {
                        idx -= 1;
                    }
                    break;
            }
        }
    }
    function Rmenu(id, val, flg, liid) {
        var menu = null;
        if (flg == 1) {
            menu = document.querySelector('.menu');
        }
        else if (flg == 2) {
            menu = document.querySelector('.menu1');
        }
        else {
            menu = document.querySelector('.menu2');
        }
        function showMenu(x, y) {
            var position = $('#MTREE').position();
            var sh = position.top + 395;
            var ch = menu.clientHeight;
            menu.style.left = x + 'px';
            if (y + ch > sh) {
                menu.style.top = (y - ch) + 'px';
            }
            else {
                menu.style.top = y + 'px';
            }
            menu.classList.add('show-menu');
        }
        function hideMenu() {
            menu.classList.remove('show-menu');
            menu.style.left = '-1000px';
            menu.style.top = '-1000px';
        }

        function onContextMenu(e, val, liid) {
            e.preventDefault();
            showMenu(e.pageX, e.pageY);
            document.addEventListener('click', onClick, false);
            document.getElementById("ParameterVal").value = val;
            document.getElementById("ParameterVal1").value = liid;
        }

        function onClick(e) {
            hideMenu();
            document.removeEventListener('click', onClick);
        }

        document.getElementById(id).addEventListener('contextmenu', function () { onContextMenu(event, val, liid) }, false);

    }
    function IndivedulaCheckBoxCheck(obj, index, tablename) {
        totalRow = $("#" + tablename + " tbody tr").length;
        if (obj.checked == true) {
            start = document.getElementById(tablename + (index + 1));
            //start.style.backgroundColor = '#86d2f7';
            start.focus();
        }
        else {
            start = document.getElementById(tablename + (index + 1));
            start.style.backgroundColor = '';
            start.focus();
        }
        GetItemDetails();
    }
</script>
<script>
    function btn_submit() {
        debugger;
        if (!emptyFieldCheck("Please Select / Enter Party Code", "SLCD")) { return false; }
        var party = $("#SLCD").val(), frmdt = $("#FDT").val(), todt = $("#TDT").val(), group = $("#ITGRPCDvalue").val(), loc = $("#loccdvalue").val(), sp = $('[id="SALPUR"]:checked').val();
        var partynm = $("#SLNM").val();
        var chkbx = "";
        var CHECK = document.getElementById("CHECK").checked;
        if (CHECK == true) {
            chkbx = "Y";
        }
        $.ajax({
            type: 'get',
            url: $("#urlbtnsubmit").val(),
            beforesend: $("#WaitingMode").show(),
            data: {
                slcd: party, fdt: frmdt, tdt: todt, check: chkbx, itgrpcd: group, slnm: partynm, location: loc, salpur: sp
            },
            success: function (result) {
                result = result;
                $("#WaitingMode").hide();
                window.location = result;
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                $('#helpDIV').html("");
                msgError("Error: " + textStatus + "," + errorThrown);
            }
        });
        return false;
    }

    function GetItemDetails() {
        debugger;
        var party = $("#SLCD2").val(), frmdt = $("#FDT2").val(), todt = $("#TDT2").val(), group = $("#ITGRPCD2").val(), loc = $("#LOCATION2").val(), salpur = $("#SALPUR2").val();
        var CHECK = $("#ONLYSALES2").val();
        var item = "", itemnm = "";
        var GridRow = $("#available_GRP > tbody > tr").length;
        if (GridRow != 0) {
            for (var i = 0; i <= GridRow - 1; i++) {
                var chaked = document.getElementById("Checked_" + i).checked;
                if (chaked == true) {
                    if (item != "") {
                        item += ",";
                        itemnm += ",";
                    }
                    item += "'" + $("#itcd_" + i).val() + "'";
                    itemnm += $("#styleno_" + i).val();
                }
            }
        }
        if (item == "") {
            $("#ItemBody").html('');
            $("#ItemFoot").html('');
            $("#ItemHead").html('Item :');
        }
        else {
            $.ajax({
                type: 'get',
                url: "@Url.Action("GetItemData", PageControllerName)",
                beforesend: $("#WaitingMode").show(),
                data: {
                    slcd: party, fdt: frmdt, tdt: todt, check: CHECK, itgrpcd: group, itcd: item, itnm: itemnm, LOCATION: loc, SALPUR: salpur
                },
                success: function (result) {
                    $("#WaitingMode").hide();
                    $("#partial_existing").html(result);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError("Error: " + textStatus + "," + errorThrown);
                }
            });
        }

    }

</script>
<script>
    function input(id, id1) {
        var str = $("#tempHDD").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
    }
    function SelectGLHDGRPCD(id, GLHDGRPCD, GLHDGRPNM) {
        if (id == "") {
            $("#GLHDGRPNM").val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: $("#urlname").val(),
                data: {
                    val: id
                },
                success: function (result) {
                    if (result == "0") {
                        msgInfo("Invalid Code!");
                        $("#GLHDGRPCD").val("");
                        $("#GLHDGRPNM").val("");
                        message_value = "GLHDGRPCD";
                    }
                    else {
                        $("#tempHDD").val(result);
                        input(GLHDGRPCD, GLHDGRPNM);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError("Error: " + textStatus + "," + errorThrown);
                }
            });
        }
    }
</script>
<style>
    /* ————————————————————–
                    Tree core styles
                  */
    .noselect {
        -webkit-touch-callout: none; /* iOS Safari */
        -webkit-user-select: none; /* Safari */
        -khtml-user-select: none; /* Konqueror HTML */
        -moz-user-select: none; /* Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
        user-select: none; /* Non-prefixed version, currently
                                      supported by Chrome and Opera */
    }

    .tree {
        margin: 1em;
    }

        .tree input {
            position: absolute;
            clip: rect(0, 0, 0, 0);
        }

            .tree input ~ ul {
                display: none;
            }

            .tree input:checked ~ ul {
                display: block;
            }

        /* ————————————————————–
                    Tree rows
                  */
        .tree li {
            line-height: 0.5;
            position: relative;
            padding: 0 0 1em 1em;
        }

        .tree ul li {
            padding: 1em 1em 0 1em;
        }

        .tree > li:last-child {
            padding-bottom: 0;
            top: 0px;
        }

        .tree ul, ol {
            margin-top: -5px;
            margin-left: -1px;
            /*margin-bottom: 10px;*/
        }

        .tree label {
            margin-bottom: -2px;
            margin-top: -2px;
        }
    /* ————————————————————–
                    Tree labels
                  */
    .tree_label {
        position: relative;
        display: inline-block;
        background-color: transparent;
        color: #000;
        font-weight: bold;
    }

    .default_label {
        position: relative;
        display: inline-block;
        background-color: transparent;
        color: #000;
        font-weight: bold;
        cursor: pointer;
        font-size: 10px;
    }

    label.tree_label {
        cursor: pointer;
    }

        label.tree_label:hover {
            color: #000;
        }

    /*span.tree_label:hover {
                  color: #fff;
              }*/

    span.tree_label {
        cursor: pointer;
        color: #080808;
        font-weight: bold;
    }

    /* ————————————————————–
                    Tree expanded icon
                  */
    label.tree_label:before {
        background: Red;
        color: #fff;
        position: relative;
        z-index: 1;
        float: left;
        margin: 0 1em 0 -2em;
        width: 1em;
        height: 1em;
        border-radius: 1em;
        content: '+';
        text-align: center;
        line-height: .9em;
    }

    :checked ~ label.tree_label:before {
        content: '–';
    }

    /* ————————————————————–
                    Tree branches
                  */
    .tree li:before {
        position: absolute;
        top: 2px;
        bottom: -5px;
        left: -.5em;
        display: block;
        width: 0;
        border-left: 1px solid #000;
        content: "";
    }

    .tree_label:after {
        position: absolute;
        top: 2px;
        left: -1.5em;
        display: block;
        height: 0.5em;
        width: 1em;
        border-bottom: 1px solid #000;
        border-left: 1px solid #000;
        border-radius: 0 0 0 .3em;
        content: '';
    }

    label.tree_label:after {
        border-bottom: 0;
    }

    :checked ~ label.tree_label:after {
        border-radius: 0 .3em 0 0;
        border-top: 1px solid #000;
        border-right: 1px solid #000;
        border-bottom: 0;
        border-left: 0;
        bottom: -2px;
        top: 0.5em;
        height: auto;
    }

    .tree li:last-child:before {
        height: 1em;
        bottom: auto;
    }

    .tree > li:last-child:before {
        display: none;
    }

    .tree_custom {
        display: block;
        background: #eee;
        padding: 1em;
        border-radius: 0.3em;
    }

    .menubutton {
        display: block;
        width: 22px;
        height: 2px;
        border-radius: 1px;
    }

    .div-sr {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0 0 0 0);
        border: 0;
    }

    .a {
        color: blue;
    }

    .fileimg {
        width: 16px;
        height: 16px;
        margin-bottom: -2px;
    }

    .groupimg {
        width: 24px;
        height: 17px;
        margin-bottom: 4px;
    }

    .highlight {
        background: red;
    }
</style>

<script>
    function createMain() {
        $("#outerP").show();
        document.getElementById("MGNM").focus();
    }
    function createSub() {
        $("#outerS").show();
        document.getElementById("SGNM").focus();
    }
    function createIndex() {
        $("#outerT").show();
    }
    function Rename() {
        debugger;
        //Parent: $("#ParameterVal").val(),
        var id = $("#ParameterVal").val();
        $.ajax({
            type: 'get',
            url: "@Url.Action("GetGRPCDDTL", PageControllerName)",
            beforesend: $("#WaitingMode").show(),
            data: {
                Parent: id,
            },
            success: function (result) {
                $("#RENM").val(returncolvalue(result, "GRPNM"));
                $("#SEGNMDTL").val(returncolvalue(result, "GRPNMDTL"));
                $("#SEGBA").val(returncolvalue(result, "BUDGTAMT"));
                $("#WaitingMode").hide();
                //window.location = result;
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                $('#helpDIV').html("");
                msgError("Error: " + textStatus + "," + errorThrown);
            }
        });

        $("#outerR").show();
        document.getElementById("RENM").focus();
    }
    function MGClose() {
        $("#outerP").hide();
        MGClear();
    }
    function MGClose1() {
        $("#outerS").hide();
        MGClear1();
    }
    function MGClose2() {
        $("#outerR").hide();
        MGClear2();
    }
    function MGClose3() {
        $("#outerT").hide();
    }
    function MGClear() {
        $("#MGNM").val("");
        $("#MGBA").val("");
        $("#GLHDGRPCD").val("");
        $("#GLHDGRPNM").val("");
        $("#MGNMDTL").val("");
    }
    function MGClear1() {
        $("#SGNM").val("");
        $("#SGBA").val("");
        $("#SGNMDTL").val("");
    }
    function MGClear2() {
        $("#RENM").val("");
        $("#SEGBA").val("");
        $("#SEGNMDTL").val("");
    }
    function MGCreate() {
        var name = $("#MGNM").val();
        var budgt = $("#MGBA").val();
        var bscode = $("#GLHDGRPCD").val();
        var details = $("#MGNMDTL").val();
        var mpgrpcd = $("#MGRPCD").val();
        if (name == "") {
            msgInfo("Group Name Can't Be Empty !");
            message_value = "MGNM";
            return false;
        }
        if (bscode == "") {
            msgInfo("Select B/S Group !");
            message_value = "GLHDGRPCD";
            return false;
        }
        $.ajax({
            type: 'Post',
            url: $("#urlMGCreate").val(),
            beforesend: $("#WaitingMode").show(),
            data: {
                Gname: name,
                Budgt: budgt,
                BSCode: bscode,
                Gdetails: details,
                MGRPCD: mpgrpcd
            },
            success: function (result) {
                $("#WaitingMode").hide();
                if (result == "0") {
                    msgSuccess1("Main group created sucessfully");
                    message_value = "showbtn";
                }
                else {
                    msgWarning(result);
                    message_value = "showbtn";
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError("Error: " + textStatus + "," + errorThrown);
            }
        });
    }
    function SGCreate() {
        debugger;
        var name = $("#SGNM").val();
        var budgt = $("#SGBA").val();
        var details = $("#SGNMDTL").val();
        var mpgrpcd = $("#MGRPCD").val();
        var legdtlskp = $("#innerS_LEGDTLSKP").val();
        var schdl = $("#innerS_SCHDL option:selected").val();
        if (name == "") {
            msgInfo("Sub-Group Name Can't be Empty !");
            message_value = "SGNM";
            return false;
        }
        debugger;
        $.ajax({
            type: 'Post',
            url: $("#urlSGCreate").val(),
            beforesend: $("#WaitingMode").show(),
            data: {
                Gname: name,
                Budgt: budgt,
                Gdetails: details,
                MGRPCD: mpgrpcd,
                Parent: $("#ParameterVal").val(),
                Liid: $("#ParameterVal1").val(),
                legdtlskp: legdtlskp,
                schdl: schdl
            },
            success: function (result) {
                debugger;
                $("#WaitingMode").hide();
                if (result == "0") {
                    msgSuccess1("Sub group created sucessfully");
                    message_value = "showbtn";
                }
                else {
                    msgWarning(result);
                    message_value = "showbtn";
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError("Error: " + textStatus + "," + errorThrown);
            }
        });
    }
    function GRename() {
        debugger;
        var name = $("#RENM").val();
        var budgt = $("#SEGBA").val();
        var details = $("#SEGNMDTL").val();
        var mpgrpcd = $("#MGRPCD").val();
        var legdtlskp = $("#innerR_LEGDTLSKP").val();
        var schdl = $("#innerR_SCHDL option:selected").val();
        if (name == "") {
            msgInfo("Name Can't Be Empty !");
            message_value = "RENM";
            return false;
        }
        $.ajax({
            type: 'Post',
            url: $("#urlRename").val(),
            beforesend: $("#WaitingMode").show(),
            data: {
                Gname: name,
                MGRPCD: mpgrpcd,
                Parent: $("#ParameterVal").val(),
                Details: details,
                Budgt: budgt,
                Liid: $("#ParameterVal1").val(),
                legdtlskp: legdtlskp,
                schdl: schdl
            },
            success: function (result) {
                $("#WaitingMode").hide();
                if (result == "0") {
                    msgSuccess1("Sucessfully Rename");
                    message_value = "showbtn";
                }
                else {
                    msgWarning(result);
                    message_value = "showbtn";
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError("Error: " + textStatus + "," + errorThrown);
            }
        });
    }
    function Texpand() {
        $("#tree").find("li").each
        (
            function () {
                $(this).parent().find('li input[type=checkbox]').prop('checked', true);
                $(this).parent().prev().prop('checked', true);
            }
        )
    }
    function TCollaps() {
        $("#tree").find("li").each
        (
            function () {
                $(this).parent().find('li input[type=checkbox]').prop('checked', false);
                $(this).parent().prev().prop('checked', false);
            }
        )
    }
    function DeleteGRP() {
        var ui = deletegroup();
        return false;
    }
    function delete_GRP() {
        var mpgrpcd = $("#MGRPCD").val();
        $.ajax({
            type: 'Post',
            url: $("#urlDelete").val(),
            beforesend: $("#WaitingMode").show(),
            data: {
                MGRPCD: mpgrpcd,
                Parent: $("#ParameterVal").val(),
                Liid: $("#ParameterVal1").val()
            },
            success: function (result) {
                $("#WaitingMode").hide();
                if (result == "0") {
                    $("#Msgdiv1").show();
                    $('#success1').show();
                    $("#msgbody_success1").html("Group Delete Sucessfully");
                    $("#btnok_success1").focus();
                    message_value = "showbtn";
                }
                else {
                    $("#Msgdiv1").show();
                    $("#warning").show();
                    $("#msgbody_warning").html(result);
                    $("#btnok_warning").focus();
                    message_value = "showbtn";
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError("Error: " + textStatus + "," + errorThrown);
            }
        });
    }
    function Indexing() {
        var mpgrpcd = $("#MGRPCD").val();
        $.ajax({
            type: 'Post',
            url: $("#urlIndex").val(),
            beforesend: $("#WaitingMode").show(),
            data: $('form').serialize() + "&MGRPCD=" + mpgrpcd,
            success: function (result) {
                $("#WaitingMode").hide();
                if (result == "0") {
                    $("#Msgdiv1").show();
                    $('#success1').show();
                    $("#msgbody_success1").html("Indexing Sucessfully");
                    $("#btnok_success1").focus();
                    message_value = "showbtn";
                }
                else {
                    $("#Msgdiv1").show();
                    $("#warning").show();
                    $("#msgbody_warning").html(result);
                    $("#btnok_warning").focus();
                    message_value = "showbtn";
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError("Error: " + textStatus + "," + errorThrown);
            }
        });
    }
    function ExistTag(id) {
        var mpgrpcd = $("#MGRPCD").val();
        $.ajax({
            type: 'Post',
            url: $("#urlexistaccount").val(),
            beforesend: $("#WaitingMode").show(),
            data: $('form').serialize() + "&MGRPCD=" + mpgrpcd + "&Parent=" + id,
            success: function (result) {
                $("#WaitingMode").hide();
                var ss = result.split('^');
                if (ss.length == 2) {
                    msgInfo(ss[1]);
                    message_value = "available_GRP";
                }
                else {
                    $("#partial_existing").html(result);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError("Error: " + textStatus + "," + errorThrown);
            }
        });
    }
    function addaccount() {
        var flag = 0;
        var GridRowMain = $("#available_GRP > tbody > tr").length;
        for (i = 0; i <= GridRowMain - 1; i++) {
            var chaked = document.getElementById("Checked_" + i).checked;
            if (chaked == true) {
                flag = 1;
                break;
            }
        }
        if (flag == 0) {
            msgIngo("Select accounts to tag!");
            message_value = "available_GRP";
            return false;
        }
        var mpgrpcd = $("#MGRPCD").val();
        var Parent = $("#ParameterVal").val();
        var liid = $("#ParameterVal1").val();
        $.ajax({
            type: 'Post',
            url: $("#urladdaccount").val(),
            beforesend: $("#WaitingMode").show(),
            data: $('form').serialize() + "&MGRPCD=" + mpgrpcd + "&Parent=" + Parent + "&Liid=" + liid,
            success: function (result) {
                $("#WaitingMode").hide();
                if (result == "0") {
                    msgSuccess1("Sucessfully Add Account");
                    message_value = "showbtn";
                }
                else {
                    msgWarning(result);
                    message_value = "showbtn";
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError("Error: " + textStatus + "," + errorThrown);
            }
        });
    }
    function deleteaccount() {
        var flag = 0;
        var GridRowMain = $("#exist_GRP > tbody > tr").length;
        for (i = 0; i <= GridRowMain - 1; i++) {
            var chaked = document.getElementById("EChecked_" + i).checked;
            if (chaked == true) {
                flag = 1;
                break;
            }
        }
        if (flag == 0) {
            msgInfo("Select accounts to remove!");
            message_value = "exist_GRP";
            return false;
        }
        var mpgrpcd = $("#MGRPCD").val();
        var Parent = $("#ParameterVal").val();
        var liid = $("#ParameterVal1").val();
        $.ajax({
            type: 'Post',
            url: $("#urldeleteaccount").val(),
            beforesend: $("#WaitingMode").show(),
            data: $('form').serialize() + "&MGRPCD=" + mpgrpcd + "&Parent=" + Parent + "&Liid=" + liid,
            success: function (result) {
                $("#WaitingMode").hide();
                if (result == "0") {
                    msgSuccess1("Sucessfully Remove Account");
                    message_value = "showbtn";
                }
                else {
                    $("#Msgdiv1").show();
                    $("#warning").show();
                    $("#msgbody_warning").html(result);
                    $("#btnok_warning").focus();
                    message_value = "showbtn";
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError("Error: " + textStatus + "," + errorThrown);
            }
        });
    }
    function CheckBoxCheck(id, Index, TAG) {
        if (TAG == "available_GRP") {
            var index = Index + 1;
            var CHK_STATE = document.getElementById("Checked_" + Index).checked;
            totalRow = $("#available_GRP tbody tr").length;
            if (CHK_STATE == false) {
                start = document.getElementById('available_GRP' + index);
                start.focus();
                start.style.backgroundColor = '#86d2f7';
                start.style.color = 'white';
                document.getElementById("Checked_" + Index).checked = true;
            }
            else {
                start = document.getElementById('available_GRP' + index);
                start.focus();
                start.style.backgroundColor = '';
                start.style.color = '';
                document.getElementById("Checked_" + Index).checked = false;
            }
            GetItemDetails();
        }
        else {
            var index = Index + 1;
            var CHK_STATE = document.getElementById("EChecked_" + Index).checked;
            totalRow = $("#exist_GRP tbody tr").length;
            if (CHK_STATE == false) {
                start = document.getElementById('exist_GRP' + index);
                start.focus();
                start.style.backgroundColor = '#86d2f7';
                start.style.color = 'white';
                document.getElementById("EChecked_" + Index).checked = true;
            }
            else {
                start = document.getElementById('exist_GRP' + index);
                start.focus();
                start.style.backgroundColor = '';
                start.style.color = '';
                document.getElementById("EChecked_" + Index).checked = false;
            }
        }
    }
</script>
<script>
    $(function () {
        debugger;
        @*$('#navbarli_1').append('<a style="color: aqua;" href="@Url.Action("DownloadExcel", PageControllerName)?MGRPCD=@Model.MGRPCD"><span class="fa fa-file-excel-o"></span> Download Excel</a>');*@
        if ("@CommVar.FinSchemaPrevYr(Model.UNQSNO)" != "")
        { $('#navbarli_2').append('<a style="color: darkblue;" onclick="AddToPrivious();"><span class="fa fa-exchange"></span> Add last year</a>'); }


        $('#search').on('keyup', function () {
            var val = $(this).val().toLowerCase()
            if (val) {
                $('ul li span').each(function (idx, obj) {
                    if ($(obj).text().toLowerCase().indexOf(val) !== -1) {
                        var id = obj.id;
                        if (id != "") {
                            $(obj).addClass('highlight')
                            Texpand();
                        }
                    }
                    else {
                        $(obj).removeClass('highlight')
                    }
                })
            }
            else
                $('ul li span').removeClass('highlight')
        })
    })
    function SetAllCheckBoxesFilterCUSTOM(obj, tablename, RowCheckID, searchF) {
        var filter = $("#" + searchF).val().toLowerCase();
        totalRow = $("#" + tablename + " tbody tr").length;
        var rows = document.querySelector("#" + tablename + " tbody").rows;
        for (var i = 0; i <= rows.length - 1; i++) {
            var flag = 0;
            for (var x = 0; x <= rows[i].cells.length - 1; x++) {
                var firstCol = rows[i].cells[x].children[0].value.toLowerCase();
                if (firstCol.indexOf(filter) > -1) {
                    flag = 1;
                }
            }
            if (flag == 1) {
                var chkbox = document.getElementById(RowCheckID + i);
                chkbox.checked = obj.checked;
                if (chkbox.checked == true) {
                    start = document.getElementById(tablename + (i + 1));
                    start.style.backgroundColor = '#86d2f7';
                    start.focus();
                }
                else {
                    start = document.getElementById(tablename + (i + 1));
                    start.style.backgroundColor = '';
                    start = document.getElementById(tablename + 1);
                    start.focus();
                }
            }
        }
    }
</script>
<script>
    function AddToPrivious() {
        $.ajax({
            type: 'post',
            url: "@Url.Action("SavePreviousYrData", PageControllerName)",
            beforesend: $("#WaitingMode").show(),
            data: $('form').serialize(),
            success: function (result) {
                $("#WaitingMode").hide();
                if (result == "1") {
                    msgSuccess1("Previous year data save sucessfully");
                    // message_value = "btnPrvyr";
                }
                else {
                    msgWarning(result);
                    //message_value = "btnPrvyr";
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function ConfirmInDivGRP(message, okcallback, cancelcallback) {
        $('#Msgdiv1').show();
        $('#confirm').show();
        $("#msgbody_confirm").text(message);
        $('#Confirmation_Ok').unbind('click');
        $('#Confirmation_Ok').click(okcallback);
        $('#Confirmation_Ok').unbind('keypress');
        $('#Confirmation_Ok').keypress(okcallback);
        $('#Confirmation_Cancel').unbind('click');
        $('#Confirmation_Cancel').click(cancelcallback);
        $('input').blur();
        $('#Confirmation_Ok').focus();
    }
    function HideConfirmOkGRP() {
        $('#Msgdiv1').hide();
        $('#confirm').hide();
        delete_GRP();
        return false;
    }
    function HideConfirmCancelGRP() {
        $('#Msgdiv1').hide();
        $('#confirm').hide();
        return false;
    }

    function deletegroup() {
        function ok() {
            console.log('deleted');
            HideConfirmOkGRP();
        }
        function cancel() {
            console.log('delete cancelled');
            HideConfirmCancelGRP();
        }
        ConfirmInDivGRP('Are you sure to delete?', ok, cancel);
    }
</script>
<script>
    $(function () {
        $("#FDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true });
        $("#TDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true });
    });
</script>
<script>
    function SetAllCheckBoxesFilterParty(obj, tablename, RowCheckID, FILTER_ID) {
        var filter = $("#" + FILTER_ID).val() || '';
        var rows = document.querySelector("#" + tablename + " tbody").rows;
        for (var i = 0; i <= rows.length - 1; i++) {
            var flag = 0;
            for (var x = 0; x <= rows[i].cells.length - 1; x++) {
                var firstCol = rows[i].cells[x].children[0].value.toUpperCase();
                if (firstCol.indexOf(filter.toUpperCase()) > -1) {
                    flag = 1;
                }
            }
            if (flag == 1) {
                if ($("#" + RowCheckID + i).is(":visible")) {
                    var chkbox = document.getElementById(RowCheckID + i);
                    var isdisable = chkbox.getAttribute("disabled");
                    if (isdisable == null) {
                        chkbox.checked = obj.checked;
                    }
                }
            }
        }
        GetItemDetails();
    }

</script>
<script>
    let sortDirection = {};

    function sortable(colIndex) {
        const table = document.getElementById("available_GRP");
        const tbody = table.tBodies[0];
        const rows = Array.from(tbody.querySelectorAll("tr"));

        sortDirection[colIndex] = !sortDirection[colIndex];
        const asc = sortDirection[colIndex];

        rows.sort((a, b) => {
            let aInput = a.cells[colIndex].querySelector("input");
            let bInput = b.cells[colIndex].querySelector("input");
            let aVal = aInput ? aInput.value.trim() : a.cells[colIndex].innerText.trim();
            let bVal = bInput ? bInput.value.trim() : b.cells[colIndex].innerText.trim();

            if (!isNaN(aVal) && !isNaN(bVal)) {
                return asc ? aVal - bVal : bVal - aVal;
            }
            return asc ? aVal.localeCompare(bVal) : bVal.localeCompare(aVal);
        });

        rows.forEach(row => tbody.appendChild(row));

        table.querySelectorAll("th").forEach(th => th.classList.remove("sort-asc", "sort-desc"));
        table.querySelectorAll("th")[colIndex].classList.add(asc ? "sort-asc" : "sort-desc");
    }
</script>
@using (Html.BeginForm())
{
    if (Model.DefaultView == true)
    {
        <input type="hidden" id="urlname" value="@Url.Action("BSGroupCode", PageControllerName)" />
        <input type="hidden" id="urlMGCreate" value="@Url.Action("CreateMainGroup", PageControllerName)" />
        <input type="hidden" id="urlSGCreate" value="@Url.Action("CreateSubGroup", PageControllerName)" />
        <input type="hidden" id="urlRename" value="@Url.Action("RenameGroup", PageControllerName)" />
        <input type="hidden" id="urlDelete" value="@Url.Action("DeleteGroup", PageControllerName)" />
        <input type="hidden" id="urlIndex" value="@Url.Action("IndexGroup", PageControllerName)" />
        <input type="hidden" id="urladdaccount" value="@Url.Action("ADDACCOUNT", PageControllerName)" />
        <input type="hidden" id="urldeleteaccount" value="@Url.Action("DELETEACCOUNT", PageControllerName)" />
        <input type="hidden" id="urlexistaccount" value="@Url.Action("ExistingAccount", PageControllerName)" />
        <input type="hidden" id="ParameterVal" value="" />
        <input type="hidden" id="ParameterVal1" value="" />
        <input type="hidden" id="partylinkcd" value="party" />
        if (Model.SLCD.retStr() == "")
        {
            <div id="outer">
                <div id="inner" style="height:330px;width:602px;">
                    @*<div class="row">
                            <div class="tabtitle">
                                Select B/L Main Group
                            </div>
                        </div>*@
                    <input type="hidden" id="urlbtnsubmit" name="urlbtnsubmit" value="@Url.Action("BtnSubmit", PageControllerName)" />
                    <div class="row">
                        <div style="padding:14px 0px;background-color:#ffffff;margin-top:25px;height:230px;overflow-y:auto">

                            <div class="row">
                                <div class="col-lg-2">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Party Code")
                                        <b style="color:Red;">*</b>
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="editor-field">                                       
                                        @Html.EditorFor(model => model.SLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SLCD", @autocomplete = "off", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=SLAREA','partylinkcd')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=SLAREA','partylinkcd');", @placeholder = "Code", maxlength = 8 } })
                                        <img src="~/Image/search.png" id="PARTY_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=SLAREA','partylinkcd')" />
                                    </div>
                                </div>
                                <div class="col-lg-7">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.SLNM, new { htmlAttributes = new { @class = "form-control", id = "SLNM", maxlength = 45, @title = "Only for View", @placeholder = "Party Name", @readonly = "readonly", tabindex = "-1" } })
                                        
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-2">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "From Date")
                                    </div>
                                </div>
                                <div class="col-md-9">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.FDT, new { htmlAttributes = new { @class = "form-control", id = "FDT", maxlength = 10, onblur = "DocumentDateCHK(this,true);", @placeholder = "dd/mm/yyyy", @autocomplete = "off", required = "required" } })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-2">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "To Date")
                                    </div>
                                </div>
                                <div class="col-md-9">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.TDT, new { htmlAttributes = new { @class = "form-control", id = "TDT", maxlength = 10, onblur = "DocumentDateCHK(this,true);", @placeholder = "dd/mm/yyyy", autocomplete = "off", required = "required" } })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-8">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Debtors/Creditors")
                                    </div>
                                </div>
                                <div class="col-lg-9" style="margin-top:6px;width:auto;border: groove;">
                                    <label class="radio-inline">
                                        @Html.RadioButtonFor(model => model.SALPUR, "S", new { @checked = "checked", id = "SALPUR" })  @Html.Label("Debtors")
                                    </label>
                                    <label class="radio-inline">
                                        @Html.RadioButtonFor(model => model.SALPUR, "P", new { id = "SALPUR" })  @Html.Label("Creditors")
                                    </label>
                                </div>
                                <div class="col-lg-2" style="width:auto;">
                                    <div class="editor-label" style="margin-top:6px">
                                        @Html.Label("", "Is Only Sales/Purchase")
                                    </div>
                                </div>
                                <div class="col-md-6" style="margin-top:6px;width:auto;">
                                    @Html.CheckBoxFor(model => model.CHECK, new { id = "CHECK" })
                                </div>
                            </div>

                            <div class="row" style="margin-top:6px">
                                <div class="col-lg-2">
                                    <div class="editor-label" style="margin-top:5px">
                                        @Html.Label("", "Group")
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    @(new HtmlString(Model.ITGRPCD))
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-2">
                                    <div class="editor-label" style="margin-top:6px">
                                        @Html.Label("", "Location")
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    @(new HtmlString(Model.LOCATION))
                                </div>
                            </div>
                            @*<table cellpadding="2px" cellspacing="2px" style="color:black;width:100%">
                                    @for (int i = 0; i <= Model.MGRPLIST.Count - 1; i++)
                                    {
                                        <tr style="border-bottom:1pt solid #dbd7d7;height:0px">
                                            <td style="padding-left:10px">
                                                <label class="containerCK" title="@Model.MGRPLIST[i].MGRPNM.toProper()">
                                                    @Model.MGRPLIST[i].MGRPNM.toProper()
                                                    <input type="radio" checked="checked" name="radio" value="@Model.MGRPLIST[i].MGRPCD">
                                                    <span class="checkmark"></span>
                                                </label>
                                                @Html.HiddenFor(a => a.MGRPLIST[i].MGRPCD)
                                                @Html.HiddenFor(a => a.MGRPLIST[i].MGRPNM)
                                                @Html.HiddenFor(a => a.MGRPLIST[i].MGRPTYPE)
                                            </td>
                                        </tr>
                                    }
                                </table>*@
                        </div>
                    </div>
                    <div style="background:linear-gradient(#eeeeee,#dbd7d7);height:42px;width:100%; position:absolute;bottom:0;left:0; border-bottom-left-radius:10px;border-bottom-right-radius:10px;text-align:center">
                        <button type="button" class="btn btn-danger" style="margin-top:4px" onclick="btn_submit();">Submit</button>
                    </div>
                </div>
            </div>
        }
        else
        {

            @*<menu class="menu">
                    <li class="menu-item">
                        <button type="button" class="menu-btn" onclick="createMain();"> <i class="fa fa-plus-square"></i> <span class="menu-text">Create Main Group</span> </button>
                    </li>
                    @if (Model.FOUNDMGRP)
                    {
                        <li class="menu-item">
                            <button type="button" class="menu-btn" onclick="createIndex();"> <i class="fa fa-sort-numeric-asc"></i> <span class="menu-text">Indexing</span> </button>
                        </li>
                        <li class="menu-item">
                            <button type="button" class="menu-btn" onclick="Texpand();"> <i class="fa fa-expand"></i><span class="menu-text">Tree Expand</span> </button>
                        </li>
                        <li class="menu-item">
                            <button type="button" class="menu-btn" onclick="TCollaps();"> <i class="fa fa-compress"></i><span class="menu-text">Tree Collapse</span> </button>
                        </li>
                    }
                    else
                    {
                        <li class="menu-item disabled">
                            <button type="button" class="menu-btn"> <i class="fa fa-sort-numeric-asc"></i> <span class="menu-text">Indexing</span> </button>
                        </li>
                        <li class="menu-item disabled">
                            <button type="button" class="menu-btn"> <i class="fa fa-expand"></i><span class="menu-text">Tree Expand</span> </button>
                        </li>
                        <li class="menu-item disabled">
                            <button type="button" class="menu-btn"> <i class="fa fa-compress"></i><span class="menu-text">Tree Collapse</span> </button>
                        </li>
                    }
                </menu>
                <br />
                <div style="margin-top:-30px;">
                    <menu class="menu1">
                        <li class="menu-item">
                            <button type="button" class="menu-btn" onclick="createSub();"> <i class="fa fa-plus-square"></i> <span class="menu-text">Create Sub Group</span> </button>
                        </li>
                        <li class="menu-item">
                            <button type="button" class="menu-btn" onclick="addaccount();"> <i class="fa fa-plus-square"></i> <span class="menu-text">Add Account Into Group</span> </button>
                        </li>
                        <li class="menu-item">
                            <button type="button" class="menu-btn" onclick="deleteaccount();"> <i class="fa fa-minus-square"></i> <span class="menu-text">Remove Account From Group</span> </button>
                        </li>
                        <li class="menu-separator"></li>
                        <li class="menu-item">
                            <button type="button" class="menu-btn" onclick="DeleteGRP();"> <i class="fa fa-minus-square"></i> <span class="menu-text">Remove Group</span> </button>
                        </li>
                        <li class="menu-item">
                            <button type="button" class="menu-btn" onclick="Rename();"> <i class="fa fa-edit"></i> <span class="menu-text">Edit Group</span> </button>
                        </li>
                    </menu>
                    <menu class="menu2">
                        <li class="menu-item">
                            <button type="button" class="menu-btn" onclick="createSub();"> <i class="fa fa-plus-square"></i> <span class="menu-text">Create Sub Group</span> </button>
                        </li>
                        <li class="menu-item">
                            <button type="button" class="menu-btn" onclick="DeleteGRP();"> <i class="fa fa-minus-square"></i> <span class="menu-text">Remove Group</span> </button>
                        </li>
                        <li class="menu-item">
                            <button type="button" class="menu-btn" onclick="Rename();"> <i class="fa fa-edit"></i> <span class="menu-text">Edit Group</span> </button>
                        </li>
                    </menu>*@
            @*<div style="width:33%;display:inline-block;float:left">
                    <input type="text" value="" class="form-control" autocomplete="off" id="search" placeholder="Search From Tree" style="width:260px; margin-left:10px" />
                    <span class="fa fa-search" style="margin-top:-18px;margin-left:251px;float:left"></span>
                    <div id="MTREE" class="noselect" style="height:66vh;margin-top:3px;padding-left:10px;border-top-left-radius:15px;border-bottom-left-radius:15px;border-top:2px solid #86abd8;border-bottom:2px solid #86abd8;border-left:2px solid #86abd8;border-right:1px solid #86abd8;background-color:#f7fab3">
                        <div class="tabtitle1">
                            Hierarchical Grouping
                        </div>
                        <div id="ConMenu" style="display:inline-block;margin-top:8px">
                            <span style="cursor:pointer;font-weight:bold;font-size:16px">@Model.MGRPNM.toProper()</span>
                            @Html.HiddenFor(a => a.MGRPCD)

                            <script>Rmenu("ConMenu", "", 1);</script>
                        </div>
                        <div id="treebody" style="font-size:14px;font-weight:bold;overflow-y:auto;height:350px;width:100%">
                            @Html.Partial("_tree_BsgroupCreate")
                        </div>
                    </div>
                </div>*@
            <div class="row">
                <div style="width:15%;display:inline-block;float:left;margin-top:5px">
                    <div class="col-lg-4">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "From Date")
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.FDT2, new { htmlAttributes = new { @class = "form-control", id = "FDT2", maxlength = 10, @placeholder = "dd/mm/yyyy", @autocomplete = "off", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>

                <div style="width:15%;display:inline-block;float:left;margin-top:5px">
                    <div class="col-lg-4">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "To Date")
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.TDT2, new { htmlAttributes = new { @class = "form-control", id = "TDT2", maxlength = 10, @placeholder = "dd/mm/yyyy", @autocomplete = "off", @readonly = "readonly" } })
                            @Html.HiddenFor(model => model.SLCD2, new { id = "SLCD2" })
                            @Html.HiddenFor(model => model.ITGRPCD2, new { id = "ITGRPCD2" })
                            @Html.HiddenFor(model => model.ONLYSALES2, new { id = "ONLYSALES2" })
                            @Html.HiddenFor(model => model.LOCATION2, new { id = "LOCATION2" })
                            @Html.HiddenFor(model => model.SALPUR2, new { id = "SALPUR2" })
                        </div>
                    </div>
                </div>
                <div style="width:20%;display:inline-block;float:left;margin-top:5px">
                    <div class="col-lg-1" style="margin-top:6px">
                        @Html.CheckBoxFor(model => model.CHECK2)
                    </div>
                    <div class="col-lg-5">
                        <div class="editor-label" style="margin-top:6px">
                            @Html.Label("", "Show All Dates")
                        </div>
                    </div>
                </div>
            </div>

            <div style="width:38%;display:inline-block;float:left">
                <input type="text" value="" class="form-control" autocomplete="off" id="searchAV" placeholder="Search From Available Item Details" style="width:260px; margin-left:10px" onkeyup="filterTable(event, 'available_GRP');" />
                <span class="fa fa-search" style="margin-top:-18px;margin-left:251px;float:left"></span>

                @*<input type="text" value="" class="form-control" autocomplete="off" id="searchAV" placeholder="Search From Available Accounts" style="width:260px; margin-left:10px" onkeyup="filterTable(event, 'available_GRP');" />*@
                @*<span class="fa fa-search" style="margin-top:-18px;margin-left:251px;float:left"></span>*@
                <div style="height:66vh;margin-top:10px;border-top-right-radius:15px;border-top-left-radius:15px;border-bottom-left-radius:15px;border-bottom-right-radius:15px;border-top:2px solid #86abd8;border-bottom:2px solid #86abd8;border-right:2px solid #86abd8;border-left:2px solid #86abd8;background-color:#d9ebf1">
                    <div class="tabtitle">
                        Item Details
                    </div>
                    <div style="margin-top: 7px;margin-left: 20px;font-size: 14px;font-weight: bold;">
                        @*@if (Model.AvailableGroup != null)
                            {
                                <span>Number of Available Accounts : @Model.AvailableGroup.Count</span>
                            }
                            else
                            {
                                <span>Number of Available Accounts : 0</span>
                            }*@
                        <span>Party : @ViewBag.SLNM</span>
                    </div>
                    @*@if (Model.AvailableGroup != null)
                        {*@
                    <div class="sticky-table sticky-ltr-cells" style="margin-left:4px;margin-right:4px;margin-top:7px;border-radius:10px;transform: translate(0%, 0%);z-index:1100">
                        <div style="height:58vh;overflow-y:auto;">
                            <table id="available_GRP" class="resizable table-striped" cellpadding="0px" cellspacing="0px" style="width:1143px;" onkeydown="checkKey(event,'available_GRP','Checked_');">
                                <thead>
                                    <tr class="sticky-header" style="height:30px;">
                                        <th class="sticky-cell" style="text-align:center;width: 27px;">
                                            All
                                            <input type="checkbox" name="Test" onclick="SetAllCheckBoxesFilterParty(this, 'available_GRP', 'Checked_')" />
                                        </th>
                                        <th class="" onclick="sortable(1)">Design</th>
                                        <th class="" onclick="sortable(2)" style="width:30px;">Img</th>
                                        <th class="" onclick="sortable(3)" style="width:40px;">UOM</th>
                                        <th class="" onclick="sortable(4)" style="width:80px;">Sal.Qnty</th>
                                        <th class="" onclick="sortable(5)" style="width:80px;">Net.Qnty</th>
                                        <th class="" onclick="sortable(6)" style="width:100px;">Net.Amt</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.billdet != null)
                                    {
                                        for (int i = 0; i <= Model.billdet.Count - 1; i++)
                                        {
                                            <tr id="available_GRP@(i + 1)">
                                                <td class="sticky-cell" style="background-color:#808080;padding-left:7px;padding-right:7px;">
                                                    @Html.CheckBoxFor(model => model.billdet[i].Checked, new { id = "Checked_" + i, @style = "text-align:center;", onclick = "IndivedulaCheckBoxCheck(this," + i + ",'available_GRP');" })
                                                </td>
                                                <td>
                                                    @Html.EditorFor(model => model.billdet[i].styleno, new { htmlAttributes = new { @class = "atextBoxFor", id = "styleno_" + i, maxlength = 10, @TabIndex = -1, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'available_GRP');" } })
                                                    @Html.HiddenFor(model => model.billdet[i].itcd, new { id = "itcd_" + i })
                                                </td>
                                                <td class="">
                                                    <input type="button" onclick="FillImageModal('BarImages_@i')" data-toggle="modal" data-target="#ViewImageModal" id="BarImagesCount_@i" name="billdet[@i].BarImagesCount" class="btn atextBoxFor text-info" style="padding:0px" value="@Model.billdet[i].BarImagesCount" />
                                                    @Html.HiddenFor(model => model.billdet[i].BarImages, new { id = "BarImages_" + i })
                                                </td>
                                                <td>
                                                    @Html.EditorFor(model => model.billdet[i].uom, new { htmlAttributes = new { @class = "atextBoxFor text-right", id = "uom_" + i, maxlength = 10, @TabIndex = -1, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'available_GRP');" } })
                                                </td>
                                                <td>
                                                    @Html.EditorFor(model => model.billdet[i].sqnty, new { htmlAttributes = new { @class = "atextBoxFor text-right", id = "sqnty_" + i, maxlength = 10, @TabIndex = -1, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'available_GRP');" } })
                                                </td>

                                                <td>
                                                    @Html.EditorFor(model => model.billdet[i].netqnty, new { htmlAttributes = new { @class = "atextBoxFor text-right", id = "netqnty_" + i, maxlength = 10, @TabIndex = -1, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'available_GRP');" } })
                                                </td>
                                                <td>
                                                    @Html.EditorFor(model => model.billdet[i].netamt, new { htmlAttributes = new { @class = "atextBoxFor text-right", id = "netamt_" + i, maxlength = 10, @TabIndex = -1, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'available_GRP');" } })
                                                </td>

                                            </tr>
                                        }
                                    }
                                </tbody>
                                <tfoot>
                                    <tr class="sticky-footer">
                                        <td><input type="text" class="atextBoxFor" readonly="readonly" /></td>
                                        <td><input type="text" class="atextBoxFor" readonly="readonly" /></td>
                                        <td><input type="text" class="atextBoxFor" readonly="readonly" /></td>
                                        <td><input type="text" class="atextBoxFor" readonly="readonly" /></td>

                                        <td style="text-align:right;border:groove;">
                                            @Html.EditorFor(model => Model.T_sqnty, new { htmlattributes = new { id = "T_sqnty", @class = "atextBoxFor text-right", @TabIndex = -1, @readonly = "readonly" } })
                                        </td>

                                        <td style="text-align:right;border:groove;">
                                            @Html.EditorFor(model => Model.T_netqnty, new { htmlattributes = new { id = "T_netqnty", @class = "atextBoxFor text-right", @TabIndex = -1, @readonly = "readonly" } })
                                        </td>
                                        <td style="text-align:right;border:groove;">
                                            @Html.EditorFor(model => Model.T_netamt, new { htmlattributes = new { id = "T_netamt", @class = "atextBoxFor text-right", @TabIndex = -1, @readonly = "readonly" } })
                                        </td>

                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div style="width:62%;display:inline-block;float:left">
                <input type="text" value="" class="form-control" autocomplete="off" id="searchAV" placeholder="Search From Available Bill Details" style="width:260px; margin-left:10px" onkeyup="filterTable(event, 'exist_GRP');" />
                <span class="fa fa-search" style="margin-top:-18px;margin-left:251px;float:left"></span>

                @*<input type="text" value="" class="form-control" autocomplete="off" id="searchEX" placeholder="Search From Tag Accounts" style="width:260px; margin-left:10px" onkeyup="filterTable(event, 'exist_GRP');" />*@
                @*<span class="fa fa-search" style="margin-top:-18px;margin-left:251px;float:left"></span>*@
                @*<div style="height:66vh;margin-top:28px;border-top:2px solid #86abd8;border-bottom:2px solid #86abd8;border-right:1px solid #86abd8;background-color:#d9ebf1">*@
                <div style="height:66vh;margin-top:10px;border-top-right-radius:15px;border-top-left-radius:15px;border-bottom-left-radius:15px;border-bottom-right-radius:15px;border-top:2px solid #86abd8;border-bottom:2px solid #86abd8;border-right:2px solid #86abd8;border-left:2px solid #86abd8;background-color:#d9ebf1">
                    <div class="tabtitle">
                        Bill Details
                    </div>
                    <div id="partial_existing">
                        @Html.Partial("_Rep_PartyItemSumm_Item_Det")
                    </div>
                </div>
            </div>

                <div class="container">
                    <!-- Modal -->
                    <div class="modal fade" id="ViewImageModal" role="dialog">
                        <div class="modal-dialog modal-md">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                    <h4 class="modal-title">Image Preview</h4>
                                </div>
                                <div class="modal-body">
                                    <div id="myCarousel" class="carousel" data-ride="carousel">
                                        <div class="carousel-inner" id="div_carousel_inner">
                                            <div class="item active">
                                                <img src="" alt="Los Angeles" style="width:100%;">
                                            </div>
                                            <div class="item">
                                                <img src="" alt="Chicago" style="width:100%;">
                                            </div>
                                        </div>
                                        <!-- Left and right controls -->
                                        <a class="left  carousel-control arrow-left" id="prev">
                                            <span class="glyphicon glyphicon-chevron-left"></span>
                                        </a>
                                        <a class="right  carousel-control arrow-right" id="next">
                                            <span class="glyphicon glyphicon-chevron-right"></span>
                                        </a>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="pull-left">
                                                <input type="hidden" id="ActiveBarRowIndex" />
                                                <input type="hidden" id="BarImages" />
                                                <button type="button" class="btn btn-danger" onclick="deleteBarImages()"><span class="glyphicon glyphicon-trash"></span></button>
                                            </div>
                                        </div>
                                        <div class="col-sm-6"><button type="button" class="btn btn-default" data-dismiss="modal">Close</button></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="RateHistoryModal" role="dialog">
                    </div>
                    <div class="modal fade" id="PaymentDetailsModal" role="dialog">
                    </div>
                </div>
        }
    }
    else
    {
        @ViewBag.ErrorMessage
    }
    @*<div id="outerT">
            <div id="innerT" style="height:350px;width:500px;padding-left:5px;">
                <div class="row">
                    <div class="tabtitle">
                        Indexing<span class="fa fa-times-circle" title="Close" style="float:right;font-weight:bold;color:black;font-size:20px;margin-top:2px;margin-right:5px" onclick="MGClose3();"></span>
                    </div>
                </div>
                <div class="row" style="overflow-y:auto;height:250px">
                    @if (Model.MLIST != null)
                    {
                        <table>
                            @for (int i = 0; i <= Model.MLIST.Count - 1; i++)
                        {
                                <tr>
                                    @if (Model.MLIST[i].Space.Length <= 0)
                                    {
                                        <td>
                                            @Html.EditorFor(a => a.MLIST[i].GRPSLNO, new { htmlAttributes = new { style = "width:30px;font-weight:bold", maxlength = 3, onkeypress = "return numericOnly(this,-1);" } })
                                        </td>
                                        <td>
                                            &nbsp;@(new HtmlString(Model.MLIST[i].Space))
                                            <span style="margin-top:6px;font-weight:bold">@Model.MLIST[i].GRPNM</span>
                                            @Html.HiddenFor(a => a.MLIST[i].GCD)
                                            @Html.HiddenFor(a => a.MLIST[i].GRPCDFULL)
                                            @Html.HiddenFor(a => a.MLIST[i].PARENTCD)
                                            @Html.HiddenFor(a => a.MLIST[i].GRPNM)
                                            @Html.HiddenFor(a => a.MLIST[i].ROOTCD)
                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            @Html.EditorFor(a => a.MLIST[i].GRPSLNO, new { htmlAttributes = new { style = "width:30px;", maxlength = 3, onkeypress = "return numericOnly(this,-1);" } })
                                        </td>
                                        <td>
                                            &nbsp;@(new HtmlString(Model.MLIST[i].Space))
                                            @Html.Label("", Model.MLIST[i].GRPNM, new { htmlAttributes = new { style = "margin-top:6px;" } })
                                            @Html.HiddenFor(a => a.MLIST[i].GCD)
                                            @Html.HiddenFor(a => a.MLIST[i].GRPCDFULL)
                                            @Html.HiddenFor(a => a.MLIST[i].PARENTCD)
                                            @Html.HiddenFor(a => a.MLIST[i].GRPNM)
                                            @Html.HiddenFor(a => a.MLIST[i].ROOTCD)
                                        </td>
                                    }

                                </tr>
                            }
                        </table>
                    }

                </div>
                <br />
                <div class="row">
                    <div class="col-md-8">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", " ")
                        </div>
                    </div>
                    <div class="col-md-9">
                        <button type="button" class="btn btn-danger" style="width:104px" onclick="Indexing();" title="Save">Save</button>
                    </div>
                </div>
            </div>
        </div>*@
}

<div id="outerP">
    <div id="innerP" style="height:295px;width:621px;padding-left:5px;">
        <div class="row">
            <div class="tabtitle">
                Create Main Group<span class="fa fa-times-circle" title="Close" style="float:right;font-weight:bold;color:black;font-size:20px;margin-top:2px;margin-right:5px" onclick="MGClose();"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Main Group Name")
                    <b style="color:Red;">*</b>
                </div>
            </div>
            <div class="col-md-11">
                <input type="text" id="MGNM" value="" placeholder="Main Group Name" class="form-control" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Group Details")
                </div>
            </div>
            <div class="col-md-11">
                <textarea id="MGNMDTL" placeholder="Group Details" class="form-control" style="height:80px"></textarea>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Leg Dtls Skip")
                </div>
            </div>
            <div class="col-md-11">
                @Html.CheckBoxFor(model => Model.LEGDTLSKP, new { id = "innerP_LEGDTLSKP" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Schedule")
                </div>
            </div>
            <div class="col-md-11">
                @*@Html.DropDownListFor(model => Model.SCHDL, new SelectList(Model.SchedulePart, "Value", "Text", Model.SCHDL), new { id = "innerP_SCHDL", @class = " form-control" })*@
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Budget Amount")
                </div>
            </div>
            <div class="col-md-11">
                <input type="text" id="MGBA" value="" placeholder="Budget Amount" class="form-control" onkeypress="return numericOnly(this,2);" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Select Head")
                    <b style="color:Red;">*</b>
                </div>
            </div>
            <div class="col-md-7">
                <input type="text" id="GLHDGRPCD" value="" placeholder="Code" class="form-control" maxlength="3" onblur="SelectGLHDGRPCD(this.value,GLHDGRPCD,GLHDGRPNM)" />
                <img src="~/Image/search.png" class="Help_image_button" width="20px" height="20px" style="margin-top:-23px;float:right;margin-right:2px" title="Help" onclick="GetHelp('@Url.Action("GetBSGroupCode", PageControllerName)','GLHDGRPCD/GLHDGRPNM','1/0','Select B / S Group','GLHDGRPCD')" />
            </div>
            <div class="col-md-10">
                <input type="text" id="GLHDGRPNM" value="" placeholder="Head Name" readonly="readonly" tabindex=-1 class="form-control" style="width:205px" />
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", " ")
                </div>
            </div>
            <div class="col-md-8">
                <button type="button" class="btn btn-danger" style="width:104px" onclick="MGCreate();" title="Save">Save</button>
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-danger" style="width:104px" onclick="MGClear();" title="Clear">Clear</button>
            </div>
        </div>
    </div>
</div>

<div id="outerS">
    <div id="innerS" style="height:295px;width:621px;padding-left:5px;">
        <div class="row">
            <div class="tabtitle">
                Create Sub Group<span class="fa fa-times-circle" title="Close" style="float:right;font-weight:bold;color:black;font-size:20px;margin-top:2px;margin-right:5px" onclick="MGClose1();"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Sub Group Name")
                    <b style="color:Red;">*</b>
                </div>
            </div>
            <div class="col-md-11">
                <input type="text" id="SGNM" value="" placeholder="Sub Group Name" class="form-control" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Group Details")
                </div>
            </div>
            <div class="col-md-11">
                <textarea id="SGNMDTL" placeholder="Group Details" class="form-control" style="height:80px"></textarea>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Leg Dtls Skip")
                </div>
            </div>
            <div class="col-md-11">
                @Html.CheckBoxFor(model => Model.LEGDTLSKP, new { id = "innerS_LEGDTLSKP" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Schedule")
                </div>
            </div>
            <div class="col-md-11">
                @*@Html.DropDownListFor(model => Model.SCHDL, new SelectList(Model.SchedulePart, "Value", "Text", Model.SCHDL), new { id = "innerS_SCHDL", @class = " form-control" })*@


            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Budget Amount")
                </div>
            </div>
            <div class="col-md-11">
                <input type="text" id="SGBA" value="" placeholder="Budget Amount" class="form-control" onkeypress="return numericOnly(this,2);" />
            </div>
        </div>

        <br />
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", " ")
                </div>
            </div>
            <div class="col-md-8">
                <button type="button" class="btn btn-danger" style="width:104px" onclick="SGCreate();" title="Save">Save</button>
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-danger" style="width:104px" onclick="MGClear1();" title="Clear">Clear</button>
            </div>
        </div>
    </div>
</div>

<div id="outerR">
    <div id="innerR" style="height:295px;width:500px;padding-left:5px;">
        <div class="row">
            <div class="tabtitle">
                Re-name<span class="fa fa-times-circle" title="Close" style="float:right;font-weight:bold;color:black;font-size:20px;margin-top:2px;margin-right:5px" onclick="MGClose2();"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Enter Name")
                    <b style="color:Red;">*</b>
                </div>
            </div>
            <div class="col-md-11">
                <input type="text" id="RENM" value="" placeholder="ReName" class="form-control" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Group Details")
                </div>
            </div>
            <div class="col-md-11">
                <textarea id="SEGNMDTL" placeholder="Group Details" class="form-control" style="height:80px"></textarea>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Leg Dtls Skip")
                </div>
            </div>
            <div class="col-md-11">
                @Html.CheckBoxFor(model => Model.LEGDTLSKP, new { id = "innerR_LEGDTLSKP" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Schedule")
                </div>
            </div>
            <div class="col-md-11">
                @*@Html.DropDownListFor(model => Model.SCHDL, new SelectList(Model.SchedulePart, "Value", "Text", Model.SCHDL), new { id = "innerR_SCHDL", @class = " form-control" })*@

            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", "Budget Amount")
                </div>
            </div>
            <div class="col-md-11">
                <input type="text" id="SEGBA" value="" placeholder="Budget Amount" class="form-control" onkeypress="return numericOnly(this,2);" />
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-8">
                <div class="editor-label" style="margin-top: 6px;">
                    @Html.Label("", " ")
                </div>
            </div>
            <div class="col-md-9">
                <button type="button" class="btn btn-danger" style="width:104px" onclick="GRename();" title="Save">Save</button>
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-danger" style="width:104px" onclick="MGClear2();" title="Clear">Clear</button>
            </div>
        </div>
    </div>
</div>


<div class="container">
    <div id="helpDIV">

    </div>
</div>