
@model Improvar.ViewModels.PartyitemSummReport
@*@if (Model.ItmDet != null)
    {*@


<style>
    /*#exist_GRP th {}
    th.sort-asc::after {
        content: " ▲";
        color: #000;
        position:static;
    }
    th.sort-desc::after {
        content: " ▼";
        color: #000;
        position: static;
    }
    tr:nth-child(even) {
      background-color: #fafafa;
    }
    input[type="text"] {
      width: 100%;
      box-sizing: border-box;
      padding: 4px;
    }*/

    th::after {
        content: " ▲";
        position: absolute;
        top: 4px;
        right: 10px;
        color: #999;
        font-size: 12px;
    }

    th.sort-asc::after {
        content: " ▲";
        color: #000;
    }

    th.sort-desc::after {
        content: " ▼";
        color: #000;
    }
</style>

<script>
        $(document).ready(function () {
            resizableTables[resizableTables.length] = new ColumnResize(document.getElementById('exist_GRP'));
            $("td").on("mouseover", function (e) {
                var titlee = $(this).find("input").val();
                $(this).attr('title', titlee);
            });
        });
</script>

<script>
let sortDirection = {};

function sortTable(colIndex) {
  const table = document.getElementById("exist_GRP");
  const tbody = table.tBodies[0];
  const rows = Array.from(tbody.querySelectorAll("tr"));

  sortDirection[colIndex] = !sortDirection[colIndex];
  const asc = sortDirection[colIndex];

  rows.sort((a, b) => {
    let aInput = a.cells[colIndex].querySelector("input");
    let bInput = b.cells[colIndex].querySelector("input");
    let aVal = aInput ? aInput.value.trim() : a.cells[colIndex].innerText.trim();
    let bVal = bInput ? bInput.value.trim() : b.cells[colIndex].innerText.trim();

    if (!isNaN(aVal) && !isNaN(bVal)) {
      return asc ? aVal - bVal : bVal - aVal;
    }
    return asc ? aVal.localeCompare(bVal) : bVal.localeCompare(aVal);
  });

  rows.forEach(row => tbody.appendChild(row));

  table.querySelectorAll("th").forEach(th => th.classList.remove("sort-asc", "sort-desc"));
  table.querySelectorAll("th")[colIndex].classList.add(asc ? "sort-asc" : "sort-desc");
}
</script>

<div id="ItemHead" style="margin-top: 7px;margin-left:13px;font-size: 14px;font-weight: bold;">
    <span>Item : @ViewBag.ITNM</span>
</div>
<div class="sticky-table sticky-ltr-cells" style="margin-left:4px;margin-right:4px;margin-top:7px;border-radius:10px;transform: translate(0%, 0%);z-index:1100;">
    <div style="height:auto;overflow-y:auto;max-height:58vh">
        <table id="exist_GRP" class="resizable table-striped" cellpadding="0px" cellspacing="0px" style="width:fit-content;" onkeydown="checkKey(event, 'exist_GRP', 'EChecked_');">
            <thead>
                <tr class="sticky-header" style="height:30px;">
                    @*<th class="sticky-cell" style="text-align:center;width: 27px;">
                            All
                            <input type="checkbox" name="Test" onclick="SetAllCheckBoxesFilterCUSTOM(this, 'exist_GRP', 'EChecked_', 'searchEX')" />
                        </th>*@
                    <th class="" onclick="sortTable(0)" style="width:98px;">Refdt</th>
                    <th class="" onclick="sortTable(1)" style="width:168px;">Refno</th>
                    <th class="" onclick="sortTable(2)" style="width:98px;">Design</th>
                    @*<th class="onclick="sortTable(0)" " style="width:60px;">Party</th>*@
                    <th class="" onclick="sortTable(3)" style="width:150px;">Doctype</th>
                    <th class="" onclick="sortTable(4)" style="width:80px;">Color</th>
                    <th class="" onclick="sortTable(5)" style="width:150px;">Item Remarks</th>
                    <th class="" onclick="sortTable(6)" style="width:80px;">Disc%</th>
                    <th class="" onclick="sortTable(7)" style="width:80px;">Sal.Qnty</th>
                    <th class="" onclick="sortTable(8)" style="width:150px;">Sal.Amt</th>
                    <th class="" onclick="sortTable(9)" style="width:80px;">Ret.Qnty</th>
                    <th class="" onclick="sortTable(10)" style="width:150px;">Ret.Amt</th>
                </tr>
            </thead>
            <tbody id="ItemBody">
                @if (Model.ItmDet != null && Model.ItmDet.Count > 0)
                {
                    for (int i = 0; i <= Model.ItmDet.Count - 1; i++)
                    {
                        <tr id="exist_GRP@(i+1)">
                            <td>
                                @Html.EditorFor(model => model.ItmDet[i].refdt, new { htmlAttributes = new { @class = "atextBoxFor", id = "refdt_" + i, maxlength = 10, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'exist_GRP');" } })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.ItmDet[i].refno, new { htmlAttributes = new { @class = "atextBoxFor", id = "refno_" + i, maxlength = 10, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'exist_GRP');" } })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.ItmDet[i].Design, new { htmlAttributes = new { @class = "atextBoxFor", id = "Design_" + i, maxlength = 10, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'exist_GRP');" } })
                            </td>
                            @*<td>
                                    @Html.EditorFor(model => model.ItmDet[i].slnm, new { htmlAttributes = new { @class = "atextBoxFor", id = "slnm_" + i, maxlength = 10, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'exist_GRP');" } })
                                </td>*@
                            <td>
                                @Html.EditorFor(model => model.ItmDet[i].docnm, new { htmlAttributes = new { @class = "atextBoxFor", id = "docnm_" + i, maxlength = 10, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'exist_GRP');" } })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.ItmDet[i].colrnm, new { htmlAttributes = new { @class = "atextBoxFor", id = "colrnm_" + i, maxlength = 10, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'exist_GRP');" } })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.ItmDet[i].itrem, new { htmlAttributes = new { @class = "atextBoxFor", id = "itrem_" + i, maxlength = 10, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'exist_GRP');" } })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.ItmDet[i].disc, new { htmlAttributes = new { @class = "atextBoxFor text-right", id = "disc_" + i, maxlength = 4, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'exist_GRP');" } })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.ItmDet[i].sqnty, new { htmlAttributes = new { @class = "atextBoxFor text-right", id = "sqnty_" + i, maxlength = 10, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'exist_GRP');" } })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.ItmDet[i].samt, new { htmlAttributes = new { @class = "atextBoxFor text-right", id = "samt_" + i, maxlength = 10, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'exist_GRP');" } })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.ItmDet[i].rqnty, new { htmlAttributes = new { @class = "atextBoxFor text-right", id = "rqnty_" + i, maxlength = 10, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'exist_GRP');" } })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.ItmDet[i].ramt, new { htmlAttributes = new { @class = "atextBoxFor text-right", id = "ramt_" + i, maxlength = 10, @readonly = "readonly", onclick = "CheckBoxCheck(this," + i + ",'exist_GRP');" } })
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" style="height:50px;color:red;font-size:12px;text-align:center">No Data Found!</td>
                        <td colspan="5"></td>
                    </tr>
                }
            </tbody>
            <tfoot id="ItemFoot">
                <tr class="sticky-footer">
                    <td><input type="text" class="atextBoxFor" readonly="readonly" /></td>
                    <td><input type="text" class="atextBoxFor" readonly="readonly" /></td>
                    <td><input type="text" class="atextBoxFor" readonly="readonly" /></td>
                    @*<td><input type="text" class="atextBoxFor" readonly="readonly" /></td>*@
                    <td><input type="text" class="atextBoxFor" readonly="readonly" /></td>
                    <td><input type="text" class="atextBoxFor" readonly="readonly" /></td>
                    <td><input type="text" class="atextBoxFor" readonly="readonly" /></td>
                    <td><input type="text" class="atextBoxFor" readonly="readonly" /></td>
                    <td style="text-align:right;border:groove;">
                        @Html.EditorFor(model => Model.T_sqntyi, new { htmlattributes = new { id = "T_sqntyi", @class = "atextBoxFor text-right", @TabIndex = -1, @readonly = "readonly" } })
                    </td>
                    <td style="text-align:right;border:groove;">
                        @Html.EditorFor(model => Model.T_samti, new { htmlattributes = new { id = "T_samti", @class = "atextBoxFor text-right", @TabIndex = -1, @readonly = "readonly" } })
                    </td>
                    <td style="text-align:right;border:groove;">
                        @Html.EditorFor(model => Model.T_rqntyi, new { htmlattributes = new { id = "T_rqntyi", @class = "atextBoxFor text-right", @TabIndex = -1, @readonly = "readonly" } })
                    </td>
                    <td style="text-align:right;border:groove;">
                        @Html.EditorFor(model => Model.T_ramti, new { htmlattributes = new { id = "T_ramti", @class = "atextBoxFor text-right", @TabIndex = -1, @readonly = "readonly" } })
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>
@*}*@

