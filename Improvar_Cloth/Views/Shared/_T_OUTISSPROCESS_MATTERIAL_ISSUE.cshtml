@model Improvar.ViewModels.IssueForProductionEntry
<div style="width: 3030px;height:50%; overflow-y:auto;">
    <div class="table-responsive">
        @if (Model.DefaultView == true)
        {
            @Html.ValidationSummary(true)
            <div class="grid_title">
                <img src="~/Image/Plus.png" id="btnAddDisRate" class="Help_image_buttonAddRemove" title="Add Row" onclick="AddMatIssue()" />
                <img src="~/Image/Minus.png" id="btnDeleteDisRate" class="Help_image_buttonAddRemove" title="Delete Row" onclick="DeleteMatIssue()" />
                <div class="col-md-8">
                    <input type="text" id="searchDis" name="search" class="grid_title_box textbox_image" value="" placeholder="Filter" onkeyup="filterTable(event, 'exampleProdBilMatIssue');" />
                    <img src="~/Image/search.png" title="Help" />
                </div>
                <center style="font-size: 11px;color: darkmagenta; border: 1px inset;text-align:left;"><b style="padding-left:85px;">Material Issue Entry Details</b></center>
            </div>
            <table id="exampleProdBilMatIssue" class="resizable grid_table" cellpadding="0px" cellspacing="0px" width="100%">
                <thead>
                    <tr style="height:30px">
                        <th class="grid_th" style="width:27px"></th>
                        <th class="grid_th" style="width:27px;">SL No.</th>
                        <th class="grid_th" style="width:110px;">Product Code</th>
                        <th class="grid_th" style="width:400px">Product Name</th>
                        <th class="grid_th" style="width:60px">Batchno</th>
                        <th class="grid_th" style="width:35px">UOM</th>
                        <th class="grid_th" style="width:55px">Part Code</th>
                        <th class="grid_th" style="width:125px">Part Name</th>
                        <th class="grid_th" style="width:55px">Color Code</th>
                        <th class="grid_th" style="width:160px">Color Name</th>
                        <th class="grid_th" style="width:55px">Size Code</th>
                        <th class="grid_th" style="width:160px">Size Name</th>
                        <th class="grid_th" style="width:45px">Dia</th>
                        <th class="grid_th" style="width:45px">Pcs/ Box</th>
                        <th class="grid_th" style="width:60px">Stk. Nos.</th>
                        <th class="grid_th" style="width:60px">Stk. Qnty</th>
                        <th class="grid_th" style="width:60px">Qnty.In</th>
                        <th class="grid_th" style="width:60px">Cut Length</th>
                        <th class="grid_th" style="width:60px">Nos.</th>
                        <th class="grid_th" style="width:60px">Qnty</th>
                        <th class="grid_th" style="width:60px">Av.Wght</th>
                        <th class="grid_th" style="width:60px">Rate</th>
                        <th class="grid_th" style="width:60px">Amount</th>
                    </tr>
                </thead>

                <tbody>
                    @if (Model.TTXNDTL != null)
                    {
                        for (int i = 0; i <= Model.TTXNDTL.Count - 1; i++)
                        {
                            <tr>
                                <td class="grid_td" style="padding-left:7px;padding-right:7px;">
                                    @Html.CheckBoxFor(model => model.TTXNDTL[i].Checked, new { htmlAttributes = new { id = "Checked_" } })
                                </td>
                                <td class="grid_td">
                                    @Html.TextBoxFor(model => Model.TTXNDTL[i].SLNO, new { id = "SLNO_" + i, @class = " atextBoxFor", maxlength = 2, Type = "TEXT", @readonly = "readonly" })
                                </td>
                                <td class="grid_td">
                                    @Html.TextBoxFor(model => Model.TTXNDTL[i].ITCD, new { id = "ITCDM_" + i, onkeyup = "GetHelp_WithId('" + @Url.Action("GetItemMatIssue", "T_OUTISSPROCESS") + "','" + "ITNMM_" + i + "/" + "ITCDM_" + i + "/" + "UOMNMM_" + i + "','0/1/2','Item Details','" + "ITCDM_" + i + "','" + "ITCDM_" + i + "')", onblur = "SelectItemCode1(this.value," + "ITCDM_" + i + "," + "ITNMM_" + i + "," + "UOMNMM_" + i + ");", maxlength = 10, @class = " atextBoxFor  textbox_image" })
                                    <img src="~/Image/search.png" class="Help_image_button_grid" width="20px" height="20px" title="Help" onclick="GetHelp_WithId('@Url.Action("GetItemMatIssue", "T_OUTISSPROCESS")','ITNMM_@i/ITCDM_@i/UOMNMM_@i','0/1/2','Item Details','ITCDM_@i','ITCDM_@i')" />
                                </td>
                                <td class="grid_td">
                                    @Html.TextBoxFor(model => Model.TTXNDTL[i].ITNM, new { id = "ITNMM_" + i, @class = " atextBoxFor ", maxlength = 60, @readonly = "readonly" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].BATCHNO, new { htmlAttributes = new { @class = "atextBoxFor textbox_image", id = "BATCHNO_" + i, onkeyup = "GetHelp('" + @Url.Action("GetDiscountPriceCode", "T_OUTISSPROCESS") + "','" + "DISCPRCD_" + i + "/" + "DISCPRNM_" + i + "','1/0','Discount Price Code Details','" + "DISCPRCD_" + i + "')", onblur = "SelectDisPrcCode(this.value,DISCPRCD_" + i + ",DISCPRNM_" + i + ",'DISCPRCD_" + i + "','DISCPRNM_" + i + "');", maxlength = 6, required = "required" } })
                                    <img src="~/Image/search.png" width="20px" class="Help_image_button_grid" height="20px" title="Help" onclick="GetHelp('@Url.Action("GetDiscountPriceCode", "T_OUTISSPROCESS")','DISCPRCD_@i/DISCPRNM_@i','1/0','Discount Price Code Details','DISCPRCD_@i')" />
                                </td>
                                <td class="grid_td">
                                    @Html.TextBoxFor(model => Model.TTXNDTL[i].UOMNM, new { id = "UOMNMM_" + i, @class = " atextBoxFor ", maxlength = 5, @readonly = "readonly" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].PARTCD, new { htmlAttributes = new { @class = "atextBoxFor textbox_image", id = "PARTCDM_" + i, onkeyup = "GetHelp('" + @Url.Action("GetPartDetails", "T_OUTISSPROCESS") + "','" + "PARTCDM_" + i + "/" + "PARTNMM_" + i + "','1/0','Part Details','" + "PARTCDM_" + i + "')", onblur = "SelectPartCode(this.value," + "PARTCDM_" + i + "," + "PARTNMM_" + i + ");", maxlength = 6, required = "required" } })
                                    <img src="~/Image/search.png" width="20px" class="Help_image_button_grid" height="20px" title="Help" onclick="GetHelp('@Url.Action("GetPartDetails", "T_OUTISSPROCESS")','PARTCDM_@i/PARTNMM_@i','1/0','Part Details','PARTCDM_@i')" />
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].PARTNM, new { htmlAttributes = new { @class = "atextBoxFor", id = "PARTNMM_" + i, maxlength = 30, @readonly = "readonly" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].COLRCD, new { htmlAttributes = new { @class = "atextBoxFor textbox_image", id = "COLRCDM_" + i, onkeyup = "GetHelp('" + @Url.Action("GetColorDetails", "T_OUTISSPROCESS") + "','" + "COLRCDM_" + i + "/" + "COLRNMM_" + i + "','1/0','Color Details','" + "COLRCDM_" + i + "')", onblur = "SelectColorCode(this.value," + "COLRCDM_" + i + "," + "COLRNMM_" + i + ");", maxlength = 6 } })
                                    <img src="~/Image/search.png" width="20px" class="Help_image_button_grid" height="20px" title="Help" onclick="GetHelp('@Url.Action("GetColorDetails", "T_OUTISSPROCESS")','COLRCDM_@i/COLRNMM_@i','1/0','Color Details','COLRCDM_@i')" />
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].COLRNM, new { htmlAttributes = new { @class = "atextBoxFor", id = "COLRNMM_" + i, maxlength = 30, @readonly = "readonly" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].SIZECD, new { htmlAttributes = new { @class = "atextBoxFor textbox_image", id = "SIZECDM_" + i, onkeyup = "GetHelp('" + @Url.Action("GetColorDetails", "T_OUTISSPROCESS") + "','" + "SIZECDM_" + i + "/" + "SIZENMM_" + i + "','1/0','Color Details','" + "SIZECDM_" + i + "')", onblur = "SelectSizeCode(this.value," + "SIZECDM_" + i + "," + "SIZENMM_" + i + ");", maxlength = 6, required = "required" } })
                                    <img src="~/Image/search.png" width="20px" class="Help_image_button_grid" height="20px" title="Help" onclick="GetHelp('@Url.Action("GetSizeDetails", "T_OUTISSPROCESS")','SIZECDM_@i/SIZENMM_@i','1/0','Size Details','SIZECDM_@i')" />
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].SIZENM, new { htmlAttributes = new { @class = "atextBoxFor", id = "SIZENMM_" + i, maxlength = 30, @readonly = "readonly" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].DIA, new { htmlAttributes = new { @class = "atextBoxFor", id = "DIA_" + i, maxlength = 30, @readonly = "readonly" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].PCSBOX, new { htmlAttributes = new { @class = "atextBoxFor", id = "DISCPRNM_" + i, maxlength = 30, @readonly = "readonly" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].STKNO, new { htmlAttributes = new { @class = "atextBoxFor", id = "DISCPRNM_" + i, maxlength = 30, @readonly = "readonly" } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].STKQNTY, new { htmlAttributes = new { @class = "atextBoxFor", id = "STKQNTY_" + i, maxlength = 30 } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].QNTYIN, new { htmlAttributes = new { @class = "atextBoxFor", id = "DISCPRNM_" + i, maxlength = 30 } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].CUTLENGTH, new { htmlAttributes = new { @class = "atextBoxFor", id = "DISCPRNM_" + i, maxlength = 30 } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].NOS, new { htmlAttributes = new { @class = "atextBoxFor", id = "DISCPRNM_" + i, maxlength = 30 } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].QNTY, new { htmlAttributes = new { @class = "atextBoxFor", id = "DISCPRNM_" + i, maxlength = 30 } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].AVGWAIT, new { htmlAttributes = new { @class = "atextBoxFor", id = "AVGWAIT_" + i, maxlength = 30 } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].RATE, new { htmlAttributes = new { @class = "atextBoxFor", id = "RATE_" + i, maxlength = 30 } })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.TTXNDTL[i].AMT, new { htmlAttributes = new { @class = "atextBoxFor", id = "AMT_" + i, maxlength = 30 } })
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        }

    </div>
</div>
