@model Improvar.ViewModels.TransactionPackingSlipEntry
@{
    string PageControllerName = "T_SALE";
    ViewBag.Title = "Packing Slip Entry";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    switch (Model.MENU_PARA)
    {
        case "SBPCK":
            ViewBag.Title = "Packing Slip"; break;
        case "SB":
            ViewBag.Title = "Sales Bill (Agst Packing Slip)"; break;
        case "SBDIR":
            ViewBag.Title = "Sales Bill"; break;
        case "SR":
            ViewBag.Title = "Sales Return (SRM)"; break;
        case "SBCM":
            ViewBag.Title = "Cash Memo"; break;
        case "SBCMR":
            ViewBag.Title = "Cash Memo Return Note"; break;
        case "SBEXP":
            ViewBag.Title = "Sales Bill (Export)"; break;
        case "PI":
            ViewBag.Title = "Proforma Invoice"; break;
        case "PB":
            ViewBag.Title = "Purchase Bill"; break;
        case "PR":
            ViewBag.Title = "Purchase Return (PRM)"; break;
        default: ViewBag.Title = ""; break;
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .TextAreaRemarks {
        height: 190px;
    }
</style>
<script src="~/Scripts/jquery.min.js"></script>
<link rel="stylesheet" href="~/Content/jquery.stickytable.css">
<script type="text/javascript">
    $("#WaitingMode").show();
    $(document).ready(function () {
        if ("@Model.DefaultAction" == "V" || "@Model.DefaultAction" == "D") {
            modeView();
        }
        else if ("@Model.DefaultAction" == "E") {

        }
        else if ("@Model.DefaultAction" == "A") {
            $('form :input:enabled:visible:not([readonly]):first').focus();
        }
        $("#WaitingMode").hide();
    });
</script>
<script>
    @{
        string mldauto = "";
        if (@Model.T_CNTRL_HDR != null)
        {
            if (@Model.T_CNTRL_HDR.AUTONO != null)
            {
                mldauto = Model.T_CNTRL_HDR.AUTONO.ToString();
                if (Model.T_CNTRL_HDR.CANCEL == "Y")
                {
                    ViewBag.formname = ViewBag.formname + "   " + "(Record Cancelled)";
                }
            }
        }
        else
        {
            mldauto = "";
        }
    }
    function ModifyLogDetails() {
        if ("@Model.DefaultAction" == "V") {
            ModifyLogDtl('@mldauto');
        }
    }
</script>
<script>
    function requiredFieldValidator() {
        if (!emptyFieldCheck("Please Select / Enter Document Date", "DOCDT")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Party", "SLCD")) { return false; }
        //if (!emptyFieldCheck("Please Select / Enter Price List", "PRCCD")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Agent", "AGSLCD")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter SalesMen", "CRSLCD")) { return false; }
        return true;
    }
</script>
<script>
    $(function () {
        if ("@Model.DefaultAction" != "V") {
            $("#DOCDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate', minDate: '@Model.mindate' });
            $("#LRDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate' });
        }
    });
</script>
<script>
    debugger;
    function GetBarnoDetails(id) {
        if ("@Model.DefaultAction" != "V") {
            debugger;
            if (id == "") {
                ClearAllTextBoxes("BARCODE");
            }
            else {
                if (!emptyFieldCheck("Please Select / Enter Document Date", "DOCDT")) { return false; }
                if (!emptyFieldCheck("Please Select / Enter TaxGrp. Code", "TAXGRPCD")) { return false; }
                if (!emptyFieldCheck("Please Select / Enter Price Code", "PRCCD")) { return false; }
                var docdt = $("#DOCDT").val();
                var taxgrpcd = $("#TAXGRPCD").val();
                var gocd = $("#GOCD").val();
                var prccd = $("#PRCCD").val();
                var mtrljobcd = $("#MTRLJOBCD").val();
                $.ajax({
                    type: 'POST',
                    beforesend: $("#WaitingMode").show(),
                    url: "@Url.Action("GetBarCodeDetails", PageControllerName)",
                    data: "&val=" + id + "&DOCDT=" + docdt + "&TAXGRPCD=" + taxgrpcd + "&GOCD=" + gocd + "&PRCCD=" + prccd + "&MTRLJOBCD=" + mtrljobcd,
                    success: function (result) {
                        var MSG = result.indexOf('id="_T_SALE_BARNODETAIL_GRID"');
                        if (MSG >= 0) {
                            $("#popup").animate({ marginTop: '-10px' }, 50);
                            $("#popup").html(result);
                            $("#WaitingMode").hide();
                        }
                        else {
                            var MSG = result.indexOf(String.fromCharCode(181));
                            if (MSG >= 0) {
                                FillBarcodeArea(result);
                            }
                            else {
                                $('#helpDIV').html("");
                                msgInfo("" + result + " !");
                                ClearAllTextBoxes("BARCODE");
                                message_value = "BARCODE";
                            }
                        }
                        $("#WaitingMode").hide();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $("#WaitingMode").hide();
                        msgError(XMLHttpRequest.responseText);
                        $("body span h1").remove(); $("#msgbody_error style").remove();
                    }
                });
            }
        }
    }
    function FillBarcodeArea(str, Table, i) {
        if (str != "") {
            $("#TXNSLNO").val(returncolvalue(str, "TXNSLNO"));
            $("#ITGRPCD").val(returncolvalue(str, "ITGRPCD"));
            $("#ITGRPNM").val(returncolvalue(str, "ITGRPNM"));
            $("#MTRLJOBCD").val(returncolvalue(str, "MTRLJOBCD"));
            $("#MTRLJOBNM").val(returncolvalue(str, "MTRLJOBNM"));
            $("#ITCD").val(returncolvalue(str, "ITCD"));
            $("#ITNM").val(returncolvalue(str, "ITNM"));
            $("#STYLENO").val(returncolvalue(str, "STYLENO"));
            $("#STKTYPE").val(returncolvalue(str, "STKTYPE"));
            $("#PARTCD").val(returncolvalue(str, "PARTCD"));
            $("#PARTNM").val(returncolvalue(str, "PARTNM"));
            $("#COLRCD").val(returncolvalue(str, "COLRCD"));
            $("#COLRNM").val(returncolvalue(str, "COLRNM"));
            $("#SIZECD").val(returncolvalue(str, "SIZECD"));
            $("#SIZENM").val(returncolvalue(str, "SIZENM"));
            $("#PSTYLENO").val(returncolvalue(str, "PSTYLENO"));
            $("#BALSTOCK").val(returncolvalue(str, "BALQNTY"));
            $("#QNTY").val(returncolvalue(str, "QNTY"));
            $("#UOM").val(returncolvalue(str, "UOM"));
            $("#NOS").val(returncolvalue(str, "NOS"));
            $("#FLAGMTR").val(returncolvalue(str, "FLAGMTR"));
            $("#RATE").val(returncolvalue(str, "RATE"));
            $("#DISCRATE").val(returncolvalue(str, "DISCRATE"));
            $("#DISCTYPE").val(returncolvalue(str, "DISCTYPE"));
            $("#HSNCODE").val(returncolvalue(str, "HSNCODE"));
            $("#GSTPER").val(returncolvalue(str, "GSTPER"));
            $("#SHADE").val(returncolvalue(str, "SHADE"));
            if ("@Model.MENU_PARA" == "PB") {
                $("#BALENO").val(returncolvalue(str, "BALENO"));
            }
            $("#TDDISCTYPE").val(returncolvalue(str, "TDDISCTYPE"));
            $("#TDDISCRATE").val(returncolvalue(str, "TDDISCRATE"));
            $("#SCMDISCTYPE").val(returncolvalue(str, "SCMDISCTYPE"));
            $("#SCMDISCRATE").val(returncolvalue(str, "SCMDISCRATE"));
            $("#LOCABIN").val(returncolvalue(str, "LOCABIN"));
        }
        else {
            var id = "";
            if (Table == "_T_SALE_BARNODETAIL_GRID") {
                var GridRowMain = $("#_T_SALE_BARNODETAIL_GRID > tbody > tr").length;
                var cnt = 0;
                for (j = 0; j <= GridRowMain - 1; j++) {
                    if (document.getElementById("STOCK_Checked_" + j).checked == true) {
                        i = j;
                        cnt++;
                    }
                }
                if (cnt == 0) {
                    msgInfo("Please Select row from stock details !");
                    return false;
                }
                else if (cnt != 1) {
                    msgInfo("Please Select only one row from stock details !");
                    return false;
                }
                else {
                    id = "#STOCK_";
                }
            }
            else {
                id = "#B_";
            }
            if (Table != "_T_SALE_BARNODETAIL_GRID") {

                $("#SLNO").val($(id + "SLNO_" + i).val());
                $("#TXNSLNO").val($(id + "TXNSLNO_" + i).val());
                $("#STKNAME").val($(id + "STKNAME_" + i).val());
                $("#PSTYLENO").val($(id + "PSTYLENO_" + i).val());
                $("#QNTY").val($(id + "QNTY_" + i).val());
                $("#NOS").val($(id + "NOS_" + i).val());
                $("#FLAGMTR").val($(id + "FLAGMTR_" + i).val());
                $("#RATE").val($(id + "RATE_" + i).val());
                $("#DISCRATE").val($(id + "DISCRATE_" + i).val());
                $("#DISCTYPE").val($(id + "DISCTYPE_" + i).val());
                $("#HSNCODE").val($("HSNCODE_" + i).val());
                $("#GSTPER").val($(id + "GSTPER_" + i).val());
                $("#SHADE").val($(id + "SHADE_" + i).val());
                $("#TDDISCTYPE").val($(id + "TDDISCTYPE_" + i).val());
                $("#TDDISCRATE").val($(id + "TDDISCRATE_" + i).val());
                $("#SCMDISCTYPE").val($(id + "SCMDISCTYPE_" + i).val());
                $("#SCMDISCRATE").val($(id + "SCMDISCRATE_" + i).val());
                $("#LOCABIN").val($(id + "LOCABIN_" + i).val());
            }
            $("#BARCODE").val($(id + "BARNO_" + i).val());
            $("#ITGRPCD").val($(id + "ITGRPCD_" + i).val());
            $("#ITGRPNM").val($(id + "ITGRPNM_" + i).val());
            $("#MTRLJOBCD").val($(id + "MTRLJOBCD_" + i).val());
            $("#MTRLJOBNM").val($(id + "MTRLJOBNM_" + i).val());
            $("#ITCD").val($(id + "ITCD_" + i).val());
            $("#ITNM").val($(id + "ITNM_" + i).val());
            $("#STYLENO").val($(id + "STYLENO_" + i).val());
            $("#STKTYPE").val($(id + "STKTYPE_" + i).val());
            $("#PARTCD").val($(id + "PARTCD_" + i).val());
            $("#PARTNM").val($(id + "PARTNM_" + i).val());
            $("#COLRCD").val($(id + "COLRCD_" + i).val());
            $("#COLRNM").val($(id + "COLRNM_" + i).val());
            $("#SIZECD").val($(id + "SIZECD_" + i).val());
            $("#SIZENM").val($(id + "SIZENM_" + i).val());
            if (Table == "_T_SALE_BARNODETAIL_GRID") {
                $("#BALSTOCK").val($(id + "BALQNTY_" + i).val());
            }
            $("#UOM").val($(id + "UOM_" + i).val());
            if (Table == "_T_SALE_BARNODETAIL_GRID") {
                CloseBarnoPopup();
            }
        }

    }
    function CloseBarnoPopup() {
        $("#popup").html("");
    }
</script>
<script>
    function OpenAmount() {
        var AUTO_NO = document.getElementById("AUTONO").value;
        var A_T_NOS = document.getElementById("T_NOS").value;
        var A_T_QNTY = document.getElementById("T_QNTY").value;
        var A_T_AMT = document.getElementById("T_AMT").value;
        var A_T_TAXABLE = document.getElementById("T_GROSS_AMT").value;
        var A_T_IGST_AMT = document.getElementById("T_IGST_AMT").value;
        var A_T_CGST_AMT = document.getElementById("T_CGST_AMT").value;
        var A_T_SGST_AMT = document.getElementById("T_SGST_AMT").value;
        var A_T_CESS_AMT = document.getElementById("T_CESS_AMT").value;
        var A_T_NET_AMT = document.getElementById("T_NET_AMT").value;

        if (A_T_NOS == "") { A_T_NOS = parseInt(0) } else { A_T_NOS = parseInt(A_T_NOS) }
        if (A_T_QNTY == "") { A_T_QNTY = parseFloat(0) } else { A_T_QNTY = parseFloat(A_T_QNTY) }
        if (A_T_AMT == "") { A_T_AMT = parseFloat(0) } else { A_T_AMT = parseFloat(A_T_AMT) }
        if (A_T_TAXABLE == "") { A_T_TAXABLE = parseFloat(0) } else { A_T_TAXABLE = parseFloat(A_T_TAXABLE) }
        if (A_T_IGST_AMT == "") { A_T_IGST_AMT = parseFloat(0) } else { A_T_IGST_AMT = parseFloat(A_T_IGST_AMT) }
        if (A_T_CGST_AMT == "") { A_T_CGST_AMT = parseFloat(0) } else { A_T_CGST_AMT = parseFloat(A_T_CGST_AMT) }
        if (A_T_SGST_AMT == "") { A_T_SGST_AMT = parseFloat(0) } else { A_T_SGST_AMT = parseFloat(A_T_SGST_AMT) }
        if (A_T_CESS_AMT == "") { A_T_CESS_AMT = parseFloat(0) } else { A_T_CESS_AMT = parseFloat(A_T_CESS_AMT) }
        if (A_T_NET_AMT == "") { A_T_NET_AMT = parseFloat(0) } else { A_T_NET_AMT = parseFloat(A_T_NET_AMT) }

        var IGST_PER = 0; var CGST_PER = 0; var SGST_PER = 0; var CESS_PER = 0;

        var GridRowMain = $("#_T_SALE_DETAIL_GRID > tbody > tr").length;
        for (i = 0; i <= GridRowMain - 1; i++) {
            var IGST = document.getElementById("D_IGSTPER_" + i).value;
            if (IGST == "") { IGST = parseFloat(0); } else { IGST = parseFloat(IGST); }
            var CGST = document.getElementById("D_CGSTPER_" + i).value;
            if (CGST == "") { CGST = parseFloat(0); } else { CGST = parseFloat(CGST); }
            var SGST = document.getElementById("D_SGSTPER_" + i).value;
            if (SGST == "") { SGST = parseFloat(0); } else { SGST = parseFloat(SGST); }
            var CESS = document.getElementById("D_CESSPER_" + i).value;
            if (CESS == "") { CESS = parseFloat(0); } else { CESS = parseFloat(CESS); }
            if (IGST > IGST_PER) {
                IGST_PER = IGST;
            }
            if (CGST > CGST_PER) {
                CGST_PER = CGST;
            }
            if (SGST > SGST_PER) {
                SGST_PER = SGST;
            }
            if (CESS > CESS_PER) {
                CESS_PER = CESS;
            }
        }
        $.ajax({
            type: 'post',
            url: "@Url.Action("OPEN_AMOUNT", PageControllerName)",
            data: $('form').serialize() + "&AUTO_NO=" + AUTO_NO + "&A_T_NOS=" + A_T_NOS + "&A_T_QNTY=" + A_T_QNTY + "&A_T_AMT=" + A_T_AMT + "&A_T_TAXABLE=" + A_T_TAXABLE
                                        + "&A_T_IGST_AMT=" + A_T_IGST_AMT + "&A_T_CGST_AMT=" + A_T_CGST_AMT + "&A_T_SGST_AMT=" + A_T_SGST_AMT + "&A_T_CESS_AMT=" + A_T_CESS_AMT
                                        + "&A_T_NET_AMT=" + A_T_NET_AMT + "&IGST_PER=" + IGST_PER + "&CGST_PER=" + CGST_PER + "&SGST_PER=" + SGST_PER + "&CESS_PER=" + CESS_PER,
            success: function (result) {
                $('#partialdivAmounts').html(result);
                $("#AMTRATE_0").focus();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError("Error: " + textStatus + "," + errorThrown);
            }
        });
    }
</script>
<script>
    function CalulateTareWt(GRWT, NTWT, TRWT) {
        var GROSS = document.getElementById(GRWT.id).value;
        if (GROSS == "") {
            GROSS = parseFloat(0);
        }
        var NET = document.getElementById(NTWT.id).value;
        if (NET == "") {
            NET = parseFloat(0);
        }
        var TARE = GROSS - NET;
        document.getElementById(TRWT.id).value = TARE.toFixed(3);
    }
</script>
<script>
    function Add_BarCodeRow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("FillBarCodeData", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                //$("#partialdivBarCodeTab").animate({ marginTop: '-10px' }, 50);
                $("#partialdivBarCodeTab").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function EditBarCodeRow(i) {

        $("#BARCODE").val($("#B_BARNO_" + i).val());
        $("#TXNSLNO").val($("#B_TXNSLNO_" + i).val());
        $("#ITGRPCD").val($("#B_ITGRPCD_" + i).val());
        $("#ITGRPNM").val($("#B_ITGRPNM_" + i).val());
        $("#MTRLJOBCD").val($("#B_MTRLJOBCD_" + i).val());
        $("#MTRLJOBNM").val($("#B_MTRLJOBNM_" + i).val());
        $("#ITCD").val($("#B_ITCD_" + i).val());
        $("#ITNM").val($("#B_ITNM_" + i).val());
        $("#STYLENO").val($("#B_STYLENO_" + i).val());
        $("#STKTYPE").val($("#B_STKTYPE_" + i).val());
        $("#STKNAME").val($("#B_STKNAME_" + i).val());
        $("#PARTCD").val($("#B_PARTCD_" + i).val());
        $("#PARTNM").val($("#B_PARTNM_" + i).val());
        $("#COLRCD").val($("#B_COLRCD_" + i).val());
        $("#COLRNM").val($("#B_COLRNM_" + i).val());
        $("#SIZECD").val($("#B_SIZECD_" + i).val());
        $("#SIZENM").val($("#B_SIZENM_" + i).val());
        //$("#PSTYLENO").val($("#B_TXNSLNO_" + i).val());
        //$("#BALSTOCK").val($("#B_TXNSLNO_" + i).val());
        $("#QNTY").val($("#B_QNTY_" + i).val());
        $("#UOM").val($("#B_UOM_" + i).val());
        $("#NOS").val($("#B_NOS_" + i).val());
        //$("#FLAGMTR").val($("#B_TXNSLNO_" + i).val());
        $("#RATE").val($("#B_RATE_" + i).val());
        $("#DISCRATE").val($("#B_DISCRATE_" + i).val());
        $("#DISCTYPE").val($("#B_DISCTYPE_" + i).val());
        //$("#HSNCODE").val($("#B_TXNSLNO_" + i).val());
        $("#GSTPER").val($("#B_GSTPER_" + i).val());
        $("#SHADE").val($("#B_SHADE_" + i).val());
        $("#TDDISCTYPE").val($("#B_TDDISCTYPE_" + i).val());
        $("#TDDISCRATE").val($("#B_TDDISCRATE_" + i).val());
        $("#SCMDISCTYPE").val($("#B_SCMDISCTYPE_" + i).val());
        $("#SCMDISCRATE").val($("#B_SCMDISCRATE_" + i).val());
        //$("#LOCABIN").val($("#B_TXNSLNO_" + i).val());

        var slno = $("#B_SLNO_" + i).val();
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteBarCodeRow", PageControllerName)",
            data: $('form').serialize() + "&SLNO=" + slno,
            success: function (result) {
                $("#partialdivBarCodeTab").animate({ marginTop: '0px' }, 50);
                $("#partialdivBarCodeTab").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });

    }
    function UpdateBarCodeRow(i) {
        var TXNSLNO = $("#D_SLNO_" + i).val();
        //var ITGRPCD = $("#D_ITGRPCD_" + i).val();
        //var MTRLJOBCD = $("#D_MTRLJOBCD_" + i).val();
        //var ITCD = $("#D_ITCD_" + i).val();
        //var STKTYPE = $("#D_STKTYPE_" + i).val();
        //fill
        var RATE = $("#D_RATE_" + i).val();
        var DISCTYPE = $("#D_DISCTYPE_" + i).val();
        var DISCTYPE_DESC = $("#D_DISCTYPE_DESC_" + i).val();
        var DISCRATE = $("#D_DISCRATE_" + i).val();
        var TDDISCRATE = $("#D_TDDISCRATE_" + i).val();
        var TDDISCTYPE = $("#D_TDDISCTYPE_" + i).val();
        var SCMDISCRATE = $("#D_SCMDISCRATE_" + i).val();
        var SCMDISCTYPE = $("#D_SCMDISCTYPE_" + i).val();
        var GridRowMain = $("#_T_SALE_PRODUCT_GRID > tbody > tr").length;
        for (j = 0; j <= GridRowMain - 1; j++) {
            if ($("#B_TXNSLNO_" + j).val() == TXNSLNO) {
                $("#B_RATE_" + j).val(RATE);
                $("#B_DISCTYPE_" + j).val(DISCTYPE);
                $("#B_DISCTYPE_DESC_" + j).val(DISCTYPE_DESC);
                $("#B_DISCRATE_" + j).val(DISCRATE);
                $("#B_TDDISCRATE_" + j).val(TDDISCRATE);
                $("#B_TDDISCTYPE_" + j).val(TDDISCTYPE);
                $("#B_SCMDISCRATE_" + j).val(SCMDISCRATE);
                $("#B_SCMDISCTYPE_" + j).val(SCMDISCTYPE);
            }
        }
    }
    function Fill_DetailData() {
        $.ajax({
            type: 'POST',
            beforesend: $("#WaitingMode").show(),
            url: "@Url.Action("FillDetailData", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                //$("#partialdivBarCodeTab").animate({ marginTop: '-10px' }, 50);
                $("#partialdivDetail").html(result);
                $("li").removeClass("active").addClass("");
                $(".nav-tabs li:nth-child(3)").addClass('active');
                //below set the  child sequence
                $(".tab-content div").removeClass("active");
                $(".tab-content div:nth-child(3)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
                var GridRow = $("#_T_SALE_DETAIL_GRID > tbody > tr").length;
                for (var i = 0; i <= GridRow - 1; i++) {
                    CalculateAmt_Details(i);
                }
                $("#WaitingMode").hide();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }

</script>
<script>
    function CalculateAmt_Details(i) {
        var BLQNTY = $("#D_BLQNTY_" + i).val();
        if (BLQNTY != "") { BLQNTY = parseFloat(BLQNTY); } else { BLQNTY = parseFloat(0); }

        var QNTY = $("#D_QNTY_" + i).val();
        if (QNTY != "") { QNTY = parseFloat(QNTY); } else { QNTY = parseFloat(0); }

        var FLAGMTR = $("#D_FLAGMTR_" + i).val();
        if (FLAGMTR != "") { FLAGMTR = parseFloat(FLAGMTR); } else { FLAGMTR = parseFloat(0); }

        var RATE = $("#D_RATE_" + i).val();
        if (RATE != "") { RATE = parseFloat(RATE); } else { RATE = parseFloat(0); }

        var TOTDISCAMT = $("#D_TOTDISCAMT_" + i).val();
        if (TOTDISCAMT != "") { TOTDISCAMT = parseFloat(TOTDISCAMT); } else { TOTDISCAMT = parseFloat(0); }

        var IGSTPER = $("#D_IGSTPER_" + i).val();
        if (IGSTPER != "") { IGSTPER = parseFloat(IGSTPER); } else { IGSTPER = parseFloat(0); }

        var CGSTPER = $("#D_CGSTPER_" + i).val();
        if (CGSTPER != "") { CGSTPER = parseFloat(CGSTPER); } else { CGSTPER = parseFloat(0); }

        var SGSTPER = $("#D_SGSTPER_" + i).val();
        if (SGSTPER != "") { SGSTPER = parseFloat(SGSTPER); } else { SGSTPER = parseFloat(0); }

        var CESSPER = $("#D_CESSPER_" + i).val();
        if (CESSPER != "") { CESSPER = parseFloat(CESSPER); } else { CESSPER = parseFloat(0); }

        //AMOUNT CALCULATION
        var amount = 0;
        if (BLQNTY == 0) {
            amount = (parseFloat(QNTY) - parseFloat(FLAGMTR)) * parseFloat(RATE);
        }
        else {
            amount = parseFloat(BLQNTY) * parseFloat(RATE);
        }
        amount = parseFloat(amount).toFixed(2);
        $("#D_AMT_" + i).val(amount);

        //TAXABLE CALCULATION
        var taxbleamt = parseFloat(amount) - parseFloat(TOTDISCAMT);
        taxbleamt = parseFloat(taxbleamt).toFixed(2);
        $("#D_TXBLVAL_" + i).val(taxbleamt);
        //IGST,CGST,SGST,CESS AMOUNT CALCULATION

        var IGST_AMT = 0; var CGST_AMT = 0; var SGST_AMT = 0; var CESS_AMT = 0; var chkAmt = 0;

        //IGST
        if (IGSTPER == 0 || IGSTPER == "") {
            IGSTPER = 0; IGST_AMT = 0;
        }
        else {
            IGST_AMT = parseFloat((taxbleamt * IGSTPER) / 100).toFixed(2);
            chkAmt = $("#D_IGSTAMT_" + i).val();
            if (chkAmt == "") chkAmt = 0;
            if (Math.abs(IGST_AMT - chkAmt) <= 1) IGST_AMT = chkAmt;
        }
        $("#D_IGSTAMT_" + i).val(IGST_AMT);
        //CGST
        if (CGSTPER == "" || CGSTPER == 0) {
            CGSTPER = 0; CGST_AMT = 0;
        }
        else {
            CGST_AMT = parseFloat((taxbleamt * CGSTPER) / 100).toFixed(2);
            chkAmt = $("#D_CGSTAMT_" + i).val();
            if (chkAmt == "") chkAmt = 0;
            if (Math.abs(CGST_AMT - chkAmt) <= 1) CGST_AMT = chkAmt;
        }
        $("#D_CGSTAMT_" + i).val(CGST_AMT);
        //SGST
        if (SGSTPER == "" || SGSTPER == 0) {
            SGSTPER = 0; SGST_AMT = 0;
        }
        else {
            SGST_AMT = parseFloat((taxbleamt * SGSTPER) / 100).toFixed(2);
            chkAmt = $("#D_SGSTAMT_" + i).val();
            if (chkAmt == "") chkAmt = 0;
            if (Math.abs(SGST_AMT - chkAmt) <= 1) SGST_AMT = chkAmt;
        }
        $("#D_SGSTAMT_" + i).val(SGST_AMT);

        //CESS
        if (CESSPER == "" || CESSPER == 0) {
            CESSPER = 0; CESS_AMT = 0;
        }
        else {
            CESS_AMT = parseFloat((taxbleamt * CESSPER) / 100).toFixed(2);
            chkAmt = $("#D_CESSAMT_" + i).val();
            if (chkAmt == "") chkAmt = 0;
            if (Math.abs(CESS_AMT - chkAmt) <= 1) CESS_AMT = chkAmt;
        }
        $("#D_CESSAMT_" + i).val(CESS_AMT);

        var netamt = parseFloat(parseFloat(taxbleamt) + parseFloat(IGST_AMT) + parseFloat(CGST_AMT) + parseFloat(SGST_AMT) + parseFloat(CESS_AMT)).toFixed(2);
        $("#D_NETAMT_" + i).val(netamt);
        CalculateTotal_Details();
    }
    function CalculateTotal_Details() {
        var T_NOS = 0; var T_QNTY = 0; var T_AMT = 0; var T_GROSS_AMT = 0; var T_IGST_AMT = 0; var T_CGST_AMT = 0; var T_SGST_AMT = 0; var T_CESS_AMT = 0; var T_NET_AMT = 0;

        var GridRow = $("#_T_SALE_DETAIL_GRID > tbody > tr").length;
        for (var i = 0; i <= GridRow - 1; i++) {
            var NOS = $("#D_NOS_" + i).val();
            if (NOS != "") { T_NOS = T_NOS + parseFloat(NOS); } else { T_NOS = T_NOS + parseInt(0); }

            var QNTY = $("#D_QNTY_" + i).val();
            if (QNTY != "") { T_QNTY = T_QNTY + parseFloat(QNTY); } else { T_QNTY = T_QNTY + parseInt(0); }

            var AMT = $("#D_AMT_" + i).val();
            if (AMT != "") { T_AMT = T_AMT + parseFloat(AMT); } else { T_AMT = T_AMT + parseInt(0); }

            var GROSS_AMT = $("#D_TXBLVAL_" + i).val();
            if (GROSS_AMT != "") { T_GROSS_AMT = T_GROSS_AMT + parseFloat(GROSS_AMT); } else { T_GROSS_AMT = T_GROSS_AMT + parseInt(0); }

            var IGST_AMT = $("#D_IGSTAMT_" + i).val();
            if (IGST_AMT != "") { T_IGST_AMT = T_IGST_AMT + parseFloat(IGST_AMT); } else { T_IGST_AMT = T_IGST_AMT + parseInt(0); }

            var CGST_AMT = $("#D_CGSTAMT_" + i).val();
            if (CGST_AMT != "") { T_CGST_AMT = T_CGST_AMT + parseFloat(CGST_AMT); } else { T_CGST_AMT = T_CGST_AMT + parseInt(0); }

            var SGST_AMT = $("#D_SGSTAMT_" + i).val();
            if (SGST_AMT != "") { T_SGST_AMT = T_SGST_AMT + parseFloat(SGST_AMT); } else { T_SGST_AMT = T_SGST_AMT + parseInt(0); }

            var CESS_AMT = $("#D_CESSAMT_" + i).val();
            if (CESS_AMT != "") { T_CESS_AMT = T_CESS_AMT + parseFloat(CESS_AMT); } else { T_CESS_AMT = T_CESS_AMT + parseInt(0); }

            var NET_AMT = $("#D_NETAMT_" + i).val();
            if (NET_AMT != "") { T_NET_AMT = T_NET_AMT + parseFloat(NET_AMT); } else { T_NET_AMT = T_NET_AMT + parseInt(0); }
        }
        var totaltax = parseFloat(T_IGST_AMT) + parseFloat(T_CGST_AMT) + parseFloat(T_SGST_AMT) + parseFloat(T_CESS_AMT);
        $("#T_NOS").val(parseFloat(T_NOS).toFixed(2));
        $("#T_QNTY").val(parseFloat(T_QNTY).toFixed(2));
        $("#T_AMT").val(parseFloat(T_AMT).toFixed(2));
        $("#T_GROSS_AMT").val(parseFloat(T_GROSS_AMT).toFixed(2));
        $("#T_IGST_AMT").val(parseFloat(T_IGST_AMT).toFixed(2));
        $("#T_CGST_AMT").val(parseFloat(T_CGST_AMT).toFixed(2));
        $("#T_SGST_AMT").val(parseFloat(T_SGST_AMT).toFixed(2));
        $("#T_CESS_AMT").val(parseFloat(T_CESS_AMT).toFixed(2));
        $("#T_NET_AMT").val(parseFloat(T_NET_AMT).toFixed(2));

        //main tab
        //$("#TOTNOS").val(parseFloat(T_NOS).toFixed(2));
        //$("#TOTQNTY").val(parseFloat(T_QNTY).toFixed(2));
        //$("#TOTTAXVAL").val(parseFloat(T_GROSS_AMT).toFixed(2));
        //$("#TOTTAX").val(parseFloat(totaltax).toFixed(2));
    }

</script>
<script>
    function AddDOCrow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddDOCRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '-10px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeleteDOCrow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteDOCRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '0px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function pageprinting() {
        var ty = $("#DOCCD").val();
        $.ajax({
            type: 'get',
            url: "@Url.Action("Print", PageControllerName)",
            data: "DOCNO=" + $("#DOCNO").val() + "&DOC_CD=" + $("#DOCCD").val() + "&DOCDT=" + $("#DOCDT").val(),
            success: function (result) {
                window.open("@Url.Action("Rep_OrdPrint", "Rep_OrdPrint", new { US = Model.UNQSNO_ENCRYPTED })", "_blank")
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>

@using (Html.BeginForm())
{
    if (Model.DefaultView == true)
    {
        @Html.HiddenFor(a => Model.maxdate)
        @Html.HiddenFor(a => Model.mindate)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" id="btnSave" value="@Url.Action("SAVE", PageControllerName)" />
        <input type="hidden" id="srhpnl" value="@Url.Action("SearchPannelData", PageControllerName)" />
        <input type="hidden" id="partylinkcd" value="D" />
        <input type="hidden" id="agentlinkcd" value="A" />
        <input type="hidden" id="courierlinkcd" value="U" />
        <input type="hidden" id="trnsportlinkcd" value="T" />
        <input type="hidden" id="slcd_tag" value="Party" />
        @Html.HiddenFor(s => s.DefaultAction)
        @Html.HiddenFor(a => a.T_TXN.AUTONO, new { id = "AUTONO" })
        @Html.HiddenFor(a => a.T_TXN.DOCNO)
        @Html.HiddenFor(a => a.T_CNTRL_HDR.MNTHCD)
        @Html.HiddenFor(a => a.T_CNTRL_HDR.EMD_NO)
        <div class="form-horizontal">
            @if (Model.DefaultAction == "V")
            {
                @Html.Partial("_FilteredSearch")
            }
            <div class="row" style="margin-top: 5px;">
                <div class="row">
                    <div class="col-md-5" style="margin-top: 6px;">
                        <div class="editor-label">
                            @Html.Label("", "Document Code")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="editor-field">
                            @if (Model.DefaultAction == "A")
                            {
                                @Html.DropDownListFor(model => model.T_TXN.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", @onchange = "ChangeDoctype();" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.T_TXN.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", style = "pointer-events:none;background-color:#eee" })
                            }
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Document Date")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.DOCDT, new { htmlAttributes = new { @class = "form-control", id = "DOCDT", onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy", maxlength = 10 } })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Document No.")
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.DOCNO, new { htmlAttributes = new { @class = "form-control", id = "DOCNO", @placeholder = "Doc. No.", maxlength = 6, @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Bill Type")
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXNOTH.BLTYPE, new { htmlAttributes = new { @class = "form-control", id = "BLTYPE", @placeholder = "Bill Type", maxlength = 5, @list = "BillType_List" } })
                            <datalist id="BillType_List">
                                @foreach (var jg in Model.BL_TYPE)
                                {
                                    <option value="@jg.FIELD_VALUE" />
                                }
                            </datalist>
                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Party Code")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.SLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=slarea=3/GSTNO=gstno=2/TAXGRPCD=TAXGRPCD/PRCCD=PRCCD/PRCNM=PRCNM','slcd_tag/DOCDT')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=slarea=3/GSTNO=gstno=2/TAXGRPCD=TAXGRPCD/PRCCD=PRCCD/PRCNM=PRCNM','slcd_tag/DOCDT');", @placeholder = "Code", maxlength = 8 } })
                            <img src="~/Image/search.png" id="PARTY_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=slarea=3/GSTNO=gstno=2/TAXGRPCD=TAXGRPCD/PRCCD=PRCCD/PRCNM=PRCNM','slcd_tag/DOCDT')" />
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.SLNM, new { htmlAttributes = new { @class = "form-control", id = "SLNM", maxlength = 45, @title = "Only for View", @placeholder = "Party Name", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.SLAREA, new { htmlAttributes = new { @class = "form-control", id = "SLAREA", @title = "Only for View", @placeholder = "Area", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.GSTNO, new { htmlAttributes = new { @class = "form-control", id = "GSTNO", @title = "Only for View", @placeholder = "GST No.", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXNOTH.TAXGRPCD, new { htmlAttributes = new { @class = "form-control", id = "TAXGRPCD", @title = "Only for View", @placeholder = "Tax Group Code", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>
                    <div class="col-md-1" style="width:auto;">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Due Days")
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.DUEDAYS, new { htmlAttributes = new { @class = "form-control", id = "DUEDAYS", maxlength = 3, @placeholder = "Due Days" } })
                        </div>
                    </div>

                </div>

            </div>
            <div class="row" style="margin-top:5px;">
                <ul class="nav nav-tabs">
                    <li id="Main_LI4" class="active"><a data-toggle="tab" href="#Main" accesskey="M">Main(M)</a></li>
                    <li id="BarCodeTab_LI4" class=""><a data-toggle="tab" href="#BarCodeTab" accesskey="B">Bar Code(B)</a></li>
                    <li id="Detail_LI4" class=""><a data-toggle="tab" href="#DetailTab" accesskey="D">Detail(D)</a></li>
                    <li id="Amounts_LI" class=""><a data-toggle="tab" href="#Amounts" onclick="OpenAmount();" accesskey="A">Amounts(A)</a></li>
                    <li id="Transport_LI" class=""><a data-toggle="tab" href="#Transport" accesskey="T">Transport(T)</a></li>
                    <li id="Remarks_LI4" class=""><a data-toggle="tab" href="#Remarks">Remarks</a></li>
                    <li id="Documents_LI4" class=""><a data-toggle="tab" href="#Documents">Documents</a></li>
                </ul>
                <div class="tab-content">
                    <div id="Main" class="tab-pane fade in active" style="margin-top: 5px;">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Consignee Code")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXN.CONSLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "CONSLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Consignee Details','CONSLCD','CONSLCD=slcd=1/CONSLNM=slnm=0')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Consignee Details','CONSLCD','CONSLCD=slcd=1/CONSLNM=slnm=0');", @placeholder = "Code", maxlength = 8 } })
                                    <img src="~/Image/search.png" id="SLCD_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Consignee Details','CONSLCD','CONSLCD=slcd=1/CONSLNM=slnm=0')" />
                                    @Html.HiddenFor(model => model.CONSLNM, new { id = "CONSLNM" })
                                </div>
                            </div>
                            @*<div class="col-md-10">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.CONSLNM, new { htmlAttributes = new { @class = "form-control", id = "CONSLNM", maxlength = 45, @title = "Only for View", @placeholder = "Consignee Name", @TabIndex = -1, @readonly = "readonly" } })
                                    </div>
                                </div>*@
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Agent")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.AGSLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "AGSLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Agent Details','AGSLCD','AGSLCD=slcd=1/AGSLNM=slnm=0','agentlinkcd')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Agent Details','AGSLCD','AGSLCD=slcd=1/AGSLNM=slnm=0','agentlinkcd');", @placeholder = "Code", maxlength = 8 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Agent Details','AGSLCD','AGSLCD=slcd=1/AGSLNM=slnm=0','agentlinkcd')" />
                                    @Html.HiddenFor(model => model.AGSLNM, new { id = "AGSLNM" })
                                </div>
                            </div>
                            @*<div class="col-md-9">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.AGSLNM, new { htmlAttributes = new { @class = "form-control", id = "AGSLNM", maxlength = 45, @title = "Only for View", @placeholder = "Agent Name", @readonly = "readonly", tabindex = "-1" } })
                                    </div>
                                </div>*@
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Sub Agent")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.SAGSLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SAGSLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Sub Agent Details','SAGSLCD','SAGSLCD=slcd=1/SAGSLNM=slnm=0','agentlinkcd/AGSLCD')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Sub Agent Details','SAGSLCD','SAGSLCD=slcd=1/SAGSLNM=slnm=0','agentlinkcd/AGSLCD');", @placeholder = "Code", maxlength = 8 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Sub Agent Details','SAGSLCD','SAGSLCD=slcd=1/SAGSLNM=slnm=0','agentlinkcd/AGSLCD')" />
                                    @Html.HiddenFor(model => model.SAGSLNM, new { id = "SAGSLNM" })
                                </div>
                            </div>
                            @*<div class="col-md-9">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.SAGSLNM, new { htmlAttributes = new { @class = "form-control", id = "SAGSLNM", maxlength = 45, @title = "Only for View", @placeholder = "Sub Agent Name", @readonly = "readonly", tabindex = "-1" } })
                                    </div>
                                </div>*@
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Godown")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXN.GOCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "GOCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetGodownDetails", PageControllerName) + "','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetGodownDetails", PageControllerName) + "','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0');", @placeholder = "Code", maxlength = 6 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetGodownDetails", PageControllerName)','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0')" />
                                    @Html.HiddenFor(model => model.GONM, new { id = "GONM" })
                                </div>
                            </div>
                            @*<div class="col-md-9">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.GONM, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @placeholder = "Godown Name", @readonly = "readonly" } })
                                    </div>
                                </div>*@
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Price Code")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.PRCCD, new { htmlAttributes = new { @class = "form-control", id = "PRCCD", @TabIndex = -1, @title = "Only for View", @placeholder = "Code", @readonly = "readonly" } })
                                    @*@Html.EditorFor(model => model.T_TXNOTH.PRCCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "PRCCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetPriceDetails", PageControllerName) + "','Price Details','PRCCD','PRCCD=PRCCD=1/PRCNM=PRCNM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetPriceDetails", PageControllerName) + "','Price Details','PRCCD','PRCCD=PRCCD=1/PRCNM=PRCNM=0');", @placeholder = "Code", maxlength = 4 } })
                                        <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetPriceDetails", PageControllerName)','Price Details','PRCCD','PRCCD=PRCCD=1/PRCNM=PRCNM=0')" />*@
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.PRCNM, new { htmlAttributes = new { @class = "form-control", id = "PRCNM", @TabIndex = -1, @title = "Only for View", @placeholder = "Price List Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Select By")
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.SELBY, new { htmlAttributes = new { @class = "form-control", id = "SELBY", @placeholder = "Select By", maxlength = 50, @list = "SelectBy_List" } })
                                    <datalist id="SelectBy_List">
                                        @foreach (var jg in Model.Database_Combo1)
                                        {
                                            <option value="@jg.FIELD_VALUE" />
                                        }
                                    </datalist>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-field" style="margin-top: 6px;">
                                    @Html.Label("", "Packed By")
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.PACKBY, new { htmlAttributes = new { @class = "form-control", id = "PACKBY", maxlength = 50, @placeholder = "Packed By" } })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Deal By")
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.DEALBY, new { htmlAttributes = new { @class = "form-control", id = "DEALBY", @placeholder = "Deal By", maxlength = 50, @list = "DealBy_List" } })
                                    <datalist id="DealBy_List">
                                        @foreach (var jg in Model.Database_Combo2)
                                        {
                                            <option value="@jg.FIELD_VALUE" />
                                        }
                                    </datalist>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Total Nos.")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TOTNOS, new { htmlAttributes = new { @class = "form-control", id = "TOTNOS", @style = "text-align: right;", @TabIndex = -1, @placeholder = "Qnty Nos", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Total Qnty")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TOTQNTY, new { htmlAttributes = new { @class = "form-control", id = "TOTQNTY", @style = "text-align: right;", @TabIndex = -1, @placeholder = "Quantity", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Taxable Value")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TOTTAXVAL, new { htmlAttributes = new { @class = "form-control", id = "TOTTAXVAL", @style = "text-align: right;", @TabIndex = -1, @placeholder = "Taxable Value", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Total Tax")
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TOTTAX, new { htmlAttributes = new { @class = "form-control", id = "TOTTAX", @style = "text-align: right;", @TabIndex = -1, @placeholder = "Total Tax", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Rounded off")
                                </div>
                            </div>
                            <div class="col-md-1" style="margin-right: -41px;">
                                <div class="editor-field" style="margin-top:6px;">
                                    @Html.CheckBoxFor(model => model.RoundOff, new { id = "RoundOff", onclick = "BillAmountCalculate();" })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXN.ROAMT, new { htmlAttributes = new { @class = "form-control", id = "ROAMT", maxlength = 6, @TabIndex = -1, @placeholder = "Rounded off", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Bill Amount")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXN.BLAMT, new { htmlAttributes = new { @class = "form-control", id = "BLAMT", maxlength = 14, @TabIndex = -1, @placeholder = "Bill Amount", @readonly = "readonly", @style = "font-weight:bold;font-size:15px;text-align:right" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5" style="margin-top: 6px;">
                                <div class="editor-label">
                                    @Html.Label("", "Barcode")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.T_TXN.BARGENTYPE, new SelectList(Model.BARGEN_TYPE, "Value", "Text"), new { @class = "form-control", id = "BARGENTYPE" })
                                </div>
                            </div>

                        </div>
                    </div>
                    <div id="BarCodeTab" class="tab-pane fade" style="margin-top: 5px;">
                        <div class="row">
                            @if (Model.DefaultAction != "V")
                            {
                                <div class="row">
                                    <div class="col-md-1">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "Bar Code")
                                            <b style="color:Red;">*</b>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.BARCODE, new { htmlAttributes = new { @class = "form-control textbox_image", id = "BARCODE", onkeydown = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','BARCODE','BARCODE=BARNO=0','DOCDT/TAXGRPCD/GOCD/PRCCD')", onblur = "GetBarnoDetails(this.value);", @placeholder = "Bar Code", maxlength = 25 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetBarCodeDetails", PageControllerName)','Bar Code Details','BARCODE','BARCODE=BARNO=0','DOCDT/TAXGRPCD/GOCD/PRCCD')" />
                                        </div>
                                    </div>
                                    @*<div class="col-md-8">
                                            <input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;" name="GetBarCode" value="Get BarCode Detail" title="Click to Get BarCode Detail" />
                                        </div>*@
                                    <div class="col-md-4">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "Material Job Code")
                                        </div>
                                    </div>
                                    <div class="col-md-6" style="margin-top:5px;width:auto;height:60px; overflow:auto;border:5px groove;">
                                        @*<div class="col-md-6" style="margin-top:5px;width:auto;height:161px; overflow:auto;">*@
                                        <div class="editor-field">
                                            <table id="exampleLT" border="1" style="width: auto;">
                                                @*<thead>
                                                        <tr>
                                                            <th colspan="3">
                                                                <input type="text" value="" placeholder="Search" style="width:100px;border:none;outline:none" onkeyup="filterTable(event, 'exampleLT');" />
                                                            </th>
                                                        </tr>
                                                        <tr style="background-color:#808080;" class="grid_th">
                                                            <th align="center"></th>
                                                            <th align="center">
                                                                Name
                                                            </th>
                                                            <th align="center">
                                                                Code
                                                            </th>
                                                        </tr>
                                                    </thead>*@
                                                @*<tbody>*@
                                                @for (int i = 0; i < Model.DropDown_list_MTRLJOBCD.Count(); i++)
                                                {
                                                    <tr>
                                                        @if (Model.DefaultAction == "V")
                                                        {
                                                            if (Model.DropDown_list_MTRLJOBCD[i].Checked == true)
                                                            {
                                                                <td align="center">
                                                                    @Html.CheckBoxFor(model => model.DropDown_list_MTRLJOBCD[i].Checked, new { id = "MaterialJobChk_" + i })
                                                                </td>
                                                                <td align="center">
                                                                    @{ string STRC1 = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBNM.ToString();}
                                                                    @Html.DisplayFor(model => STRC1)
                                                                    @Html.HiddenFor(model => model.DropDown_list_MTRLJOBCD[i].MTRLJOBNM)
                                                                </td>
                                                                <td align="center">
                                                                    @{ string STRC = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD.ToString();}
                                                                    @Html.DisplayFor(model => STRC)
                                                                    @Html.HiddenFor(model => model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD)
                                                                </td>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <td align="center">
                                                                                @Html.CheckBoxFor(model => model.DropDown_list_MTRLJOBCD[i].Checked, new { id = "MaterialJobChk_" + i })
                                                                            </td>
                                                                            <td align="center">
                                                                                @{ string STRC1 = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBNM.ToString();}
                                                                                @Html.DisplayFor(model => STRC1)
                                                                                @Html.HiddenFor(model => model.DropDown_list_MTRLJOBCD[i].MTRLJOBNM)
                                                                            </td>
                                                                            <td align="center">
                                                                                @{ string STRC = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD.ToString();}
                                                                                @Html.DisplayFor(model => STRC)
                                                                                @Html.HiddenFor(model => model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD)
                                                                            </td>
                                                                                    }

                                                    </tr>
                                                                                    }
                                                @*</tbody>*@
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.HiddenFor(model => model.SLNO, new { id = "SLNO" })
                                            @Html.EditorFor(model => model.TXNSLNO, new { htmlAttributes = new { @class = "form-control", id = "TXNSLNO", maxlength = 4, @onkeypress = "return numericOnly(this);", @placeholder = "Bill Sl" } })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.TextBoxFor(model => Model.ITGRPCD, new { id = "ITGRPCD", maxlength = 4, onkeydown = "GetHelpBlur('" + @Url.Action("GetItemGroupDetails", PageControllerName) + "','Item Group Details','ITGRPCD','ITGRPCD=itgrpcd=1/ITGRPNM=itgrpnm=0');", @class = "form-control textbox_image", onblur = "GetHelpBlur('" + @Url.Action("GetItemGroupDetails", PageControllerName) + "','Item Group Details','ITGRPCD','ITGRPCD=itgrpcd=1/ITGRPNM=itgrpnm=0');", @placeholder = "Item Group Code" })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetItemGroupDetails", PageControllerName)','Item Group Details','ITGRPCD','ITGRPCD=itgrpcd=1/ITGRPNM=itgrpnm=0')" />
                                            @Html.HiddenFor(model => model.ITGRPNM, new { id = "ITGRPNM" })
                                        </div>
                                    </div>
                                    @*<div class="col-md-7">
                                            <div class="editor-field">
                                                @Html.EditorFor(model => model.ITGRPNM, new { htmlAttributes = new { @class = "form-control", id = "ITGRPNM", @title = "Only for View", @placeholder = "Item Group Name", @readonly = "readonly", @TabIndex = -1 } })
                                            </div>
                                        </div>*@
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.MTRLJOBCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "MTRLJOBCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetMaterialJobDetails", PageControllerName) + "','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetMaterialJobDetails", PageControllerName) + "','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0');", @placeholder = "Material Job Code", maxlength = 2 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetMaterialJobDetails", PageControllerName)','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0')" />
                                            @Html.HiddenFor(model => model.MTRLJOBNM, new { id = "MTRLJOBNM" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.ITCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "ITCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetItemDetails", PageControllerName) + "','Facbric Item Details','ITCD','ITCD=itcd=2/ITNM=itnm=1/UOM=uomcd=3/STYLENO=styleno=0','ITGRPCD')", onblur = "GetHelpBlur('" + @Url.Action("GetItemDetails", PageControllerName) + "','Facbric Item Details','ITCD','ITCD=itcd=2/ITNM=itnm=1/UOM=uomcd=3/STYLENO=styleno=0','ITGRPCD');", @placeholder = "Item Code", maxlength = 8 } })
                                            <img src="~/Image/search.png" id="SLCD_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetItemDetails", PageControllerName)','Facbric Item Details','ITCD','ITCD=itcd=2/ITNM=itnm=1/UOM=uomcd=3/STYLENO=styleno=0','ITGRPCD')" />
                                            @Html.HiddenFor(model => model.ITNM, new { id = "ITNM" })
                                        </div>
                                    </div>
                                    @*<div class="col-md-8">
                                            <div class="editor-field">
                                                @Html.EditorFor(model => model.ITNM, new { htmlAttributes = new { @class = "form-control", id = "ITNM", maxlength = 30, @title = "Only for View", @placeholder = "Item Name", @readonly = "readonly", @TabIndex = -1 } })
                                            </div>
                                        </div>*@
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.STYLENO, new { htmlAttributes = new { @class = "form-control", id = "STYLENO", maxlength = 30, @title = "Only for View", @placeholder = "Design", @readonly = "readonly", @TabIndex = -1 } })
                                        </div>
                                    </div>

                                    @*<div class="col-md-3">
                                            <div class="editor-field">
                                                @Html.EditorFor(model => model.FABITCD, new { htmlAttributes = new { @class = "form-control", id = "FABITCD", maxlength = 8, @title = "Only for View", @placeholder = "Fabric Item Code", @readonly = "readonly", @TabIndex = -1 } })
                                                @Html.HiddenFor(model => model.FABITNM, new { id = "FABITNM" })
                                            </div>
                                        </div>*@
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.STKTYPE, new { htmlAttributes = new { @class = "form-control textbox_image", id = "STKTYPE", onkeydown = "GetHelpBlur('" + @Url.Action("GetStockDetails", PageControllerName) + "','Stock Details','STKTYPE','STKTYPE=STKTYPE=1/STKNAME=STKNAME=0')", onblur = "GetHelpBlur('" + @Url.Action("GetStockDetails", PageControllerName) + "','Stock Details','STKTYPE','STKTYPE=STKTYPE=1/STKNAME=STKNAME=0');", @placeholder = "Stock Type", maxlength = 1 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetStockDetails", PageControllerName)','Stock Details','STKTYPE','STKTYPE=STKTYPE=1/STKNAME=STKNAME=0')" />
                                            @Html.HiddenFor(model => model.STKNAME, new { id = "STKNAME" })
                                            @*@Html.DropDownListFor(model => model.STKTYPE, new SelectList(Model.DropDown_list_StkType, "Value", "Text"), new { @class = "form-control", id = "STKTYPE" })*@
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.PARTCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "PARTCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetPartDetails", PageControllerName) + "','Part Details','PARTCD','PARTCD=PARTCD=1/PARTNM=PARTNM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetPartDetails", PageControllerName) + "','Part Details','PARTCD','PARTCD=PARTCD=1/PARTNM=PARTNM=0');", @placeholder = "Part Code", maxlength = 4 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetPartDetails", PageControllerName)','Part Details','PARTCD','PARTCD=PARTCD=1/PARTNM=PARTNM=0')" />
                                            @Html.HiddenFor(model => model.PARTNM, new { id = "PARTNM" })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.COLRCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "COLRCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetColorDetails", PageControllerName) + "','Color Details','COLRCD','COLRCD=COLRCD=1/COLRNM=COLRNM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetColorDetails", PageControllerName) + "','Color Details','COLRCD','COLRCD=COLRCD=1/COLRNM=COLRNM=0');", @placeholder = "Color Code", maxlength = 4 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetColorDetails", PageControllerName)','Color Details','COLRCD','COLRCD=COLRCD=1/COLRNM=COLRNM=0')" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.COLRNM, new { htmlAttributes = new { @class = "form-control", id = "COLRNM", @title = "Only for View", @placeholder = "Color Name", @readonly = "readonly", @TabIndex = -1 } })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.SIZECD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SIZECD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSizeDetails", PageControllerName) + "','Size Details','SIZECD','SIZECD=SIZECD=1/SIZENM=SIZENM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetSizeDetails", PageControllerName) + "','Size Details','SIZECD','SIZECD=SIZECD=1/SIZENM=SIZENM=0');", @placeholder = "Size Code", maxlength = 4 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSizeDetails", PageControllerName)','Size Details','SIZECD','SIZECD=SIZECD=1/SIZENM=SIZENM=0')" />
                                            @Html.HiddenFor(model => model.SIZENM, new { id = "SIZENM" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.PSTYLENO, new { htmlAttributes = new { @class = "form-control", id = "PSTYLENO", @placeholder = "pdesign" } })
                                        </div>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.BALSTOCK, new { htmlAttributes = new { @class = "form-control", id = "BALSTOCK", @onkeypress = "return numericOnly(this,2);", maxlength = 12, @placeholder = "Stock", @readonly = "readonly", @TabIndex = -1 } })
                                        </div>
                                    </div>


                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.QNTY, new { htmlAttributes = new { @class = "form-control", id = "QNTY", @onkeypress = "return numericOnly(this,3);", maxlength = 12, @placeholder = "Quantity" } })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.UOM, new { htmlAttributes = new { @class = "form-control", id = "UOM", maxlength = 30, @title = "Only for View", @placeholder = "UOM", @readonly = "readonly", @TabIndex = -1 } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.NOS, new { htmlAttributes = new { @class = "form-control", id = "NOS", @onkeypress = "return numericOnly(this,3);", maxlength = 12, @placeholder = "Nos" } })
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.FLAGMTR, new { htmlAttributes = new { @class = "form-control", id = "FLAGMTR", @onkeypress = "return numericOnly(this,2);", maxlength = 8, @placeholder = "FLAGMTR" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.RATE, new { htmlAttributes = new { @class = "form-control", id = "RATE", @onkeypress = "return numericOnly(this,2);", maxlength = 14, @title = "Only for View", @placeholder = "Rate" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.DISCRATE, new { htmlAttributes = new { @class = "form-control", id = "DISCRATE", @onkeypress = "return numericOnly(this,2);", maxlength = 10, @placeholder = "Disc. Rate" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.DropDownListFor(model => model.DISCTYPE, new SelectList(Model.DISC_TYPE, "Value", "Text"), new { @class = "form-control", id = "DISCTYPE" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="editor-field">
                                            @Html.DropDownListFor(model => model.HSNCODE, new SelectList(Model.HSN_CODE, "Value", "Text"), new { @class = "form-control", id = "HSNCODE" })


                                            @*@Html.EditorFor(model => model.HSNCODE, new { htmlAttributes = new { @class = "form-control", id = "HSNCODE", maxlength = 30, @title = "Only for View", @placeholder = "Hsncode", @readonly = "readonly", @TabIndex = -1 } })*@
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.GSTPER, new { htmlAttributes = new { @class = "form-control", id = "GSTPER", @onkeypress = "return numericOnly(this,2);", maxlength = 5, @placeholder = "GSTPER" } })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.SHADE, new { htmlAttributes = new { @class = "form-control", id = "SHADE", maxlength = 15, @title = "Only for View", @placeholder = "Shade" } })
                                        </div>
                                    </div>

                                </div>
                                <div class="row">
                                    @if (Model.MENU_PARA == "PB")
                                    {
                                        <div class="col-md-8">
                                            <div class="editor-field">
                                                @Html.EditorFor(model => model.BALENO, new { htmlAttributes = new { @class = "form-control", id = "BALENO", maxlength = 30, @placeholder = "BALENO" } })
                                            </div>
                                        </div>
                                    }
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.TDDISCTYPE, new { htmlAttributes = new { @class = "form-control", id = "TDDISCTYPE", @placeholder = "TDDISCTYPE", maxlength = 1, @list = "TDDISCTYPE_List" } })
                                            <datalist id="TDDISCTYPE_List">
                                                @foreach (var jg in Model.TDDISC_TYPE)
                                                {
                                                    <option value="@jg.FIELD_VALUE" />
                                                }
                                            </datalist>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.TDDISCRATE, new { htmlAttributes = new { @class = "form-control", id = "TDDISCRATE", @onkeypress = "return numericOnly(this,2);", maxlength = 10, @placeholder = "TDDISCRATE" } })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.SCMDISCTYPE, new { htmlAttributes = new { @class = "form-control", id = "SCMDISCTYPE", @placeholder = "SCMDISCTYPE", maxlength = 8, @list = "SCMDISCTYPE_List" } })
                                            <datalist id="SCMDISCTYPE_List">
                                                @foreach (var jg in Model.SCMDISC_TYPE)
                                                {
                                                    <option value="@jg.FIELD_VALUE" />
                                                }
                                            </datalist>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.SCMDISCRATE, new { htmlAttributes = new { @class = "form-control", id = "SCMDISCRATE", @onkeypress = "return numericOnly(this,2);", maxlength = 10, @placeholder = "SCMDISCRATE" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.LOCABIN, new { htmlAttributes = new { @class = "form-control textbox_image", id = "LOCABIN", onkeydown = "GetHelpBlur('" + @Url.Action("GetLocationBinDetails", PageControllerName) + "','Location Bin Details','LOCABIN','LOCABIN=LOCABIN=2')", onblur = "GetHelpBlur('" + @Url.Action("GetLocationBinDetails", PageControllerName) + "','SLocation Binize Details','LOCABIN','LOCABIN=LOCABIN=2');", @placeholder = "Location Bin", maxlength = 10 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetLocationBinDetails", PageControllerName)','Location Bin Details','LOCABIN','LOCABIN=LOCABIN=2')" />
                                        </div>
                                    </div>
                                    <div class="col-md-1" style="width:auto;">
                                        <input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;" name="AddRow" accesskey="A" value="Add Row(A)" title="Click to Fill Data in Product Details" onclick="Add_BarCodeRow()" />
                                    </div>
                                </div>
                                                                                    }
                            <div style="margin-top:4px;background-color:#c4b9b9;border:5px groove;">
                                <div id="partialdivBarCodeTab">
                                    @Html.Partial("_T_SALE_PRODUCT")
                                </div>
                                <div>
                                    <div id="popup" class="row" style="margin-top: 11px;top:15%;left:2%;right:2%;position:absolute;">
                                    </div>
                                </div>
                            </div>
                            <div>
                                <div class="col-md-1" style="width:auto;">
                                    <input type="button" class="btn btn-info" style="margin-top: 2px;padding: 2px 7px 1px 7px;" name="FillDetail" value="Fill Data Into Detail" title="Click to Fill Data in Details Tab" onclick="Fill_DetailData()" />
                                </div>
                            </div>

                        </div>
                    </div>
                    <div id="DetailTab" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                            <div>
                                <div id="partialdivDetail" style="margin-top:0px;">
                                    @Html.Partial("_T_SALE_DETAIL")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Amounts" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                            <div>
                                <div id="partialdivAmounts" style="margin-top:0px;">
                                    @Html.Partial("_T_SALE_AMOUNT")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Transport" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Transporter")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.TRANSLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "TRANSLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Transporter Details','TRANSLCD','TRANSLCD=slcd=1/TRANSLNM=slnm=0','trnsportlinkcd')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Transporter Details','TRANSLCD','TRANSLCD=slcd=1/TRANSLNM=slnm=0','trnsportlinkcd');", @placeholder = "Code", maxlength = 8 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Transporter Details','TRANSLCD','TRANSLCD=slcd=1/TRANSLNM=slnm=0','trnsportlinkcd')" />
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TRANSLNM, new { htmlAttributes = new { @class = "form-control", id = "TRANSLNM", maxlength = 45, @TabIndex = -1, @placeholder = "Transporter Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Courier")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.CRSLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "CRSLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Courier Details','CRSLCD','CRSLCD=slcd=1/CRSLNM=slnm=0','courierlinkcd')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Courier Details','CRSLCD','CRSLCD=slcd=1/CRSLNM=slnm=0','courierlinkcd');", @placeholder = "Code", maxlength = 8 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Courier Details','CRSLCD','CRSLCD=slcd=1/CRSLNM=slnm=0','courierlinkcd')" />
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.CRSLNM, new { htmlAttributes = new { @class = "form-control", id = "CRSLNM", maxlength = 45, @TabIndex = -1, @placeholder = "Courier Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Eway Bill Number")
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.EWAYBILLNO, new { htmlAttributes = new { @class = "form-control", id = "EWAYBILLNO", maxlength = 20, @placeholder = "Eway Bill Number" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "LR Number")
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.LRNO, new { htmlAttributes = new { @class = "form-control", id = "LRNO", maxlength = 15, @placeholder = "LR Number" } })
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "LR Date")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.LRDT, new { htmlAttributes = new { @class = "form-control", id = "LRDT", maxlength = 10, onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Vechicle Number")
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.LORRYNO, new { htmlAttributes = new { @class = "form-control", id = "LORRYNO", maxlength = 16, @placeholder = "Vechicle Number" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Gross Weight")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.GRWT, new { htmlAttributes = new { @class = "form-control", id = "GRWT", onblur = "CalulateTareWt(GRWT,NTWT,TRWT);", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "Gross Weight" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Net Weight")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.NTWT, new { htmlAttributes = new { @class = "form-control", id = "NTWT", onblur = "CalulateTareWt(GRWT,NTWT,TRWT);", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "Net Weight" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Tare Weight")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.TRWT, new { htmlAttributes = new { @class = "form-control", id = "TRWT", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "Tare Weight", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Cases Nos.")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.CASENOS, new { htmlAttributes = new { @class = "form-control", id = "CASENOS", maxlength = 500, @placeholder = "Cases Nos" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "No of Cases")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.NOOFCASES, new { htmlAttributes = new { @class = "form-control", id = "NOOFCASES", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "No of Cases" } })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Remarks" class="tab-pane fade">
                        <div class="row">
                            <div>
                                <div id="partialdivRemarks">
                                    @Html.Partial("_TRANSACTIONREMARKS")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Documents" class="tab-pane fade" style="margin-top: 10px;">
                        <div class="row" style="background-color:#c4b9b9;border:5px groove;width:fit-content;">
                            <div>
                                <div id="partialdivDocument" style="margin-top:0px;">
                                    @Html.Partial("_UPLOADDOCUMENTS")
                                </div>
                            </div>
                        </div>
                    </div>
                    @*<div id="SalesBillMade" class="tab-pane fade" style="margin-top: 10px;">

                        </div>*@
                </div>

            </div>
        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        @ViewBag.ErrorMessage
                                                                                    }

                                                                                    <div class="container">
                                                                                        <div id="helpDIV">

                                                                                        </div>
                                                                                    </div>
                                                                                    }
