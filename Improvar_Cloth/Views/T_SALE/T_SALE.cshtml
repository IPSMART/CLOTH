@model Improvar.ViewModels.TransactionPackingSlipEntry
@{
    string PageControllerName = "T_SALE";
    ViewBag.Title = "Packing Slip Entry";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    switch (Model.MENU_PARA)
    {
        case "SBPCK":
            ViewBag.Title = "Packing Slip"; break;
        case "SB":
            ViewBag.Title = "Sales Bill (Agst Packing Slip)"; break;
        case "SBDIR":
            ViewBag.Title = "Sales Bill"; break;
        case "SR":
            ViewBag.Title = "Sales Return (SRM)"; break;
        case "SBCM":
            ViewBag.Title = "Cash Memo"; break;
        case "SBCMR":
            ViewBag.Title = "Cash Memo Return Note"; break;
        case "SBEXP":
            ViewBag.Title = "Sales Bill (Export)"; break;
        case "PI":
            ViewBag.Title = "Proforma Invoice"; break;
        case "PB":
            ViewBag.Title = "Purchase Bill"; break;
        case "PR":
            ViewBag.Title = "Purchase Return (PRM)"; break;
        default: ViewBag.Title = ""; break;
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .TextAreaRemarks {
        height: 190px;
    }
</style>
<script src="~/Scripts/jquery.min.js"></script>
<link rel="stylesheet" href="~/Content/jquery.stickytable.css">
<script type="text/javascript">
    $("#WaitingMode").show();
    $(document).ready(function () {
        if ("@Model.DefaultAction" == "V" || "@Model.DefaultAction" == "D") {
            modeView();
        }
        else if ("@Model.DefaultAction" == "E") {
            var BARGENTYPE = $("#BARGENTYPE").val();
            if (BARGENTYPE == "E") {
                $("#BARGENTYPE").attr("style", "pointer-events:none");
            }
            if ('@Model.MENU_PARA' == "SB") {
                $('#PACKSLIP_HELP').hide("");
                $("#LINKDOCNO").attr("readonly", "readonly");
            }
            else {
                GetAllMtrljobcd();
            }
            Checked_Disable();
        }
        else if ("@Model.DefaultAction" == "A") {
            $('form :input:enabled:visible:not([readonly]):first').focus();
            if ('@Model.MENU_PARA' != "SB") {
                GetAllMtrljobcd();
            }
        }
        if ("@Model.LINKDOCNO" != "") {
            $('#_T_SALE_DETAIL_GRID input').attr('readonly', 'readonly');
            $('#_T_SALE_PRODUCT_GRID input').attr('readonly', 'readonly');
            $('#_T_SALE_DETAIL_GRID input').removeAttr("onblur");
            $('#_T_SALE_PRODUCT_GRID input').attr('TabIndex', '-1');
            $('#_T_SALE_DETAIL_GRID input').attr('TabIndex', '-1');
        }

        $("#WaitingMode").hide();
    });
</script>
<script>
    function requiredFieldValidator() {
        if (!emptyFieldCheck("Please Select / Enter Document Date", "DOCDT")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Party", "SLCD")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Godown", "GOCD")) {
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            return false;
        }
        if ("@Model.MENU_PARA" == "PB") {
            if (!emptyFieldCheck("Please Enter Purchase bill no", "PREFNO")) {
                $("li").removeClass("active").addClass("");
                $(".nav-tabs li:first-child").addClass('active');
                $(".tab-content div").removeClass("active");
                $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
                return false;
            }
            if (!emptyFieldCheck("Please Enter Purchase bill date", "PREFDT")) {
                $("li").removeClass("active").addClass("");
                $(".nav-tabs li:first-child").addClass('active');
                $(".tab-content div").removeClass("active");
                $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
                return false;
            }
        }
        return true;
    }
</script>
<script>
    @{
        string mldauto = "";
        if (@Model.T_CNTRL_HDR != null)
        {
            if (@Model.T_CNTRL_HDR.AUTONO != null)
            {
                mldauto = Model.T_CNTRL_HDR.AUTONO.ToString();
                if (Model.T_CNTRL_HDR.CANCEL == "Y")
                {
                    ViewBag.formname = ViewBag.formname + "   " + "(Record Cancelled)";
                }
            }
        }
        else
        {
            mldauto = "";
        }
    }
    function ModifyLogDetails() {
        if ("@Model.DefaultAction" == "V") {
            ModifyLogDtl('@mldauto');
        }
    }
</script>
<script>
    $(function () {
        if ("@Model.DefaultAction" != "V") {
            $("#DOCDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate', minDate: '@Model.mindate' });
            $("#LRDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate' });
            $("#PREFDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate' });
            $("#POREFDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate' });
        }
    });
</script>
<script>
    function GetAllMtrljobcd() {
        if ("@Model.DefaultAction" != "V") {
            var GridRowMain = $("#exampleLT > tbody > tr").length;
            var allcode = "";
            var mtrljobcd = $("#MTRLJOBCD").val();
            if (mtrljobcd != "") {
                allcode += "'" + mtrljobcd + "'";
            }
            for (j = 0; j <= GridRowMain - 1; j++) {
                if (document.getElementById("MaterialJobChk_" + j).checked == true) {
                    if (allcode == "") {
                        allcode += "'" + $("#MaterialJobCode_" + j).val() + "'";
                    }
                    else {
                        allcode += ",'" + $("#MaterialJobCode_" + j).val() + "'";
                    }
                }
            }
            $("#ALLMTRLJOBCD").val(allcode);
        }
    }
</script>
<script>
    debugger;
    function GetBarnoDetails(id) {
        if ("@Model.DefaultAction" != "V") {
            debugger;
            if (id == "") {
                ClearBarcodeArea();
            }
            else {
                if (!emptyFieldCheck("Please Select / Enter Document Date", "DOCDT")) { return false; }
                if ($("#TAXGRPCD").val() == "") { $("#BARCODE").val(""); msgInfo("TaxGrp. Code not available.Please Select / Enter another Party Code to get TaxGrp. Code"); message_value = "SLCD"; return false; }
                if ($("#PRCCD").val() == "") { $("#BARCODE").val(""); msgInfo("Price Code not available.Please Select / Enter another Party Code to get Price Code"); message_value = "SLCD"; return false; }
                var docdt = $("#DOCDT").val();
                var taxgrpcd = $("#TAXGRPCD").val();
                var gocd = $("#GOCD").val();
                var prccd = $("#PRCCD").val();
                var mtrljobcd = $("#ALLMTRLJOBCD").val();
                var code = docdt + String.fromCharCode(181) + taxgrpcd + String.fromCharCode(181) + gocd + String.fromCharCode(181) + prccd + String.fromCharCode(181) + mtrljobcd;
                $.ajax({
                    type: 'POST',
                    beforesend: $("#WaitingMode").show(),
                    url: "@Url.Action("GetBarCodeDetails", PageControllerName)",
                    data: "&val=" + id + "&Code=" + code,
                    success: function (result) {
                        var MSG = result.indexOf('id="_T_SALE_BARNODETAIL_GRID"');
                        if (MSG >= 0) {
                            $("#popup").animate({ marginTop: '-10px' }, 50);
                            $("#popup").html(result);
                            $("#WaitingMode").hide();
                        }
                        else {
                            var MSG = result.indexOf(String.fromCharCode(181));
                            if (MSG >= 0) {
                                FillBarcodeArea(result);
                            }
                            else {
                                $('#helpDIV').html("");
                                msgInfo("" + result + " !");
                                ClearBarcodeArea();
                                message_value = "BARCODE";
                            }
                        }
                        $("#WaitingMode").hide();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $("#WaitingMode").hide();
                        msgError(XMLHttpRequest.responseText);
                        $("body span h1").remove(); $("#msgbody_error style").remove();
                    }
                });
            }
        }
    }
    function Add_BarCodeRow() {
        if ("@Model.DefaultAction" != "V") {
            $.ajax({
                type: 'POST',
                beforesend: $("#WaitingMode").show(),
                url: "@Url.Action("FillBarCodeData", PageControllerName)",
                data: $('form').serialize(),
                success: function (result) {
                    //$("#partialdivBarCodeTab").animate({ marginTop: '-10px' }, 50);
                    $("#partialdivBarCodeTab").html(result);
                    CalculateTotal_Barno();
                    $("#WaitingMode").hide();
                    ClearBarcodeArea();
                    @*if ("@Model.MENU_PARA" == "PB") {
                    $("#BALENO").val("");
                }
                $("#DISCTYPE").val("P");
                $("#TDDISCTYPE").val("P");
                $("#SCMDISCTYPE").val("P");*@
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
    function FillBarcodeArea(str, Table, i) {
        if ("@Model.DefaultAction" != "V") {
            if (Table == "COPYLROW") {
                if (event.key != "F8") {
                    return true;
                }
                else {
                    i = $("#_T_SALE_PRODUCT_GRID > tbody > tr").length - 1;
                }
            }
            if (str != "") {
                $("#TXNSLNO").val(returncolvalue(str, "TXNSLNO"));
                $("#ITGRPCD").val(returncolvalue(str, "ITGRPCD"));
                $("#ITGRPNM").val(returncolvalue(str, "ITGRPNM"));
                $("#MTRLJOBCD").val(returncolvalue(str, "MTRLJOBCD"));
                $("#MTRLJOBNM").val(returncolvalue(str, "MTRLJOBNM"));
                $("#MTBARCODE").val(returncolvalue(str, "MTBARCODE"));
                $("#ITCD").val(returncolvalue(str, "ITCD"));
                $("#ITSTYLE").val(returncolvalue(str, "STYLENO") + "" + returncolvalue(str, "ITNM"));
                $("#STYLENO").val(returncolvalue(str, "STYLENO"));
                $("#STKTYPE").val(returncolvalue(str, "STKTYPE"));
                $("#PARTCD").val(returncolvalue(str, "PARTCD"));
                $("#PARTNM").val(returncolvalue(str, "PARTNM"));
                $("#PRTBARCODE").val(returncolvalue(str, "PRTBARCODE"));
                $("#COLRCD").val(returncolvalue(str, "COLRCD"));
                $("#COLRNM").val(returncolvalue(str, "COLRNM"));
                $("#CLRBARCODE").val(returncolvalue(str, "CLRBARCODE"));
                $("#SIZECD").val(returncolvalue(str, "SIZECD"));
                $("#SIZENM").val(returncolvalue(str, "SIZENM"));
                $("#SZBARCODE").val(returncolvalue(str, "SZBARCODE"));
                $("#PDESIGN").val(returncolvalue(str, "PDESIGN"));
                $("#BALSTOCK").val(returncolvalue(str, "BALQNTY"));
                $("#QNTY").val(returncolvalue(str, "QNTY"));
                $("#UOM").val(returncolvalue(str, "uomcd"));
                $("#NOS").val(returncolvalue(str, "NOS"));
                $("#FLAGMTR").val(returncolvalue(str, "FLAGMTR"));
                $("#RATE").val(returncolvalue(str, "RATE"));
                $("#DISCRATE").val(returncolvalue(str, "DISCRATE"));
                $("#DISCTYPE").val(returncolvalue(str, "DISCTYPE"));
                $("#HSNCODE").val(returncolvalue(str, "HSNCODE"));
                $("#GSTPER").val(returncolvalue(str, "GSTPER"));
                $("#ALL_GSTPER").val(returncolvalue(str, "ALL_GSTPER"));
                $("#PRODGRPGSTPER").val(returncolvalue(str, "PRODGRPGSTPER"));
                $("#SHADE").val(returncolvalue(str, "SHADE"));
                if ("@Model.MENU_PARA" == "PB") {
                    $("#BALENO").val(returncolvalue(str, "BALENO"));
                    $("#OURDESIGN").val(returncolvalue(str, "OURDESIGN"));
                }
                $("#TDDISCTYPE").val(returncolvalue(str, "TDDISCTYPE"));
                $("#TDDISCRATE").val(returncolvalue(str, "TDDISCRATE"));
                $("#SCMDISCTYPE").val(returncolvalue(str, "SCMDISCTYPE"));
                $("#SCMDISCRATE").val(returncolvalue(str, "SCMDISCRATE"));
                $("#LOCABIN").val(returncolvalue(str, "LOCABIN"));
                $("#GLCD").val(returncolvalue(str, "GLCD"));
            }
            else {
                var FieldidStarting = "";
                if (Table == "_T_SALE_BARNODETAIL_GRID") {
                    var GridRowMain = $("#_T_SALE_BARNODETAIL_GRID > tbody > tr").length;
                    var cnt = 0;
                    for (j = 0; j <= GridRowMain - 1; j++) {
                        if (document.getElementById("STOCK_Checked_" + j).checked == true) {
                            i = j;
                            cnt++;
                            break;
                        }
                    }
                    if (cnt == 0) {
                        msgInfo("Please Select row from stock details !");
                        return false;
                    }
                    else {
                        FieldidStarting = "#STOCK_";
                    }
                }
                else {
                    FieldidStarting = "#B_";
                }
                if (Table != "_T_SALE_BARNODETAIL_GRID") {
                    $("#SLNO").val($(FieldidStarting + "SLNO_" + i).val());
                    $("#TXNSLNO").val($(FieldidStarting + "TXNSLNO_" + i).val());
                    $("#STKNAME").val($(FieldidStarting + "STKNAME_" + i).val());
                    if (Table != "COPYLROW") {
                        $("#QNTY").val($(FieldidStarting + "QNTY_" + i).val());
                        $("#NOS").val($(FieldidStarting + "NOS_" + i).val());
                    }
                    $("#DISCRATE").val($(FieldidStarting + "DISCRATE_" + i).val());
                    $("#DISCTYPE").val($(FieldidStarting + "DISCTYPE_" + i).val());
                    $("#TDDISCTYPE").val($(FieldidStarting + "TDDISCTYPE_" + i).val());
                    $("#TDDISCRATE").val($(FieldidStarting + "TDDISCRATE_" + i).val());
                    $("#SCMDISCTYPE").val($(FieldidStarting + "SCMDISCTYPE_" + i).val());
                    $("#SCMDISCRATE").val($(FieldidStarting + "SCMDISCRATE_" + i).val());

                }
                $("#BARCODE").val($(FieldidStarting + "BARNO_" + i).val());
                $("#ITGRPCD").val($(FieldidStarting + "ITGRPCD_" + i).val());
                $("#ITGRPNM").val($(FieldidStarting + "ITGRPNM_" + i).val());
                $("#MTRLJOBCD").val($(FieldidStarting + "MTRLJOBCD_" + i).val());
                $("#MTRLJOBNM").val($(FieldidStarting + "MTRLJOBNM_" + i).val());
                $("#MTBARCODE").val($(FieldidStarting + "MTBARCODE_" + i).val());
                $("#ITCD").val($(FieldidStarting + "ITCD_" + i).val());
                $("#ITSTYLE").val($(FieldidStarting + "ITSTYLE_" + i).val());
                $("#STYLENO").val($(FieldidStarting + "STYLENO_" + i).val());
                $("#STKTYPE").val($(FieldidStarting + "STKTYPE_" + i).val());
                $("#PARTCD").val($(FieldidStarting + "PARTCD_" + i).val());
                $("#PRTBARCODE").val($(FieldidStarting + "PRTBARCODE_" + i).val());
                $("#COLRCD").val($(FieldidStarting + "COLRCD_" + i).val());
                $("#COLRNM").val($(FieldidStarting + "COLRNM_" + i).val());
                $("#CLRBARCODE").val($(FieldidStarting + "CLRBARCODE_" + i).val());
                $("#SIZECD").val($(FieldidStarting + "SIZECD_" + i).val());
                $("#SIZENM").val($(FieldidStarting + "SIZENM_" + i).val());
                $("#SZBARCODE").val($(FieldidStarting + "SZBARCODE_" + i).val());
                $("#PDESIGN").val($(FieldidStarting + "PDESIGN_" + i).val());
                $("#FLAGMTR").val($(FieldidStarting + "FLAGMTR_" + i).val());
                $("#RATE").val($(FieldidStarting + "RATE_" + i).val());
                $("#HSNCODE").val($(FieldidStarting + "HSNCODE_" + i).val());
                $("#GSTPER").val($(FieldidStarting + "GSTPER_" + i).val());
                $("#ALL_GSTPER").val($(FieldidStarting + "ALL_GSTPER_" + i).val());
                $("#PRODGRPGSTPER").val($(FieldidStarting + "PRODGRPGSTPER_" + i).val());
                $("#SHADE").val($(FieldidStarting + "SHADE_" + i).val());
                if ("@Model.MENU_PARA" == "PB") {
                    $("#BALENO").val($(FieldidStarting + "BALENO_" + i).val());
                    $("#OURDESIGN").val($(FieldidStarting + "OURDESIGN_" + i).val());
                }
                $("#LOCABIN").val($(FieldidStarting + "LOCABIN_" + i).val());
                if (Table == "_T_SALE_BARNODETAIL_GRID") {
                    $("#BALSTOCK").val($(FieldidStarting + "BALQNTY_" + i).val());
                }
                $("#UOM").val($(FieldidStarting + "UOM_" + i).val());
                $("#GLCD").val($(FieldidStarting + "GLCD_" + i).val());
                if (Table == "_T_SALE_BARNODETAIL_GRID") {
                    CloseBarnoPopup();
                }
            }
            if (Table == "_T_SALE_PRODUCT_GRID") {
                $("#AddRow_Barcode").hide();
                $("#UpdateRow_Barcode").prop("value", "Update Row [" + $(FieldidStarting + "SLNO_" + i).val() + "] (Alt+W)");
                $("#UpdateRow_Barcode").show();

            }
        }
    }
    function CloseBarnoPopup() {
        if ("@Model.DefaultAction" != "V") {
            $("#popup").html("");
        }
    }
    function UpdateBarCodeRow() {
        if ("@Model.DefaultAction" != "V") {
            debugger;
            if ($("#ITGRPCD").val() == "") {
                msgInfo("Please enter/select Item Group Code !");
                message_value = "ITGRPCD";
                return false;
            }
            if ($("#MTRLJOBCD").val() == "") {
                msgInfo("Please enter Material Job Code !");
                message_value = "MTRLJOBCD";
                return false;
            }
            if ($("#ITCD").val() == "") {
                msgInfo("Please enter Item Code !");
                message_value = "ITCD";
                return false;
            }
            if ($("#QNTY").val() == "0") {
                msgInfo("Quantity should not be zero(0) !");
                message_value = "QNTY";
                return false;
            }
            var TXNSLNO = "";
            if ($("#TXNSLNO").val() == "") {
                var GridRowMain = $("#_T_SALE_PRODUCT_GRID > tbody > tr").length;
                if (GridRowMain == 0) {
                    TXNSLNO = 1;
                }
                else {
                    var allslno = [parseInt(GridRowMain)];
                    for (j = 0; j <= GridRowMain - 1; j++) {
                        allslno[j] = parseInt($("#B_TXNSLNO_" + j).val());
                    }
                    TXNSLNO = Math.max.apply(Math, allslno);
                    TXNSLNO++;
                }
            }
            else {
                TXNSLNO = parseInt($("#TXNSLNO").val());
            }
            var FLAGMTR = $("#FLAGMTR").val();
            var QNTY = $("#QNTY").val();

            if (FLAGMTR != "") {
                var flgmtr = FLAGMTR;
                if (flgmtr == "") { flgmtr = parseFloat(0); } else { flgmtr = parseFloat(flgmtr); }
                var qnty = QNTY;
                if (qnty == "") { qnty = parseFloat(0); } else { qnty = parseFloat(qnty); }
                if (flgmtr > qnty) {
                    msgInfo("FLAGMTR (" + flgmtr + ") should be less than Quantity (" + qnty + ") !");
                    message_value = "FLAGMTR";
                    return false;
                }
            }
            if ($("#HSNCODE").val() == "") {
                msgInfo("Please enter HSN Code !");
                message_value = "HSNCODE";
                return false;
            }
            var SLNO = $("#SLNO").val();
            var GridRowMain = $("#_T_SALE_PRODUCT_GRID > tbody > tr").length;
            for (j = 0; j <= GridRowMain - 1; j++) {
                if ($("#B_SLNO_" + j).val() == SLNO) {
                    $("#B_BARNO_" + j).val($("#BARCODE").val());
                    $("#B_TXNSLNO_" + j).val(TXNSLNO);
                    $("#B_ITGRPCD_" + j).val($("#ITGRPCD").val());
                    $("#B_ITGRPNM_" + j).val($("#ITGRPNM").val());
                    $("#B_MTRLJOBCD_" + j).val($("#MTRLJOBCD").val());
                    $("#B_MTRLJOBNM_" + j).val($("#MTRLJOBNM").val());
                    $("#B_MTBARCODE_" + j).val($("#MTBARCODE").val());
                    $("#B_ITCD_" + j).val($("#ITCD").val());
                    $("#B_ITSTYLE_" + j).val($("#ITSTYLE").val());
                    $("#B_STYLENO_" + j).val($("#STYLENO").val());
                    $("#B_STKTYPE_" + j).val($("#STKTYPE").val());
                    $("#B_PARTCD_" + j).val($("#PARTCD").val());
                    $("#B_PARTNM_" + j).val($("#PARTNM").val());
                    $("#B_PRTBARCODE_" + j).val($("#PRTBARCODE").val());
                    $("#B_COLRCD_" + j).val($("#COLRCD").val());
                    $("#B_COLRNM_" + j).val($("#COLRNM").val());
                    $("#B_CLRBARCODE_" + j).val($("#CLRBARCODE").val());
                    $("#B_SIZECD_" + j).val($("#SIZECD").val());
                    $("#B_SIZENM_" + j).val($("#SIZENM").val());
                    $("#B_SZBARCODE_" + j).val($("#SZBARCODE").val());
                    $("#B_PDESIGN_" + j).val($("#PDESIGN").val());
                    $("#B_BALSTOCK_" + j).val($("#BALSTOCK").val());
                    $("#B_QNTY_" + j).val($("#QNTY").val());
                    $("#B_UOM_" + j).val($("#UOM").val());
                    $("#B_NOS_" + j).val($("#NOS").val());
                    $("#B_FLAGMTR_" + j).val($("#FLAGMTR").val());
                    $("#B_RATE_" + j).val($("#RATE").val());
                    $("#B_DISCRATE_" + j).val($("#DISCRATE").val());
                    $("#B_DISCTYPE_" + j).val($("#DISCTYPE").val());
                    $("#B_HSNCODE_" + j).val($("#HSNCODE").val());
                    $("#B_GSTPER_" + j).val($("#GSTPER").val());
                    $("#B_ALL_GSTPER_" + j).val($("#ALL_GSTPER").val());
                    $("#B_PRODGRPGSTPER_" + j).val($("#PRODGRPGSTPER").val());
                    $("#B_SHADE_" + j).val($("#SHADE").val());
                    if ("@Model.MENU_PARA" == "PB") {
                        $("#B_BALENO_" + j).val($("#BALENO").val());
                        $("#B_OURDESIGN_" + j).val($("#OURDESIGN").val());
                    }
                    $("#B_TDDISCTYPE_" + j).val($("#TDDISCTYPE").val());
                    $("#B_TDDISCRATE_" + j).val($("#TDDISCRATE").val());
                    $("#B_SCMDISCTYPE_" + j).val($("#SCMDISCTYPE").val());
                    $("#B_SCMDISCRATE_" + j).val($("#SCMDISCRATE").val());
                    $("#B_LOCABIN_" + j).val($("#LOCABIN").val());
                    var DISCTYPE = $("#DISCTYPE").val() == "P" ? "%" : $("#DISCTYPE").val() == "N" ? "Nos" : $("#DISCTYPE").val() == "Q" ? "Qnty" : "Fixed";
                    var TDDISCTYPE = $("#TDDISCTYPE").val() == "P" ? "%" : $("#TDDISCTYPE").val() == "N" ? "Nos" : $("#TDDISCTYPE").val() == "Q" ? "Qnty" : "Fixed";
                    var SCMDISCTYPE = $("#SCMDISCTYPE").val() == "P" ? "%" : $("#SCMDISCTYPE").val() == "N" ? "Nos" : $("#SCMDISCTYPE").val() == "Q" ? "Qnty" : "Fixed";
                    $("#B_DISCTYPE_DESC_" + j).val(DISCTYPE);
                    $("#B_TDDISCTYPE_DESC_" + j).val(TDDISCTYPE);
                    $("#B_SCMDISCTYPE_DESC_" + j).val(SCMDISCTYPE);
                    $("#B_GLCD_" + j).val($("#GLCD").val());

                }
            }
            CalculateTotal_Barno();
            ClearBarcodeArea();
            @*if ("@Model.MENU_PARA" == "PB") {
            $("#BALENO").val("");
        }
        $("#DISCTYPE").val("P");
        $("#TDDISCTYPE").val("P");
        $("#SCMDISCTYPE").val("P");*@
            $("#AddRow_Barcode").show();
            $("#UpdateRow_Barcode").hide();
            if ("@Model.MENU_PARA" == "PB") {
                $("#TXNSLNO").focus();
            } else {
                $("#BARCODE").focus();
            }
        }
    }

    function ClearBarcodeArea(TAG) {
        if ("@Model.DefaultAction" != "V") {
            ClearAllTextBoxes("BARCODE,TXNSLNO,ITGRPCD,ITGRPNM,MTRLJOBCD,MTRLJOBNM,MTBARCODE,ITCD,ITSTYLE,STYLENO,STKTYPE,PARTCD,PARTNM,PRTBARCODE,COLRCD,COLRNM,CLRBARCODE,SIZECD,SIZENM,SZBARCODE,PDESIGN,BALSTOCK,QNTY,UOM,GLCD,NOS,FLAGMTR,RATE,DISCRATE,HSNCODE,GSTPER,ALL_GSTPER,PRODGRPGSTPER,SHADE,TDDISCRATE,SCMDISCRATE,LOCABIN");
            if ("@Model.MENU_PARA" == "PB") {
                $("#BALENO").val("");
                $("#OURDESIGN").val("");
            }
            $("#DISCTYPE").val("P");
            $("#TDDISCTYPE").val("P");
            $("#SCMDISCTYPE").val("P");
            if (TAG == "Y") {
                $("#AddRow_Barcode").show();
                $("#UpdateRow_Barcode").hide();
                if ("@Model.MENU_PARA" == "PB") {
                    $("#TXNSLNO").focus();
                } else {
                    $("#BARCODE").focus();
                }
            }
        }
    }
</script>

<script>
    function Fill_DetailData() {
        if ("@Model.DefaultAction" != "V") {
            $.ajax({
                type: 'POST',
                beforesend: $("#WaitingMode").show(),
                url: "@Url.Action("FillDetailData", PageControllerName)",
                data: $('form').serialize(),
                success: function (result) {
                    //$("#partialdivBarCodeTab").animate({ marginTop: '-10px' }, 50);
                    $("#partialdivDetail").html(result);
                    $("li").removeClass("active").addClass("");
                    $(".nav-tabs li:nth-child(3)").addClass('active');
                    //below set the  child sequence
                    $(".tab-content div").removeClass("active");
                    $(".tab-content div:nth-child(3)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
                    var GridRow = $("#_T_SALE_DETAIL_GRID > tbody > tr").length;
                    for (var i = 0; i <= GridRow - 1; i++) {
                        CalculateAmt_Details(i);
                    }
                    $("#WaitingMode").hide();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
    function UpdateBarCodeRow_FrmDet(i) {
        if ("@Model.DefaultAction" != "V") {
            var TXNSLNO = $("#D_SLNO_" + i).val();
            var ITGRPCD = $("#D_ITGRPCD_" + i).val();
            var MTRLJOBCD = $("#D_MTRLJOBCD_" + i).val();
            var ITCD = $("#D_ITCD_" + i).val();
            var STKTYPE = $("#D_STKTYPE_" + i).val();
            //fill
            var RATE = $("#D_RATE_" + i).val();
            var DISCTYPE = $("#D_DISCTYPE_" + i).val();
            var DISCTYPE_DESC = $("#D_DISCTYPE_DESC_" + i).val();
            var DISCRATE = $("#D_DISCRATE_" + i).val();
            var TDDISCRATE = $("#D_TDDISCRATE_" + i).val();
            var TDDISCTYPE = $("#D_TDDISCTYPE_" + i).val();
            var SCMDISCRATE = $("#D_SCMDISCRATE_" + i).val();
            var SCMDISCTYPE = $("#D_SCMDISCTYPE_" + i).val();
            var BALENO = $("#D_BALENO_" + i).val();
            var ALLGSTPER = $("#D_ALL_GSTPER_" + i).val();
            var GridRowMain = $("#_T_SALE_PRODUCT_GRID > tbody > tr").length;
            for (j = 0; j <= GridRowMain - 1; j++) {
                if ($("#B_TXNSLNO_" + j).val() == TXNSLNO && $("#B_ITGRPCD_" + j).val() == ITGRPCD && $("#B_MTRLJOBCD_" + j).val() == MTRLJOBCD && $("#B_ITCD_" + j).val() == ITCD && $("#B_STKTYPE_" + j).val() == STKTYPE) {
                    $("#B_RATE_" + j).val(RATE);
                    $("#B_DISCTYPE_" + j).val(DISCTYPE);
                    $("#B_DISCTYPE_DESC_" + j).val(DISCTYPE_DESC);
                    $("#B_DISCRATE_" + j).val(DISCRATE);
                    $("#B_TDDISCRATE_" + j).val(TDDISCRATE);
                    $("#B_TDDISCTYPE_" + j).val(TDDISCTYPE);
                    $("#B_SCMDISCRATE_" + j).val(SCMDISCRATE);
                    $("#B_SCMDISCTYPE_" + j).val(SCMDISCTYPE);
                    $("#B_BALENO_" + j).val(BALENO);
                    $("#B_ALL_GSTPER_" + j).val(ALLGSTPER);
                    if (ALLGSTPER != "") {
                        var str = ALLGSTPER.split(',');
                        if (str.length > 0) {
                            var sumgst = parseFloat(parseFloat(str[0]) + parseFloat(str[1]) + parseFloat(str[2])).toFixed(2);
                            $("#B_GSTPER_" + j).val(sumgst);
                        }
                    }
                }
            }
        }
    }
</script>
<script>
    function CalculateTotal_Barno() {
        if ("@Model.DefaultAction" != "V") {
            var T_QNTY = 0, T_NOS = 0;
            var GridRow = $("#_T_SALE_PRODUCT_GRID > tbody > tr").length;
            for (var i = 0; i <= GridRow - 1; i++) {
                var QNTY = $("#B_QNTY_" + i).val();
                if (QNTY != "") { T_QNTY = T_QNTY + parseFloat(QNTY); } else { T_QNTY = T_QNTY + parseFloat(0); }
                var NOS = $("#B_NOS_" + i).val();
                if (NOS != "") { T_NOS = T_NOS + parseFloat(NOS); } else { T_NOS = T_NOS + parseFloat(0); }
            }
            $("#B_T_QNTY").val(parseFloat(T_QNTY).toFixed(2));
            $("#B_T_NOS").val(parseFloat(T_NOS).toFixed(0));
        }
    }
    function CalculateAmt_Details(i) {
        if ("@Model.DefaultAction" != "V") {
            var BLQNTY = $("#D_BLQNTY_" + i).val();
            if (BLQNTY != "") { BLQNTY = parseFloat(BLQNTY); } else { BLQNTY = parseFloat(0); }

            var QNTY = $("#D_QNTY_" + i).val();
            if (QNTY != "") { QNTY = parseFloat(QNTY); } else { QNTY = parseFloat(0); }

            var NOS = $("#D_NOS_" + i).val();
            if (NOS != "") { NOS = parseFloat(NOS); } else { NOS = parseFloat(0); }

            var FLAGMTR = $("#D_FLAGMTR_" + i).val();
            if (FLAGMTR != "") { FLAGMTR = parseFloat(FLAGMTR); } else { FLAGMTR = parseFloat(0); }

            var RATE = $("#D_RATE_" + i).val();
            if (RATE != "") { RATE = parseFloat(RATE); } else { RATE = parseFloat(0); }

            var IGSTPER = $("#D_IGSTPER_" + i).val();
            if (IGSTPER != "") { IGSTPER = parseFloat(IGSTPER); } else { IGSTPER = parseFloat(0); }

            var CGSTPER = $("#D_CGSTPER_" + i).val();
            if (CGSTPER != "") { CGSTPER = parseFloat(CGSTPER); } else { CGSTPER = parseFloat(0); }

            var SGSTPER = $("#D_SGSTPER_" + i).val();
            if (SGSTPER != "") { SGSTPER = parseFloat(SGSTPER); } else { SGSTPER = parseFloat(0); }

            var CESSPER = $("#D_CESSPER_" + i).val();
            if (CESSPER != "") { CESSPER = parseFloat(CESSPER); } else { CESSPER = parseFloat(0); }

            var DISCTYPE = $("#D_DISCTYPE_" + i).val();
            var DISCRATE = $("#D_DISCRATE_" + i).val();
            if (DISCRATE != "") { DISCRATE = parseFloat(DISCRATE); } else { DISCRATE = parseFloat(0); }

            var TDDISCTYPE = $("#D_TDDISCTYPE_" + i).val();
            var TDDISCRATE = $("#D_TDDISCRATE_" + i).val();
            if (TDDISCRATE != "") { TDDISCRATE = parseFloat(TDDISCRATE); } else { TDDISCRATE = parseFloat(0); }

            var SCMDISCTYPE = $("#D_SCMDISCTYPE_" + i).val();
            var SCMDISCRATE = $("#D_SCMDISCRATE_" + i).val();
            if (SCMDISCRATE != "") { SCMDISCRATE = parseFloat(SCMDISCRATE); } else { SCMDISCRATE = parseFloat(0); }


            //AMOUNT CALCULATION
            var amount = 0;
            if (BLQNTY == 0) {
                amount = (parseFloat(QNTY) - parseFloat(FLAGMTR)) * parseFloat(RATE);
            }
            else {
                amount = parseFloat(BLQNTY) * parseFloat(RATE);
            }
            amount = parseFloat(amount).toFixed(2);
            $("#D_AMT_" + i).val(amount);

            //DISCOUNT AMOUNT CALCULATION
            var DISCAMT = 0;
            if (DISCTYPE == "Q") { DISCAMT = DISCRATE * QNTY; }
            else if (DISCTYPE == "N") { DISCAMT = DISCRATE * NOS; }
            else if (DISCTYPE == "P") { DISCAMT = (amount * DISCRATE) / 100; }
            else if (DISCTYPE == "F") { DISCAMT = DISCRATE; }
            else { DISCAMT = 0; }
            DISCAMT = parseFloat(DISCAMT).toFixed(2);
            $("#D_DISCAMT_" + i).val(DISCAMT);

            //TDDISCOUNT AMOUNT CALCULATION
            var TDDISCAMT = 0;
            if (TDDISCTYPE == "Q") { TDDISCAMT = TDDISCRATE * QNTY; }
            else if (TDDISCTYPE == "N") { TDDISCAMT = TDDISCRATE * NOS; }
            else if (TDDISCTYPE == "P") { TDDISCAMT = (amount * TDDISCRATE) / 100; }
            else if (TDDISCTYPE == "F") { TDDISCAMT = TDDISCRATE; }
            else { TDDISCAMT = 0; }
            TDDISCAMT = parseFloat(TDDISCAMT).toFixed(2);
            $("#D_TDDISCAMT_" + i).val(TDDISCAMT);

            //SCMDISCOUNT AMOUNT CALCULATION
            var SCMDISCAMT = 0;
            if (SCMDISCTYPE == "Q") { SCMDISCAMT = SCMDISCRATE * QNTY; }
            else if (SCMDISCTYPE == "N") { SCMDISCAMT = SCMDISCRATE * NOS; }
            else if (SCMDISCTYPE == "P") { SCMDISCAMT = (amount * SCMDISCRATE) / 100; }
            else if (SCMDISCTYPE == "F") { SCMDISCAMT = SCMDISCRATE; }
            else { SCMDISCAMT = 0; }
            SCMDISCAMT = parseFloat(SCMDISCAMT).toFixed(2);
            $("#D_SCMDISCAMT_" + i).val(SCMDISCAMT);

            //TOTAL DISCOUNT AMOUNT CALCULATION
            var TOTDISCAMT = parseFloat(DISCAMT + TDDISCAMT + SCMDISCAMT).toFixed(2);
            $("#D_TOTDISCAMT_" + i).val(TOTDISCAMT);

            //TAXABLE CALCULATION
            var taxbleamt = parseFloat(amount) - parseFloat(TOTDISCAMT);
            taxbleamt = parseFloat(taxbleamt).toFixed(2);
            $("#D_TXBLVAL_" + i).val(taxbleamt);
            //IGST,CGST,SGST,CESS AMOUNT CALCULATION

            var IGST_AMT = 0; var CGST_AMT = 0; var SGST_AMT = 0; var CESS_AMT = 0; var chkAmt = 0;

            //IGST
            if (IGSTPER == 0 || IGSTPER == "") {
                IGSTPER = 0; IGST_AMT = 0;
            }
            else {
                IGST_AMT = parseFloat((taxbleamt * IGSTPER) / 100).toFixed(2);
                chkAmt = $("#D_IGSTAMT_" + i).val();
                if (chkAmt == "") chkAmt = 0;
                if (Math.abs(IGST_AMT - chkAmt) <= 1) IGST_AMT = chkAmt;
            }
            $("#D_IGSTAMT_" + i).val(IGST_AMT);
            //CGST
            if (CGSTPER == "" || CGSTPER == 0) {
                CGSTPER = 0; CGST_AMT = 0;
            }
            else {
                CGST_AMT = parseFloat((taxbleamt * CGSTPER) / 100).toFixed(2);
                chkAmt = $("#D_CGSTAMT_" + i).val();
                if (chkAmt == "") chkAmt = 0;
                if (Math.abs(CGST_AMT - chkAmt) <= 1) CGST_AMT = chkAmt;
            }
            $("#D_CGSTAMT_" + i).val(CGST_AMT);
            //SGST
            if (SGSTPER == "" || SGSTPER == 0) {
                SGSTPER = 0; SGST_AMT = 0;
            }
            else {
                SGST_AMT = parseFloat((taxbleamt * SGSTPER) / 100).toFixed(2);
                chkAmt = $("#D_SGSTAMT_" + i).val();
                if (chkAmt == "") chkAmt = 0;
                if (Math.abs(SGST_AMT - chkAmt) <= 1) SGST_AMT = chkAmt;
            }
            $("#D_SGSTAMT_" + i).val(SGST_AMT);

            //CESS
            if (CESSPER == "" || CESSPER == 0) {
                CESSPER = 0; CESS_AMT = 0;
            }
            else {
                CESS_AMT = parseFloat((taxbleamt * CESSPER) / 100).toFixed(2);
                chkAmt = $("#D_CESSAMT_" + i).val();
                if (chkAmt == "") chkAmt = 0;
                if (Math.abs(CESS_AMT - chkAmt) <= 1) CESS_AMT = chkAmt;
            }
            $("#D_CESSAMT_" + i).val(CESS_AMT);

            var netamt = parseFloat(parseFloat(taxbleamt) + parseFloat(IGST_AMT) + parseFloat(CGST_AMT) + parseFloat(SGST_AMT) + parseFloat(CESS_AMT)).toFixed(2);
            $("#D_NETAMT_" + i).val(netamt);
            CalculateTotal_Details();
        }
    }
    function CalculateTotal_Details() {
        if ("@Model.DefaultAction" != "V") {
            var T_NOS = 0; var T_QNTY = 0; var T_AMT = 0; var T_GROSS_AMT = 0; var T_IGST_AMT = 0; var T_CGST_AMT = 0; var T_SGST_AMT = 0; var T_CESS_AMT = 0; var T_NET_AMT = 0;

            var GridRow = $("#_T_SALE_DETAIL_GRID > tbody > tr").length;
            for (var i = 0; i <= GridRow - 1; i++) {
                var NOS = $("#D_NOS_" + i).val();
                if (NOS != "") { T_NOS = T_NOS + parseFloat(NOS); } else { T_NOS = T_NOS + parseFloat(0); }

                var QNTY = $("#D_QNTY_" + i).val();
                if (QNTY != "") { T_QNTY = T_QNTY + parseFloat(QNTY); } else { T_QNTY = T_QNTY + parseFloat(0); }

                var AMT = $("#D_AMT_" + i).val();
                if (AMT != "") { T_AMT = T_AMT + parseFloat(AMT); } else { T_AMT = T_AMT + parseFloat(0); }

                var GROSS_AMT = $("#D_TXBLVAL_" + i).val();
                if (GROSS_AMT != "") { T_GROSS_AMT = T_GROSS_AMT + parseFloat(GROSS_AMT); } else { T_GROSS_AMT = T_GROSS_AMT + parseFloat(0); }

                var IGST_AMT = $("#D_IGSTAMT_" + i).val();
                if (IGST_AMT != "") { T_IGST_AMT = T_IGST_AMT + parseFloat(IGST_AMT); } else { T_IGST_AMT = T_IGST_AMT + parseFloat(0); }

                var CGST_AMT = $("#D_CGSTAMT_" + i).val();
                if (CGST_AMT != "") { T_CGST_AMT = T_CGST_AMT + parseFloat(CGST_AMT); } else { T_CGST_AMT = T_CGST_AMT + parseFloat(0); }

                var SGST_AMT = $("#D_SGSTAMT_" + i).val();
                if (SGST_AMT != "") { T_SGST_AMT = T_SGST_AMT + parseFloat(SGST_AMT); } else { T_SGST_AMT = T_SGST_AMT + parseFloat(0); }

                var CESS_AMT = $("#D_CESSAMT_" + i).val();
                if (CESS_AMT != "") { T_CESS_AMT = T_CESS_AMT + parseFloat(CESS_AMT); } else { T_CESS_AMT = T_CESS_AMT + parseFloat(0); }

                var NET_AMT = $("#D_NETAMT_" + i).val();
                if (NET_AMT != "") { T_NET_AMT = T_NET_AMT + parseFloat(NET_AMT); } else { T_NET_AMT = T_NET_AMT + parseFloat(0); }
            }
            var totaltax = parseFloat(T_IGST_AMT) + parseFloat(T_CGST_AMT) + parseFloat(T_SGST_AMT) + parseFloat(T_CESS_AMT);
            $("#T_NOS").val(parseFloat(T_NOS).toFixed(0));
            $("#T_QNTY").val(parseFloat(T_QNTY).toFixed(2));
            $("#T_AMT").val(parseFloat(T_AMT).toFixed(2));
            $("#T_GROSS_AMT").val(parseFloat(T_GROSS_AMT).toFixed(2));
            $("#T_IGST_AMT").val(parseFloat(T_IGST_AMT).toFixed(2));
            $("#T_CGST_AMT").val(parseFloat(T_CGST_AMT).toFixed(2));
            $("#T_SGST_AMT").val(parseFloat(T_SGST_AMT).toFixed(2));
            $("#T_CESS_AMT").val(parseFloat(T_CESS_AMT).toFixed(2));
            $("#T_NET_AMT").val(parseFloat(T_NET_AMT).toFixed(2));

            //main tab
            //$("#TOTNOS").val(parseFloat(T_NOS).toFixed(2));
            //$("#TOTQNTY").val(parseFloat(T_QNTY).toFixed(2));
            //$("#TOTTAXVAL").val(parseFloat(T_GROSS_AMT).toFixed(2));
            //$("#TOTTAX").val(parseFloat(totaltax).toFixed(2));
            BillAmountCalculate();
        }
    }
</script>
<script>
    function GetGstPer(i, FieldidStarting) {
        if ("@Model.DefaultAction" != "V") {
            debugger;
            var prodgrpgstper = "";
            var rate = 0;
            if (FieldidStarting == "") {
                prodgrpgstper = $("#PRODGRPGSTPER").val();
                rate = $("#RATE").val();
                if (rate == "") { rate = parseFloat(0); } else { rate = parseFloat(rate); }
            }
            else {
                prodgrpgstper = $(FieldidStarting + "PRODGRPGSTPER_" + i).val();
                rate = $(FieldidStarting + "RATE_" + i).val();
                if (rate == "") { rate = parseFloat(0); } else { rate = parseFloat(rate); }
            }
            var allgst = retGstPer(prodgrpgstper, rate);
            if (allgst != "") {
                var str = allgst.split(',');
                if (str.length > 0) {
                    var sumgst = parseFloat(parseFloat(str[0]) + parseFloat(str[1]) + parseFloat(str[2])).toFixed(2);
                    if (FieldidStarting == "") {
                        $("#GSTPER").val(sumgst);
                        $("#ALL_GSTPER").val(allgst);
                    }
                    else if (FieldidStarting == "#B_") {

                        $(FieldidStarting + "GSTPER_" + i).val(sumgst);
                        $(FieldidStarting + "ALL_GSTPER_" + i).val(allgst);
                    }
                    else {
                        $(FieldidStarting + "IGSTPER_" + i).val(parseFloat(str[0]).toFixed(2));
                        $(FieldidStarting + "CGSTPER_" + i).val(parseFloat(str[1]).toFixed(2));
                        $(FieldidStarting + "SGSTPER_" + i).val(parseFloat(str[2]).toFixed(2));
                        $(FieldidStarting + "ALL_GSTPER_" + i).val(allgst);
                    }
                }
            }
            if (FieldidStarting == "#D_") {
                UpdateBarCodeRow_FrmDet(i);
                CalculateAmt_Details(i);
            }
        }
    }
    function retGstPer(prodgrpgstper, rate) {
        if ("@Model.DefaultAction" != "V") {
            //Searchstr value like listagg(b.fromrt||chr(126)||b.tort||chr(126)||b.igstper||chr(126)||b.cgstper||chr(126)||b.sgstper,chr(179))

            var fromrt = 0, tort = 0, selrow = -1;
            var mgstrate = [5];
            var rtval = "0,0,0"; //igstper,cgst,sgst
            var SP = String.fromCharCode(179);

            var mrates = prodgrpgstper.split(SP);
            for (var x = 0; x <= mrates.length - 1; x++) {
                //mgstrate = mrates[x].Split(Convert.ToChar(Cn.GCS())).ToArray();
                mgstrate = mrates[x].split('~');

                if (mgstrate[0] == "") { fromrt = parseFloat(0); } else { fromrt = parseFloat(mgstrate[0]); }
                if (mgstrate[1] == "") { tort = parseFloat(0); } else { tort = parseFloat(mgstrate[1]); }
                if (rate >= fromrt && rate <= tort) { selrow = x; break; }
            }
            if (selrow != -1) rtval = mgstrate[2] + "," + mgstrate[3] + "," + mgstrate[4];
            return rtval;
        }
    }
    function ItcdClr() {
        if ("@Model.DefaultAction" != "V") {
            ClearAllTextBoxes("ITCD,ITSTYLE,UOM,STYLENO,HSNCODE");
        }
    }
</script>
<script>
    function AmountCalculation(i) {
        if ("@Model.DefaultAction" != "V") {
            var A_NOS = document.getElementById("T_NOS").value;
            var B_QNTY = document.getElementById("T_QNTY").value;
            var D_GROSS_AMT = document.getElementById("T_GROSS_AMT").value;
            var E_NET_AMT = document.getElementById("T_NET_AMT").value;
            var RT = document.getElementById("AMTRATE_" + i).value;
            var IGST_PER = document.getElementById("AIGSTPER_" + i).value;
            if (IGST_PER == "") { IGST_PER = parseFloat(0); } else { IGST_PER = parseFloat(IGST_PER) }
            var CGST_PER = document.getElementById("ACGSTPER_" + i).value;
            if (CGST_PER == "") { CGST_PER = parseFloat(0); } else { CGST_PER = parseFloat(CGST_PER) }
            var SGST_PER = document.getElementById("ASGSTPER_" + i).value;
            if (SGST_PER == "") { SGST_PER = parseFloat(0); } else { SGST_PER = parseFloat(SGST_PER) }
            var CESS_PER = document.getElementById("ACESSPER_" + i).value;
            if (CESS_PER == "") { CESS_PER = parseFloat(0); } else { CESS_PER = parseFloat(CESS_PER) }
            var DUTY_PER = document.getElementById("ADUTYPER_" + i).value;
            if (DUTY_PER == "") { DUTY_PER = parseFloat(0); } else { DUTY_PER = parseFloat(DUTY_PER) }
            var CALC_TYPE = document.getElementById("CALCTYPE_" + i).value;
            var CALC_FORMULA = document.getElementById("CALCFORMULA_" + i).value;
            if (A_NOS == "") { A_NOS = parseFloat(0); }
            if (B_QNTY == "") { B_QNTY = parseFloat(0); }
            if (D_GROSS_AMT == "") { D_GROSS_AMT = parseFloat(0); }
            if (E_NET_AMT == "") { E_NET_AMT = parseFloat(0); }
            if (RT == "") { RT = parseFloat(0); }
            var AMOUNT = 0;
            if (CALC_TYPE == "F") { AMOUNT = parseFloat(RT); }
            else if (CALC_TYPE == "P") {
                if (CALC_FORMULA == "A") { AMOUNT = parseFloat(A_NOS) * parseFloat(RT); }
                else if (CALC_FORMULA == "B") { AMOUNT = parseFloat(B_QNTY) * parseFloat(RT); }
                else if (CALC_FORMULA == "D") { AMOUNT = parseFloat(D_GROSS_AMT) * parseFloat(RT); }
                else if (CALC_FORMULA == "E") { AMOUNT = parseFloat(E_NET_AMT) * parseFloat(RT); }
            }
            document.getElementById("A_AMT_" + i).value = AMOUNT;
            var IGST_AMT = 0; var CGST_AMT = 0; var SGST_AMT = 0; var CESS_AMT = 0; var DUTY_AMT = 0;

            // IGST CALCULATION
            document.getElementById("AIGSTPER_" + i).value = IGST_PER;
            IGST_AMT = (AMOUNT * IGST_PER) / 100;

            AmountChange(document.getElementById("AIGSTAMT_" + i), document.getElementById("A_AMT_" + i), document.getElementById("AIGSTPER_" + i), document.getElementById("ANETAMT_" + i),
            document.getElementById("ACGSTAMT_" + i), document.getElementById("ASGSTAMT_" + i), document.getElementById("ACESSAMT_" + i), document.getElementById("ADUTYAMT_" + i));
            document.getElementById("AIGSTAMT_" + i).value = parseFloat(IGST_AMT).toFixed(2);
            //END

            // CGST CALCULATION
            document.getElementById("ACGSTPER_" + i).value = CGST_PER;
            CGST_AMT = (AMOUNT * CGST_PER) / 100;
            AmountChange(document.getElementById("ACGSTAMT_" + i), document.getElementById("A_AMT_" + i), document.getElementById("ACGSTPER_" + i), document.getElementById("ANETAMT_" + i),
                document.getElementById("AIGSTAMT_" + i), document.getElementById("ASGSTAMT_" + i), document.getElementById("ACESSAMT_" + i), document.getElementById("ADUTYAMT_" + i));
            document.getElementById("ACGSTAMT_" + i).value = parseFloat(CGST_AMT).toFixed(2);
            //END
            // SGST CALCULATION
            document.getElementById("ASGSTPER_" + i).value = SGST_PER;
            SGST_AMT = (AMOUNT * SGST_PER) / 100;
            AmountChange(document.getElementById("ASGSTAMT_" + i), document.getElementById("A_AMT_" + i), document.getElementById("ASGSTPER_" + i), document.getElementById("ANETAMT_" + i),
                document.getElementById("AIGSTAMT_" + i), document.getElementById("ASGSTAMT_" + i), document.getElementById("ACESSAMT_" + i), document.getElementById("ADUTYAMT_" + i));
            document.getElementById("ASGSTAMT_" + i).value = parseFloat(SGST_AMT).toFixed(2);
            //END
            // CESS CALCULATION
            document.getElementById("ACESSPER_" + i).value = CESS_PER;
            CESS_AMT = (AMOUNT * CESS_PER) / 100;
            AmountChange(document.getElementById("ACESSAMT_" + i), document.getElementById("A_AMT_" + i), document.getElementById("ACESSPER_" + i), document.getElementById("ANETAMT_" + i),
                document.getElementById("AIGSTAMT_" + i), document.getElementById("ASGSTAMT_" + i), document.getElementById("ACESSAMT_" + i), document.getElementById("ADUTYAMT_" + i));
            document.getElementById("ACESSAMT_" + i).value = parseFloat(CESS_AMT).toFixed(2);
            //END
            // DUTY CALCULATION

            document.getElementById("ADUTYPER_" + i).value = DUTY_PER;
            DUTY_AMT = (AMOUNT * DUTY_PER) / 100;
            AmountChange(document.getElementById("ADUTYAMT_" + i), document.getElementById("A_AMT_" + i), document.getElementById("ADUTYPER_" + i), document.getElementById("ANETAMT_" + i),
            document.getElementById("AIGSTAMT_" + i), document.getElementById("ASGSTAMT_" + i), document.getElementById("ACESSAMT_" + i), document.getElementById("ADUTYAMT_" + i));
            document.getElementById("ADUTYAMT_" + i).value = parseFloat(DUTY_AMT).toFixed(2);
            //END

            var NET_AMT = AMOUNT + parseFloat(document.getElementById("AIGSTAMT_" + i).value) + parseFloat(document.getElementById("ACGSTAMT_" + i).value) +
                         parseFloat(document.getElementById("ASGSTAMT_" + i).value) + parseFloat(document.getElementById("ACESSAMT_" + i).value) + parseFloat(document.getElementById("ADUTYAMT_" + i).value);
            document.getElementById("ANETAMT_" + i).value = parseFloat(NET_AMT).toFixed(2);

            //GRID TOTAL CALCULATION
            AmountCalculateTotal();
        }
    }
    function AmountChange(id, AMOUNT, PER, NETAMT, AMT1, AMT2, AMT3, AMT4) {
        if ("@Model.DefaultAction" != "V") {
            var NEW_AMT = document.getElementById(id.id).value;
            var PERCENTAGE = document.getElementById(PER.id).value;
            var AMT = document.getElementById(AMOUNT.id).value;
            var AMT_1 = document.getElementById(AMT1.id).value;
            var AMT_2 = document.getElementById(AMT2.id).value;
            var AMT_3 = document.getElementById(AMT3.id).value;
            var AMT_4 = document.getElementById(AMT4.id).value;
            if (PERCENTAGE != "") {
                var CAL_ABET_AMT = parseFloat(AMT) * parseFloat(PERCENTAGE) / 100;
                var BAL_AMT = Math.abs(parseFloat(NEW_AMT) - parseFloat(CAL_ABET_AMT));
                if (BAL_AMT <= 1) {
                    document.getElementById(id.id).value = parseFloat(NEW_AMT).toFixed(2);
                    document.getElementById(NETAMT.id).value = parseFloat(parseFloat(NEW_AMT) + parseFloat(AMT) + parseFloat(AMT_1) + parseFloat(AMT_2) + parseFloat(AMT_3) + parseFloat(AMT_4)).toFixed(2);
                }
                else {
                    document.getElementById(id.id).value = parseFloat(CAL_ABET_AMT).toFixed(2);
                    document.getElementById(NETAMT.id).value = parseFloat(parseFloat(CAL_ABET_AMT) + parseFloat(AMT) + parseFloat(AMT_1) + parseFloat(AMT_2) + parseFloat(AMT_3) + parseFloat(AMT_4)).toFixed(2);
                }
            }
            //GRID TOTAL CALCULATION
            AmountCalculateTotal();
        }
    }
    function AmountCalculateTotal() {
        if ("@Model.DefaultAction" != "V") {
            var T_CURR_AMT = 0; var T_AMT = 0; var T_IGST_AMT = 0; var T_CGST_AMT = 0; var T_SGST_AMT = 0; var T_CESS_AMT = 0; var T_DUTY_AMT = 0; var T_NET_AMT = 0;
            var GridRow = $("#AMOUNT_GRID > tbody > tr").length;
            for (var i = 0; i <= GridRow - 1; i++) {
                var CURR_AMT = document.getElementById("ACURR_AMT_" + i).value;
                if (CURR_AMT != "") { T_CURR_AMT = T_CURR_AMT + parseFloat(CURR_AMT); } else { T_CURR_AMT = T_CURR_AMT + parseFloat(0); }

                var AMT = document.getElementById("A_AMT_" + i).value;
                if (AMT != "") { T_AMT = T_AMT + parseFloat(AMT); } else { T_AMT = T_AMT + parseFloat(0); }

                var IGST_AMT = document.getElementById("AIGSTAMT_" + i).value;
                if (IGST_AMT != "") { T_IGST_AMT = T_IGST_AMT + parseFloat(IGST_AMT); } else { T_IGST_AMT = T_IGST_AMT + parseFloat(0); }

                var CGST_AMT = document.getElementById("ACGSTAMT_" + i).value;
                if (CGST_AMT != "") { T_CGST_AMT = T_CGST_AMT + parseFloat(CGST_AMT); } else { T_CGST_AMT = T_CGST_AMT + parseFloat(0); }

                var SGST_AMT = document.getElementById("ASGSTAMT_" + i).value;
                if (SGST_AMT != "") { T_SGST_AMT = T_SGST_AMT + parseFloat(SGST_AMT); } else { T_SGST_AMT = T_SGST_AMT + parseFloat(0); }

                var CESS_AMT = document.getElementById("ACESSAMT_" + i).value;
                if (CESS_AMT != "") { T_CESS_AMT = T_CESS_AMT + parseFloat(CESS_AMT); } else { T_CESS_AMT = T_CESS_AMT + parseFloat(0); }

                var DUTY_AMT = document.getElementById("ADUTYAMT_" + i).value;
                if (DUTY_AMT != "") { T_DUTY_AMT = T_DUTY_AMT + parseFloat(DUTY_AMT); } else { T_DUTY_AMT = T_DUTY_AMT + parseFloat(0); }

                var NET_AMT = document.getElementById("ANETAMT_" + i).value;
                if (NET_AMT != "") { T_NET_AMT = T_NET_AMT + parseFloat(NET_AMT); } else { T_NET_AMT = T_NET_AMT + parseFloat(0); }

            }
            document.getElementById("A_T_CURR").value = parseFloat(T_CURR_AMT).toFixed(2);
            document.getElementById("A_T_AMOUNT").value = parseFloat(T_AMT).toFixed(2);
            document.getElementById("A_T_IGST").value = parseFloat(T_IGST_AMT).toFixed(2);
            document.getElementById("A_T_CGST").value = parseFloat(T_CGST_AMT).toFixed(2);
            document.getElementById("A_T_SGST").value = parseFloat(T_SGST_AMT).toFixed(2);
            document.getElementById("A_T_CESS").value = parseFloat(T_CESS_AMT).toFixed(2);
            document.getElementById("A_T_DUTY").value = parseFloat(T_DUTY_AMT).toFixed(2);
            document.getElementById("A_T_NET").value = parseFloat(T_NET_AMT).toFixed(2);

            //BILL AMOUNT CALCULATION
            BillAmountCalculate();
        }
    }
    function OpenAmount() {
        if ("@Model.DefaultAction" != "V") {
            var IGST_PER = 0; var CGST_PER = 0; var SGST_PER = 0; var CESS_PER = 0; var DUTY_PER = 0;
            var GridRowMain = $("#_T_SALE_DETAIL_GRID > tbody > tr").length;
            for (i = 0; i <= GridRowMain - 1; i++) {
                var IGST = parseFloat(document.getElementById("D_IGSTPER_" + i).value);
                var CGST = parseFloat(document.getElementById("D_CGSTPER_" + i).value);
                var SGST = parseFloat(document.getElementById("D_SGSTPER_" + i).value);
                var CESS = parseFloat(document.getElementById("D_CESSPER_" + i).value);
                var DUTY = 0;//parseFloat(document.getElementById("DUTYPER_" + i).value);
                if (IGST > IGST_PER) {
                    IGST_PER = IGST;
                }
                if (CGST > CGST_PER) {
                    CGST_PER = CGST;
                }
                if (SGST > SGST_PER) {
                    SGST_PER = SGST;
                }
                if (CESS > CESS_PER) {
                    CESS_PER = CESS;
                }
                if (DUTY > DUTY_PER) {
                    DUTY_PER = DUTY;
                }
            }
            var GridRowMain = $("#AMOUNT_GRID > tbody > tr").length;
            for (i = 0; i <= GridRowMain - 1; i++) {
                document.getElementById("AIGSTPER_" + i).value = IGST_PER;
                document.getElementById("ACGSTPER_" + i).value = CGST_PER;
                document.getElementById("ASGSTPER_" + i).value = SGST_PER;
                document.getElementById("ACESSPER_" + i).value = CESS_PER;
                document.getElementById("ADUTYPER_" + i).value = DUTY_PER;
            }
        }
    }
</script>
<script>
    function ReverceCharges() {
        if ("@Model.DefaultAction" != "V") {
            var GridRowMain = $("#_T_SALE_DETAIL_GRID > tbody > tr").length;
            var REVCHRG = $("#REVCHRG").val();
            for (var i = 0; i <= GridRowMain - 1; i++) {

                if (REVCHRG == "N") {
                    $("#D_IGSTPER_" + i).val(0);
                    $("#D_IGSTAMT_" + i).val(parseFloat(0).toFixed(2));
                    $("#D_CGSTPER_" + i).val(0);
                    $("#D_CGSTAMT_" + i).val(parseFloat(0).toFixed(2));
                    $("#D_SGSTPER_" + i).val(0);
                    $("#D_SGSTAMT_" + i).val(parseFloat(0).toFixed(2));
                    $("#D_CESSPER_" + i).val(0);
                    $("#D_CESSAMT_" + i).val(parseFloat(0).toFixed(2));
                    $("#D_IGSTPER_" + i).attr('readonly', 'readonly');
                    $("#D_IGSTAMT_" + i).attr('readonly', 'readonly');
                    $("#D_CGSTPER_" + i).attr('readonly', 'readonly');
                    $("#D_CGSTAMT_" + i).attr('readonly', 'readonly');
                    $("#D_SGSTPER_" + i).attr('readonly', 'readonly');
                    $("#D_SGSTAMT_" + i).attr('readonly', 'readonly');
                    $("#D_CESSPER_" + i).attr('readonly', 'readonly');
                    $("#D_CESSAMT_" + i).attr('readonly', 'readonly');
                    //var taxableamt = $("#D_TXBLVAL_" + i).val();
                    //var netamount = parseFloat(taxableamt).toFixed(2);
                    //$("#D_NETAMT_" + i).val(netamount);
                }
                else {
                    var taxableamt = $("#D_TXBLVAL_" + i).val();
                    $("#D_IGSTPER_" + i).removeAttr('readonly');
                    $("#D_IGSTAMT_" + i).removeAttr('readonly');
                    $("#D_CGSTPER_" + i).removeAttr('readonly');
                    $("#D_CGSTAMT_" + i).removeAttr('readonly');
                    $("#D_SGSTPER_" + i).removeAttr('readonly');
                    $("#D_SGSTAMT_" + i).removeAttr('readonly');
                    $("#D_CESSPER_" + i).removeAttr('readonly');
                    $("#D_CESSAMT_" + i).removeAttr('readonly');

                    var igstp = 0, cgstp = 0, sgstp = 0, cessper = 0;
                    prodgrpgstper = $("#D_PRODGRPGSTPER_" + i).val();
                    rate = $("#D_RATE_" + i).val();
                    if (rate == "") { rate = parseFloat(0); } else { rate = parseFloat(rate); }
                    var allgst = retGstPer(prodgrpgstper, rate);
                    if (allgst != "") {
                        var str = allgst.split(',');
                        if (str.length > 0) {
                            igstp = $(parseFloat(str[0]).toFixed(2)).val();
                            cgstp = $(parseFloat(str[1]).toFixed(2)).val();
                            sgstp = $(parseFloat(str[2]).toFixed(2)).val();
                        }

                        $("#D_IGSTPER_" + i).val(igstp);
                        //var igstamount = parseFloat(taxableamt * igstp / 100).toFixed(2);
                        //$("#D_IGSTAMT_" + i).val(igstamount);


                        $("#D_CGSTPER_" + i).val(cgstp);
                        //var cgstamount = parseFloat(taxableamt * cgstp / 100).toFixed(2);
                        //$("#D_CGSTAMT_" + i).val(cgstamount);


                        $("#D_SGSTPER_" + i).val(sgstp);
                        //var sgstamount = parseFloat(taxableamt * sgstp / 100).toFixed(2);
                        //$("#D_SGSTAMT_" + i).val(sgstamount);

                        //cessper = $("#BackupCESSTPER").val();
                        //$("#D_CESSPER_" + i).val(cessper);
                        //var cessamount = parseFloat(taxableamt * cessper / 100).toFixed(2);
                        //$("#D_CESSAMT_" + i).val(cessamount);
                        //var netamount = parseFloat(taxableamt) + parseFloat(igstamount) + parseFloat(cgstamount) + parseFloat(sgstamount) + parseFloat(cessamount);
                        //netamount = parseFloat(netamount).toFixed(2);
                        //$("#D_NETAMT_" + i).val(netamount);
                    }
                }
                CalculateAmt_Details(i);
            }
            //BillAmountCalculate();
            //DRCRBillAmount();
            //SBILLBillAmount();
        }
    }
    function BillAmountCalculate() {
        if ("@Model.DefaultAction" != "V") {
            debugger;
            var R_TOTAL_BILL_AMOUNT = 0;
            var TOTAL_ROUND = 0;
            var netamt = 0;
            var ROUND_TAG = document.getElementById("RoundOff").checked;
            var D_TOTALNOS = 0, D_TOTALQNTY = 0, D_TOTALTAXVAL = 0, A_TOTALTAXVAL = 0, D_TOTALIGST = 0, A_TOTALIGST = 0, D_TOTALCGST = 0, A_TOTALCGST = 0, D_TOTALSGST = 0, A_TOTALSGST = 0, D_TOTALNETAMT = 0, A_TOTALNETAMT = 0;
            var T_NOS = $("#T_NOS").val();
            if (T_NOS != "") { D_TOTALNOS = D_TOTALNOS + parseFloat(T_NOS); } else { D_TOTALNOS = D_TOTALNOS + parseFloat(0); }

            var T_QNTY = $("#T_QNTY").val();
            if (T_QNTY != "") { D_TOTALQNTY = D_TOTALQNTY + parseFloat(T_QNTY); } else { D_TOTALQNTY = D_TOTALQNTY + parseFloat(0); }

            var T_GROSS_AMT = $("#T_GROSS_AMT").val();
            if (T_GROSS_AMT != "") { D_TOTALTAXVAL = D_TOTALTAXVAL + parseFloat(T_GROSS_AMT); } else { D_TOTALTAXVAL = D_TOTALTAXVAL + parseFloat(0); }

            var A_T_AMOUNT = $("#A_T_AMOUNT").val();
            if (A_T_AMOUNT != "") { A_TOTALTAXVAL = A_TOTALTAXVAL + parseFloat(A_T_AMOUNT); } else { A_TOTALTAXVAL = A_TOTALTAXVAL + parseFloat(0); }
            //
            var T_IGST_AMT = $("#T_IGST_AMT").val();
            if (T_IGST_AMT != "") { D_TOTALIGST = D_TOTALIGST + parseFloat(T_IGST_AMT); } else { D_TOTALIGST = D_TOTALIGST + parseFloat(0); }

            var A_T_IGST = $("#A_T_IGST").val();
            if (A_T_IGST != "") { A_TOTALIGST = A_TOTALIGST + parseFloat(A_T_IGST); } else { A_TOTALIGST = A_TOTALIGST + parseFloat(0); }

            var T_CGST_AMT = $("#T_CGST_AMT").val();
            if (T_CGST_AMT != "") { D_TOTALCGST = D_TOTALCGST + parseFloat(T_CGST_AMT); } else { D_TOTALCGST = D_TOTALCGST + parseFloat(0); }

            var A_T_CGST = $("#A_T_CGST").val();
            if (A_T_CGST != "") { A_TOTALCGST = A_TOTALCGST + parseFloat(A_T_CGST); } else { A_TOTALCGST = A_TOTALCGST + parseFloat(0); }

            var T_SGST_AMT = $("#T_SGST_AMT").val();
            if (T_SGST_AMT != "") { D_TOTALSGST = D_TOTALSGST + parseFloat(T_SGST_AMT); } else { D_TOTALSGST = D_TOTALSGST + parseFloat(0); }

            var A_T_SGST = $("#A_T_SGST").val();
            if (A_T_SGST != "") { A_TOTALSGST = A_TOTALSGST + parseFloat(A_T_SGST); } else { A_TOTALSGST = A_TOTALSGST + parseFloat(0); }

            var T_NET_AMT = $("#T_NET_AMT").val();
            if (T_NET_AMT != "") { D_TOTALNETAMT = D_TOTALNETAMT + parseFloat(T_NET_AMT); } else { D_TOTALNETAMT = D_TOTALNETAMT + parseFloat(0); }

            var A_T_NET = $("#A_T_NET").val();
            if (A_T_NET != "") { A_TOTALNETAMT = A_TOTALNETAMT + parseFloat(A_T_NET); } else { A_TOTALNETAMT = A_TOTALNETAMT + parseFloat(0); }

            var totaltaxval = 0;
            totaltaxval = parseFloat(parseFloat(D_TOTALTAXVAL) + parseFloat(A_TOTALTAXVAL)).toFixed(2);

            var totaltax = 0;
            totaltax = parseFloat(parseFloat(D_TOTALIGST) + parseFloat(A_TOTALIGST) + parseFloat(D_TOTALCGST) + parseFloat(A_TOTALCGST) + parseFloat(D_TOTALSGST) + parseFloat(A_TOTALSGST)).toFixed(2);

            var totalbillamt = 0;
            totalbillamt = parseFloat(parseFloat(D_TOTALNETAMT) + parseFloat(A_TOTALNETAMT)).toFixed(2);

            $("#TOTNOS").val(parseFloat(D_TOTALNOS).toFixed(0));
            $("#TOTQNTY").val(parseFloat(D_TOTALQNTY).toFixed(2));
            $("#TOTTAXVAL").val(parseFloat(totaltaxval).toFixed(2));
            $("#TOTTAX").val(parseFloat(totaltax).toFixed(2));


            var REVCHRG = $("#REVCHRG").val();
            if (REVCHRG == "Y") {
                totalbillamt = totalbillamt - totaltax;
            }
            if (ROUND_TAG == true) {
                R_TOTAL_BILL_AMOUNT = Math.round(totalbillamt);
                TOTAL_ROUND = R_TOTAL_BILL_AMOUNT - totalbillamt;
                document.getElementById("BLAMT").value = parseFloat(R_TOTAL_BILL_AMOUNT).toFixed(2);
                document.getElementById("ROAMT").value = parseFloat(TOTAL_ROUND).toFixed(2);
                @*if ("@Model.MENU_PARA" == "PI") {
                document.getElementById("BILL_AMTRecvd").value = parseFloat(R_TOTAL_BILL_AMOUNT).toFixed(2);
                var ADVRECDAMT = document.getElementById("ADVRECDAMT").value;
                if (ADVRECDAMT != "") {
                    document.getElementById("NET_AMTRecvd").value = (parseFloat(R_TOTAL_BILL_AMOUNT) - parseFloat(ADVRECDAMT)).toFixed(2);
                } else { document.getElementById("NET_AMTRecvd").value = ""; }

            }*@
            }
            else {
                //TOTAL_BILL_AMOUNT = parseFloat(PRODUCT_TOTAL_AMT) + parseFloat(AMOUNT_TOTAL_AMT);
                TOTAL_ROUND = 0;
                document.getElementById("BLAMT").value = parseFloat(totalbillamt).toFixed(2);
                @*if ("@Model.MENU_PARA" == "PI") {
                document.getElementById("BILL_AMTRecvd").value = parseFloat(totalbillamt).toFixed(2);
                var ADVRECDAMT = document.getElementById("ADVRECDAMT").value;
                if (ADVRECDAMT != "") { document.getElementById("NET_AMTRecvd").value = (parseFloat(totalbillamt) - parseFloat(ADVRECDAMT)).toFixed(2); }
                else { document.getElementById("NET_AMTRecvd").value = ""; }
            }*@
                document.getElementById("ROAMT").value = parseFloat(TOTAL_ROUND).toFixed(2);
            }
        }
    }
</script>
<script>
    function CalulateTareWt(GRWT, NTWT, TRWT) {
        if ("@Model.DefaultAction" != "V") {
            var GROSS = document.getElementById(GRWT.id).value;
            if (GROSS == "") {
                GROSS = parseFloat(0);
            }
            var NET = document.getElementById(NTWT.id).value;
            if (NET == "") {
                NET = parseFloat(0);
            }
            var TARE = GROSS - NET;
            document.getElementById(TRWT.id).value = TARE.toFixed(3);
        }
    }
</script>
<script>
    function Checked_Disable() {
        var GridRow = $("#_T_SALE_PRODUCT_GRID > tbody > tr").length;
        for (var i = 0; i <= GridRow - 1; i++) {
            if ($("#B_ChildData_" + i).val() == "Y") {
                document.getElementById("B_Checked_" + i).disabled = true;
            }
        }
    }
</script>
<script>
    function DeleteRow() {
        if ("@Model.DefaultAction" != "V") {
            $.ajax({
                type: 'POST',
                url: "@Url.Action("DeleteRow", PageControllerName)",
                data: $('form').serialize(),
                success: function (result) {
                    $("#partialdivBarCodeTab").animate({ marginTop: '0px' }, 50);
                    $("#partialdivBarCodeTab").html(result);
                    CalculateTotal_Barno();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
</script>
<script>
    function AddDOCrow() {
        if ("@Model.DefaultAction" != "V") {
            $.ajax({
                type: 'POST',
                url: "@Url.Action("AddDOCRow", PageControllerName)",
                data: $('form').serialize(),
                success: function (result) {
                    $("#partialdivDocument").animate({ marginTop: '-10px' }, 50);
                    $("#partialdivDocument").html(result);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
    function DeleteDOCrow() {
        if ("@Model.DefaultAction" != "V") {
            $.ajax({
                type: 'POST',
                url: "@Url.Action("DeleteDOCRow", PageControllerName)",
                data: $('form').serialize(),
                success: function (result) {
                    $("#partialdivDocument").animate({ marginTop: '0px' }, 50);
                    $("#partialdivDocument").html(result);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
</script>
<script>
    function SelectTDSCode(id, TDSHD, TDSNM, TCSPER) {
        if ("@Model.DefaultAction" != "V") {
            if (id == "") {
                $("#" + TDSHD.id).val("");
                $("#" + TDSNM.id).val("");
                $("#" + TCSPER.id).val("");
            }
            else {
                if (!emptyFieldCheck("Enter Document Date", "DOCDT")) { return false; }
                if (!emptyFieldCheck("Enter Supplier Code", "SLCD")) { return false; }
                var PARTY = document.getElementById("SLCD").value;
                var DOCDT = document.getElementById("DOCDT").value;
                $.ajax({
                    type: 'GET',
                    url: "@Url.Action("GetTDSDetails", PageControllerName)",
                    data:
                        {
                            val: id,
                            PARTY: PARTY,
                            TAG: DOCDT
                        },
                    success: function (result) {
                        var MSG = result.indexOf(String.fromCharCode(181));
                        if (MSG >= 0) {
                            document.getElementById(TDSHD.id).value = returncolvalue(result, "TDSCODE");
                            document.getElementById(TDSNM.id).value = returncolvalue(result, "TDSNM");
                            var CMPNONCMP = returncolvalue(result, "CMPNONCMP");
                            if (CMPNONCMP == "L") {
                                document.getElementById(TCSPER.id).value = returncolvalue(result, "TDSPER");
                            } else {
                                document.getElementById(TCSPER.id).value = returncolvalue(result, "TDSPERNONCMP");
                            }
                        }
                        else {
                            $("#" + TDSHD.id).val("");
                            $("#" + TDSNM.id).val("");
                            $("#" + TCSPER.id).val("");
                            msgInfo(result);
                            message_value = TDSHD.id;
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $("#WaitingMode").hide();
                        msgError(XMLHttpRequest.responseText);
                        $("body span h1").remove(); $("#msgbody_error style").remove();
                    }
                });
            }
        }
    }
</script>
<script>
    function pageprinting() {
        debugger;
        var ty = $("#DOCCD").val();
        $.ajax({
            type: 'get',
            url: "@Url.Action("Print", PageControllerName)",
            data: "DOCNO=" + $("#DOCNO").val() + "&DOC_CD=" + $("#DOCCD").val() + "&DOCDT=" + $("#DOCDT").val(),
            success: function (result) {
                @*window.open("@Url.Action("Rep_OrdPrint", "Rep_OrdPrint", new { US = Model.UNQSNO_ENCRYPTED })", "_blank")*@
                window.open("@Url.Action("SaleBill_Print", "SaleBill_Print", new { US = Model.UNQSNO_ENCRYPTED })", "_blank")
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>

@section Scripts {
    <script>
        function ReloadWithData() {
            var searchValue = $('#AUTONO').val();
            var url = window.location.href;
            var key1 = "searchValue";
            url = updateQueryStringParameter(url, key1, searchValue);
            url = updateQueryStringParameter(url, "loadOrder", "Y");
            window.location = url;
        }
        function ReloadWithPSLIP() {
            var searchValue = $('#LINKAUTONO').val();
            var searchValue1 = $('#LINKDOCNO').val();
            var url = window.location.href;
            var key1 = "searchValue";
            url = updateQueryStringParameter(url, key1, searchValue);
            url = updateQueryStringParameter(url, "loadOrder", searchValue1);
            window.location = url;
        }
    </script>
}
@using (Html.BeginForm())
{
    if (Model.DefaultView == true)
    {
        @Html.HiddenFor(a => Model.maxdate)
        @Html.HiddenFor(a => Model.mindate)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" id="btnSave" value="@Url.Action("SAVE", PageControllerName)" />
        <input type="hidden" id="srhpnl" value="@Url.Action("SearchPannelData", PageControllerName)" />
        <input type="hidden" id="partylinkcd" value="D" />
        <input type="hidden" id="agentlinkcd" value="A" />
        <input type="hidden" id="courierlinkcd" value="U" />
        <input type="hidden" id="trnsportlinkcd" value="T" />
        <input type="hidden" id="slcd_tag" value="Party" />
        @Html.HiddenFor(s => s.DefaultAction)
        @Html.HiddenFor(a => a.T_TXN.AUTONO, new { id = "AUTONO" })
        @Html.HiddenFor(a => a.T_CNTRL_HDR.MNTHCD)
        @Html.HiddenFor(a => a.T_CNTRL_HDR.EMD_NO)
        <div class="form-horizontal">
            @if (Model.DefaultAction == "V")
            {
                @Html.Partial("_FilteredSearch")
            }
            <div class="row" style="margin-top: 5px;">
                <div class="row">
                    <div class="col-md-5" style="margin-top: 6px;">
                        <div class="editor-label">
                            @Html.Label("", "Document Code")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="editor-field">
                            @if (Model.DefaultAction == "A")
                    {
                                @Html.DropDownListFor(model => model.T_TXN.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", @onchange = "ChangeDoctype();" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.T_TXN.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", style = "pointer-events:none;background-color:#eee" })
                            }
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Document Date")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.DOCDT, new { htmlAttributes = new { @class = "form-control", id = "DOCDT", onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy", maxlength = 10 } })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Document No.")
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.DOCNO, new { htmlAttributes = new { @class = "form-control", id = "DOCNO", @placeholder = "Doc. No.", maxlength = 6, @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Bill Type")
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.T_TXNOTH.BLTYPE, new SelectList(Model.BL_TYPE, "Value", "Text"), " ", new { @class = "form-control", id = "BLTYPE" })
                        </div>

                    </div>

                </div>
                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Party Code")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.SLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=slarea=3/GSTNO=gstno=2/TAXGRPCD=TAXGRPCD/PRCCD=PRCCD/PRCNM=PRCNM/AGSLCD=AGSLCD/AGSLNM=AGSLNM/DUEDAYS=crdays/PSLCD=PSLCD','slcd_tag/DOCDT')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=slarea=3/GSTNO=gstno=2/TAXGRPCD=TAXGRPCD/PRCCD=PRCCD/PRCNM=PRCNM/AGSLCD=AGSLCD/AGSLNM=AGSLNM/DUEDAYS=crdays/PSLCD=PSLCD','slcd_tag/DOCDT');", @placeholder = "Code", maxlength = 8 } })
                            <img src="~/Image/search.png" id="PARTY_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=slarea=3/GSTNO=gstno=2/TAXGRPCD=TAXGRPCD/PRCCD=PRCCD/PRCNM=PRCNM/AGSLCD=AGSLCD/AGSLNM=AGSLNM/DUEDAYS=crdays/PSLCD=PSLCD','slcd_tag/DOCDT')" />
                            @Html.HiddenFor(model => Model.PSLCD, new { htmlAttributes = new { @class = "form-control", id = "PSLCD" } })
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.SLNM, new { htmlAttributes = new { @class = "form-control", id = "SLNM", maxlength = 45, @title = "Party Name", @placeholder = "Party Name", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.SLAREA, new { htmlAttributes = new { @class = "form-control", id = "SLAREA", @title = "Area", @placeholder = "Area", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.GSTNO, new { htmlAttributes = new { @class = "form-control", id = "GSTNO", @title = "GST No", @placeholder = "GST No.", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXNOTH.TAXGRPCD, new { htmlAttributes = new { @class = "form-control", id = "TAXGRPCD", @title = "Tax Group Code", @placeholder = "Tax Group Code", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>

                    <div class="col-md-1" style="width:auto;">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Due Days")
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.DUEDAYS, new { htmlAttributes = new { @class = "form-control", id = "DUEDAYS", maxlength = 3, @placeholder = "Due Days" } })
                        </div>
                    </div>

                </div>
                @if (Model.MENU_PARA == "SB")
                {
                    <div class="row">
                        <div class="col-md-5">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Packing Slip No.")
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="editor-field">
                                @if (Model.DefaultAction == "A")
                                {
                                    @Html.EditorFor(model => model.LINKDOCNO, new { htmlAttributes = new { @class = "form-control textbox_image", id = "LINKDOCNO", onkeydown = "GetHelpBlur('" + @Url.Action("GetPackingSlip", PageControllerName) + "','Consignee Details','LINKDOCNO','LINKDOCNO=docno=0/LINKAUTONO=autono=3','LINKAUTONO/DOCDT/SLCD')", onblur = "GetHelpBlur('" + @Url.Action("GetPackingSlip", PageControllerName) + "','Consignee Details','LINKDOCNO','LINKDOCNO=docno=0/LINKAUTONO=autono=3','LINKAUTONO/DOCDT/SLCD');", @placeholder = "No", maxlength = 30 } })
                                    <img src="~/Image/search.png" id="PACKSLIP_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetPackingSlip", PageControllerName)','Consignee Details','LINKDOCNO','LINKDOCNO=docno=0/LINKAUTONO=autono=3','LINKAUTONO/DOCDT/SLCD')" />
                                }
                                else
                                {
                                    @Html.EditorFor(model => model.LINKDOCNO, new { htmlAttributes = new { @class = "form-control", id = "LINKDOCNO", @title = "Area", @placeholder = "No", @readonly = "readonly", tabindex = "-1" } })
                                }
                                @Html.HiddenFor(model => model.T_TXN_LINKNO.LINKAUTONO, new { id = "LINKAUTONO" })
                            </div>
                        </div>
                        @if (Model.DefaultAction == "A")
                        {
                            <div class="col-md-1" style="width:auto;">
                                <input type="button" class="btn btn-success" style="margin-top: 2px;padding: 2px 7px 1px 7px;" name="GetPackingSlip" value="Get Packing Slip" title="Click to Get Packing Slip" onclick="ReloadWithPSLIP()" />
                            </div>
                        }
                    </div>
                }
            </div>
            <div class="row" style="margin-top:5px;">
                <ul class="nav nav-tabs">
                    <li id="Main_LI4" class="active"><a data-toggle="tab" href="#Main" accesskey="M">Main(M)</a></li>
                    <li id="BarCodeTab_LI4" class=""><a data-toggle="tab" href="#BarCodeTab" accesskey="B">Bar Code(B)</a></li>
                    <li id="Detail_LI4" class=""><a data-toggle="tab" href="#DetailTab" accesskey="D">Detail(D)</a></li>
                    <li id="Amounts_LI" class=""><a data-toggle="tab" href="#FreightOthers" onclick="OpenAmount();" accesskey="F">Freight & Others(F)</a></li>
                    <li id="Transport_LI" class=""><a data-toggle="tab" href="#Transport" accesskey="T">Transport(T)</a></li>
                    <li id="OtherAddress_LI" class=""><a data-toggle="tab" href="#OtherAddress">Other Address</a></li>
                    @*@if (Model.MENU_PARA == "SO")
                        {
                        <li id="StockTransfer_LI" class=""><a data-toggle="tab" href="#StockTransfer">Stock Out</a></li>
                        }
                        else if (Model.MENU_PARA == "SI")
                        {*@
                    <li id="StockTransfer_LI" class=""><a data-toggle="tab" href="#StockTransfer">Stock In</a></li>
                    @*}*@
                    <li id="Remarks_LI4" class=""><a data-toggle="tab" href="#Remarks" accesskey="R">Remarks (R)</a></li>
                    <li id="Documents_LI4" class=""><a data-toggle="tab" href="#Documents" accesskey="U">Documents(U)</a></li>
                </ul>
                <div class="tab-content">
                    <div id="Main" class="tab-pane fade in active" style="margin-top: 5px;">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Consignee Code")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXN.CONSLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "CONSLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Consignee Details','CONSLCD','CONSLCD=slcd=1/CONSLNM=slnm=0')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Consignee Details','CONSLCD','CONSLCD=slcd=1/CONSLNM=slnm=0');", @placeholder = "Code", maxlength = 8 } })
                                    <img src="~/Image/search.png" id="SLCD_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Consignee Details','CONSLCD','CONSLCD=slcd=1/CONSLNM=slnm=0')" />
                                    @*@Html.HiddenFor(model => model.CONSLNM, new { id = "CONSLNM" })*@
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.CONSLNM, new { htmlAttributes = new { @class = "form-control", id = "CONSLNM", maxlength = 45, @title = "Consignee Name", @placeholder = "Consignee Name", @TabIndex = -1, @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Agent")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.AGSLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "AGSLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Agent Details','AGSLCD','AGSLCD=slcd=1/AGSLNM=slnm=0','agentlinkcd')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Agent Details','AGSLCD','AGSLCD=slcd=1/AGSLNM=slnm=0','agentlinkcd');", @placeholder = "Code", maxlength = 8 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Agent Details','AGSLCD','AGSLCD=slcd=1/AGSLNM=slnm=0','agentlinkcd')" />
                                    @*@Html.HiddenFor(model => model.AGSLNM, new { id = "AGSLNM" })*@
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.AGSLNM, new { htmlAttributes = new { @class = "form-control", id = "AGSLNM", maxlength = 45, @title = "Agent Name", @placeholder = "Agent Name", @readonly = "readonly", tabindex = "-1" } })
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Sub Agent")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.SAGSLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SAGSLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Sub Agent Details','SAGSLCD','SAGSLCD=slcd=1/SAGSLNM=slnm=0','agentlinkcd/AGSLCD')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Sub Agent Details','SAGSLCD','SAGSLCD=slcd=1/SAGSLNM=slnm=0','agentlinkcd/AGSLCD');", @placeholder = "Code", maxlength = 8 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Sub Agent Details','SAGSLCD','SAGSLCD=slcd=1/SAGSLNM=slnm=0','agentlinkcd/AGSLCD')" />
                                    @*@Html.HiddenFor(model => model.SAGSLNM, new { id = "SAGSLNM" })*@
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.SAGSLNM, new { htmlAttributes = new { @class = "form-control", id = "SAGSLNM", maxlength = 45, @title = "Sub Agent Name", @placeholder = "Sub Agent Name", @readonly = "readonly", tabindex = "-1" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Godown")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXN.GOCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "GOCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetGodownDetails", PageControllerName) + "','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetGodownDetails", PageControllerName) + "','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0');", @placeholder = "Code", maxlength = 6 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetGodownDetails", PageControllerName)','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0')" />
                                    @*@Html.HiddenFor(model => model.GONM, new { id = "GONM" })*@
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.GONM, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @title = "Godown Name", @placeholder = "Godown Name", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Price Code")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.PRCCD, new { htmlAttributes = new { @class = "form-control", id = "PRCCD", @TabIndex = -1, @title = "Only for View", @placeholder = "Code", @readonly = "readonly" } })
                                    @*@Html.EditorFor(model => model.T_TXNOTH.PRCCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "PRCCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetPriceDetails", PageControllerName) + "','Price Details','PRCCD','PRCCD=PRCCD=1/PRCNM=PRCNM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetPriceDetails", PageControllerName) + "','Price Details','PRCCD','PRCCD=PRCCD=1/PRCNM=PRCNM=0');", @placeholder = "Code", maxlength = 4 } })
                                        <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetPriceDetails", PageControllerName)','Price Details','PRCCD','PRCCD=PRCCD =1/PRCNM =PRCNM =0')" />*@
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.PRCNM, new { htmlAttributes = new { @class = "form-control", id = "PRCNM", @TabIndex = -1, @title = "Price List Name", @placeholder = "Price List Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Select By")
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.SELBY, new { htmlAttributes = new { @class = "form-control", id = "SELBY", @placeholder = "Select By", maxlength = 50, @list = "SelectBy_List" } })
                                    <datalist id="SelectBy_List">
                                        @foreach (var jg in Model.Database_Combo1)
                                        {
                                            <option value="@jg.FIELD_VALUE" />
                                        }
                                    </datalist>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-field" style="margin-top: 6px;">
                                    @Html.Label("", "Packed By")
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @*@Html.EditorFor(model => model.T_TXNOTH.PACKBY, new { htmlAttributes = new { @class = "form-control", id = "PACKBY", maxlength = 50, @placeholder = "Packed By" } })*@
                                    @Html.EditorFor(model => model.T_TXNOTH.PACKBY, new { htmlAttributes = new { @class = "form-control", id = "PACKBY", @placeholder = "Packed By", maxlength = 50, @list = "PackedBy_List" } })
                                    <datalist id="PackedBy_List">
                                        @foreach (var jg in Model.Database_Combo3)
                                        {
                                            <option value="@jg.FIELD_VALUE" />
                                        }
                                    </datalist>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Deal By")
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.DEALBY, new { htmlAttributes = new { @class = "form-control", id = "DEALBY", @placeholder = "Deal By", maxlength = 50, @list = "DealBy_List" } })
                                    <datalist id="DealBy_List">
                                        @foreach (var jg in Model.Database_Combo2)
                                        {
                                            <option value="@jg.FIELD_VALUE" />
                                        }
                                    </datalist>
                                </div>
                            </div>
                            @if (Model.MENU_PARA == "PB")
                    {
                                <div class="col-md-1">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXN.WPPER, new { htmlAttributes = new { @class = "form-control", id = "WPPER", @onkeypress = "return numericOnly(this,2);", maxlength = 6, @placeholder = "WPPER", @title = "WPPER" } })
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXN.RPPER, new { htmlAttributes = new { @class = "form-control", id = "RPPER", @onkeypress = "return numericOnly(this,2);", maxlength = 6, @placeholder = "RPPER", @title = "RPPER" } })
                                    </div>
                                </div>
                            }
                        </div>

                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Total Nos.")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TOTNOS, new { htmlAttributes = new { @class = "form-control", id = "TOTNOS", @style = "text-align: right;", @TabIndex = -1, @placeholder = "Qnty Nos", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Total Qnty")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TOTQNTY, new { htmlAttributes = new { @class = "form-control", id = "TOTQNTY", @style = "text-align: right;", @TabIndex = -1, @placeholder = "Quantity", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Taxable Value")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TOTTAXVAL, new { htmlAttributes = new { @class = "form-control", id = "TOTTAXVAL", @style = "text-align: right;", @TabIndex = -1, @placeholder = "Taxable Value", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Total Tax")
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TOTTAX, new { htmlAttributes = new { @class = "form-control", id = "TOTTAX", @style = "text-align: right;", @TabIndex = -1, @placeholder = "Total Tax", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Reverse Charge")
                                </div>
                            </div>
                            <div class="col-md-7" style="width:auto;">
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => Model.T_TXN.REVCHRG, new SelectList(Model.Reverse_Charge, "Value", "Text", Model.T_TXN.REVCHRG), "No", new { @class = "form-control", id = "REVCHRG", onchange = "ReverceCharges();" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "TCS %")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXN.TCSPER, "{0:0.000}", new { htmlAttributes = new { @class = "form-control", id = "TCSPER", maxlength = 5, @placeholder = "TCS %", onblur = "BillAmountCalculate();" } })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXN.TCSAMT, new { htmlAttributes = new { @class = "form-control", id = "TCSAMT", maxlength = 15, @TabIndex = -1, @placeholder = "TCS Amount", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-1" style="width:auto;">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "TCS ON")
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXN.TCSON, new { htmlAttributes = new { @class = "form-control", id = "TCSON", maxlength = 15, @TabIndex = -1, @placeholder = "TCS on", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "TCS Head")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXN.TDSCODE, new { htmlAttributes = new { @class = "form-control textbox_image", id = "TDSCODE", onkeyup = "GetHelp_WithId('" + @Url.Action("GetTDSDetails", PageControllerName) + "','TDSCODE/TDSNM/TCSPER','1/0/2','TCS Details','TDSCODE',DOCDT.value)", onblur = "SelectTDSCode(this.value,TDSCODE,TDSNM,TCSPER);", @placeholder = "Code", maxlength = 3, onchange = "BillAmountCalculate();" } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onclick="GetHelp('@Url.Action("GetTDSDetails", PageControllerName)','TDSCODE/TDSNM/TCSPER','1/0/2','TCS Details','TDSCODE',DOCDT.value)" />
                                </div>
                                <input id="TDSAMTCAL" type="hidden" />
                            </div>
                            <div class="col-md-9">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TDSNM, new { htmlAttributes = new { @class = "form-control", id = "TDSNM", @placeholder = "TDS Name", @TabIndex = -1, @readonly = "readonly", @title = "Only for View" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Rounded off")
                                </div>
                            </div>
                            <div class="col-md-1" style="margin-right: -41px;">
                                <div class="editor-field" style="margin-top:6px;">
                                    @Html.CheckBoxFor(model => model.RoundOff, new { id = "RoundOff", onclick = "BillAmountCalculate();" })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXN.ROAMT, new { htmlAttributes = new { @class = "form-control", id = "ROAMT", maxlength = 6, @TabIndex = -1, @placeholder = "Rounded off", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Bill Amount")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXN.BLAMT, new { htmlAttributes = new { @class = "form-control", id = "BLAMT", maxlength = 14, @TabIndex = -1, @placeholder = "Bill Amount", @readonly = "readonly", @style = "font-weight:bold;font-size:15px;text-align:right" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5" style="margin-top: 6px;">
                                <div class="editor-label">
                                    @Html.Label("", "Barcode")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.T_TXN.BARGENTYPE, new SelectList(Model.BARGEN_TYPE, "Value", "Text"), new { @class = "form-control", id = "BARGENTYPE" })
                                </div>
                            </div>

                        </div>
                        <div class="row">
                            @if (Model.MENU_PARA == "PB")
                    {
                                <div class="col-md-5">
                                    <div class="editor-field" style="margin-top: 6px;">
                                        @Html.Label("", "Purchase bill no")
                                        <b style="color:Red;">*</b>
                                    </div>
                                </div>
                                <div class="col-md-10">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXN.PREFNO, new { htmlAttributes = new { @class = "form-control", id = "PREFNO", maxlength = 16, @placeholder = "PREFNO" } })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="editor-field" style="margin-top: 6px;">
                                        @Html.Label("", "Purchase bill dt")
                                        <b style="color:Red;">*</b>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXN.PREFDT, new { htmlAttributes = new { @class = "form-control", id = "PREFDT", onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy", maxlength = 10 } })
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-field" style="margin-top: 6px;">
                                    @Html.Label("", "Party Order No")
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.POREFNO, new { htmlAttributes = new { @class = "form-control", id = "POREFNO", maxlength = 30, @placeholder = "POREFNO" } })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field" style="margin-top: 6px;">
                                    @Html.Label("", "Party Order dt")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.POREFDT, new { htmlAttributes = new { @class = "form-control", id = "POREFDT", onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy", maxlength = 10 } })
                                </div>
                            </div>
                        </div>

                    </div>
                    <div id="BarCodeTab" class="tab-pane fade" style="margin-top: 5px;">
                        <div class="row">

                            <div class="row">
                                @if (Model.DefaultAction != "V" && Model.MENU_PARA != "SB")
                                {
                                    <div class="col-md-1">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "Bar Code")
                                            <b style="color:Red;">*</b>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.BARCODE, new { htmlAttributes = new { @class = "form-control textbox_image", id = "BARCODE", onkeydown = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','BARCODE','BARCODE=BARNO=0','DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD')", onblur = "GetBarnoDetails(this.value);", @placeholder = "Bar Code", maxlength = 25 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetBarCodeDetails", PageControllerName)','Bar Code Details','BARCODE','BARCODE=BARNO=0','DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD')" />
                                        </div>
                                    </div>
                                }

                                @*<div class="col-md-8">
                                        <input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;" name="GetBarCode" value="Get BarCode Detail" title="Click to Get BarCode Detail" />
                                    </div>*@
                                @*<div class="col-md-4">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "Material Job Code")
                                        </div>
                                    </div>
                                    <div class="col-md-6" style="margin-top:5px;width:auto;height:60px; overflow:auto;border:5px groove;">

                                    </div>*@
                            </div>

                            @if (Model.DefaultAction != "V" && Model.MENU_PARA != "SB")
                    {
                                <div class="row">
                                    <div class="col-lg-11">
                                        <div class="row">
                                            <div class="col-md-1">
                                                <div class="editor-field">
                                                    @Html.HiddenFor(model => model.SLNO, new { id = "SLNO" })
                                                    @Html.EditorFor(model => model.TXNSLNO, new { htmlAttributes = new { @class = "form-control", id = "TXNSLNO", maxlength = 4, @onkeypress = "return numericOnly(this);", onkeydown = "FillBarcodeArea('', 'COPYLROW')", @placeholder = "Bill Sl", @title = "Bill Sl" } })
                                                </div>
                                            </div>
                                            <div class="col-md-1">
                                                <div class="editor-field">
                                                    @Html.TextBoxFor(model => Model.ITGRPCD, new { id = "ITGRPCD", maxlength = 4, onkeydown = "GetHelpBlur('" + @Url.Action("GetItemGroupDetails", PageControllerName) + "','Item Group Details','ITGRPCD','ITGRPCD=ITGRPCD=1/ITGRPNM=ITGRPNM=0/BARGENTYPETEMP=BARGENTYPE/ITCD=ITCD/GLCD=GLCD','ITCD'),FillBarcodeArea('', 'COPYLROW')", @class = "form-control textbox_image", onblur = "GetHelpBlur('" + @Url.Action("GetItemGroupDetails", PageControllerName) + "','Item Group Details','ITGRPCD','ITGRPCD=ITGRPCD=1/ITGRPNM=ITGRPNM=0/BARGENTYPETEMP=BARGENTYPE/ITCD=ITCD/GLCD=GLCD','ITCD');", @onchange = "ItcdClr();", @placeholder = "Item Group Code", @title = "Item Group Code" })
                                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetItemGroupDetails", PageControllerName)','Item Group Details','ITGRPCD','ITGRPCD=ITGRPCD=1/ITGRPNM=ITGRPNM=0/BARGENTYPETEMP=BARGENTYPE/ITCD=ITCD/GLCD=GLCD','ITCD')" />
                                                    <input type="hidden" id="BARGENTYPETEMP" value="" />
                                                    @*@Html.HiddenFor(model => model.ITGRPNM, new { id = "ITGRPNM" })*@
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.ITGRPNM, new { htmlAttributes = new { @class = "form-control", id = "ITGRPNM", @title = "Item Group Name", @placeholder = "Item Group Name", @readonly = "readonly", @TabIndex = -1 } })
                                                </div>
                                            </div>
                                            <div class="col-md-1">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.MTRLJOBCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "MTRLJOBCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetMaterialJobDetails", PageControllerName) + "','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0/MTBARCODE=MTBARCODE')", onblur = "GetHelpBlur('" + @Url.Action("GetMaterialJobDetails", PageControllerName) + "','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0/MTBARCODE=MTBARCODE');GetAllMtrljobcd();", @placeholder = "Material Job Code", maxlength = 2, @title = "Material Job Code" } })
                                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetMaterialJobDetails", PageControllerName)','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0/MTBARCODE=MTBARCODE')" />
                                                    @Html.HiddenFor(model => model.MTRLJOBNM, new { id = "MTRLJOBNM" })
                                                    @Html.HiddenFor(model => model.MTBARCODE, new { id = "MTBARCODE" })
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.ITCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "ITCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetItemDetails", PageControllerName) + "','Item Details','ITCD','ITCD=itcd=2/ITSTYLE=ITSTYLE=1/UOM=uomcd=3/STYLENO=styleno=0/ITGRPCD=itgrpcd=5/ITGRPNM=itgrpnm=4/HSNCODE=hsncode/PRODGRPGSTPER=PRODGRPGSTPER/ALL_GSTPER=ALL_GSTPER/GSTPER=GSTPER','ITGRPCD/DOCDT/TAXGRPCD/GOCD/PRCCD/MTRLJOBCD/BARCODE/RATE'),FillBarcodeArea('', 'COPYLROW')", onblur = "GetHelpBlur('" + @Url.Action("GetItemDetails", PageControllerName) + "','Item Details','ITCD','ITCD=itcd=2/ITSTYLE=ITSTYLE=1/UOM=uomcd=3/STYLENO=styleno=0/ITGRPCD=itgrpcd=5/ITGRPNM=itgrpnm=4/HSNCODE=hsncode/PRODGRPGSTPER=PRODGRPGSTPER/ALL_GSTPER=ALL_GSTPER/GSTPER=GSTPER','ITGRPCD/DOCDT/TAXGRPCD/GOCD/PRCCD/MTRLJOBCD/BARCODE/RATE');", @placeholder = "Item Code", maxlength = 8, @title = "Item Code" } })
                                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetItemDetails", PageControllerName)','Item Details','ITCD','ITCD=itcd=2/ITSTYLE=ITSTYLE=1/UOM=uomcd=3/STYLENO=styleno=0/ITGRPCD=itgrpcd=5/ITGRPNM=itgrpnm=4/HSNCODE=hsncode/PRODGRPGSTPER=PRODGRPGSTPER/ALL_GSTPER=ALL_GSTPER/GSTPER=GSTPER','ITGRPCD/DOCDT/TAXGRPCD/GOCD/PRCCD/MTRLJOBCD/BARCODE/RATE')" />

                                                    @*@Html.EditorFor(model => model.ITCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "ITCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetItemDetails", PageControllerName) + "','Item Details','ITCD','ITCD=itcd=2/ITSTYLE=ITSTYLE=1/UOM=uomcd=3/STYLENO=styleno=0/ITGRPCD=itgrpcd=5/ITGRPNM=itgrpnm=4/HSNCODE=hsncode','ITGRPCD'),FillBarcodeArea('', 'COPYLROW')", onblur = "GetHelpBlur('" + @Url.Action("GetItemDetails", PageControllerName) + "','Item Details','ITCD','ITCD=itcd=2/ITSTYLE=ITSTYLE=1/UOM=uomcd=3/STYLENO=styleno=0/ITGRPCD=itgrpcd=5/ITGRPNM=itgrpnm=4/HSNCODE=hsncode','ITGRPCD');", @placeholder = "Item Code", maxlength = 8, @title = "Item Code" } })
                                                        <img src="~/Image/search.png" id="SLCD_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetItemDetails", PageControllerName)','Item Details','ITCD','ITCD=itcd =2/ITSTYLE =ITSTYLE =1/UOM =uomcd =3/STYLENO =styleno =0/ITGRPCD =itgrpcd =5/ITGRPNM =itgrpnm =4/HSNCODE =hsncode','ITGRPCD')" />*@
                                                    @Html.HiddenFor(model => model.STYLENO, new { id = "STYLENO" })
                                                </div>
                                            </div>
                                            @*<div class="col-md-8">
                                                    <div class="editor-field">
                                                        @Html.EditorFor(model => model.ITNM, new { htmlAttributes = new { @class = "form-control", id = "ITNM", maxlength = 30, @title = "Only for View", @placeholder = "Item Name", @readonly = "readonly", @TabIndex = -1 } })
                                                    </div>
                                                </div>*@
                                            <div class="col-md-7">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.ITSTYLE, new { htmlAttributes = new { @class = "form-control", id = "ITSTYLE", maxlength = 30, @title = "Design", @placeholder = "Design", @readonly = "readonly", @TabIndex = -1 } })
                                                </div>
                                            </div>

                                            @*<div class="col-md-3">
                                                    <div class="editor-field">
                                                        @Html.EditorFor(model => model.FABITCD, new { htmlAttributes = new { @class = "form-control", id = "FABITCD", maxlength = 8, @title = "Only for View", @placeholder = "Fabric Item Code", @readonly = "readonly", @TabIndex = -1 } })
                                                        @Html.HiddenFor(model => model.FABITNM, new { id = "FABITNM" })
                                                    </div>
                                                </div>*@
                                            <div class="col-md-4">
                                                <div class="editor-field">
                                                    @*@Html.EditorFor(model => model.STKTYPE, new { htmlAttributes = new { @class = "form-control textbox_image", id = "STKTYPE", onkeydown = "GetHelpBlur('" + @Url.Action("GetStockDetails", PageControllerName) + "','Stock Details','STKTYPE','STKTYPE=STKTYPE=1/STKNAME=STKNAME=0')", onblur = "GetHelpBlur('" + @Url.Action("GetStockDetails", PageControllerName) + "','Stock Details','STKTYPE','STKTYPE=STKTYPE=1/STKNAME=STKNAME=0');", @placeholder = "Stock Type", maxlength = 1 } })
                                                        <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetStockDetails", PageControllerName)','Stock Details','STKTYPE','STKTYPE=STKTYPE =1/STKNAME =STKNAME =0')" />
                                                        @Html.HiddenFor(model => model.STKNAME, new { id = "STKNAME" })*@
                                                    @Html.DropDownListFor(model => model.STKTYPE, new SelectList(Model.DropDown_list_StkType, "Value", "Text"), new { @class = "form-control", id = "STKTYPE", @title = "Stock Type" })
                                                </div>
                                            </div>
                                            <div class="col-md-1">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.PARTCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "PARTCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetPartDetails", PageControllerName) + "','Part Details','PARTCD','PARTCD=PARTCD=1/PARTNM=PARTNM=0/PRTBARCODE=PRTBARCODE')", onblur = "GetHelpBlur('" + @Url.Action("GetPartDetails", PageControllerName) + "','Part Details','PARTCD','PARTCD=PARTCD=1/PARTNM=PARTNM=0/PRTBARCODE=PRTBARCODE');", @placeholder = "Part Code", maxlength = 4, @title = "Part Code" } })
                                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetPartDetails", PageControllerName)','Part Details','PARTCD','PARTCD=PARTCD=1/PARTNM=PARTNM=0/PRTBARCODE=PRTBARCODE')" />
                                                    @Html.HiddenFor(model => model.PARTNM, new { id = "PARTNM" })
                                                    @Html.HiddenFor(model => model.PRTBARCODE, new { id = "PRTBARCODE" })
                                                </div>
                                            </div>
                                            <div class="col-md-1">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.COLRCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "COLRCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetColorDetails", PageControllerName) + "','Color Details','COLRCD','COLRCD=COLRCD=1/COLRNM=COLRNM=0/CLRBARCODE=CLRBARCODE')", onblur = "GetHelpBlur('" + @Url.Action("GetColorDetails", PageControllerName) + "','Color Details','COLRCD','COLRCD=COLRCD=1/COLRNM=COLRNM=0/CLRBARCODE=CLRBARCODE');", @placeholder = "Color Code", maxlength = 4, @title = "Color Code" } })
                                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetColorDetails", PageControllerName)','Color Details','COLRCD','COLRCD=COLRCD=1/COLRNM=COLRNM=0/CLRBARCODE=CLRBARCODE')" />
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.COLRNM, new { htmlAttributes = new { @class = "form-control", id = "COLRNM", @title = "Color Name", @placeholder = "Color Name", @readonly = "readonly", @TabIndex = -1 } })
                                                    @Html.HiddenFor(model => model.CLRBARCODE, new { id = "CLRBARCODE" })
                                                </div>
                                            </div>
                                            <div class="col-md-1">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.SIZECD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SIZECD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSizeDetails", PageControllerName) + "','Size Details','SIZECD','SIZECD=SIZECD=1/SIZENM=SIZENM=0/SZBARCODE=SZBARCODE')", onblur = "GetHelpBlur('" + @Url.Action("GetSizeDetails", PageControllerName) + "','Size Details','SIZECD','SIZECD=SIZECD=1/SIZENM=SIZENM=0/SZBARCODE=SZBARCODE');", @placeholder = "Size Code", maxlength = 4, @title = "Size Code" } })
                                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSizeDetails", PageControllerName)','Size Details','SIZECD','SIZECD=SIZECD=1/SIZENM=SIZENM=0/SZBARCODE=SZBARCODE')" />
                                                    @Html.HiddenFor(model => model.SIZENM, new { id = "SIZENM" })
                                                    @Html.HiddenFor(model => model.SZBARCODE, new { id = "SZBARCODE" })
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.PDESIGN, new { htmlAttributes = new { @class = "form-control", id = "PDESIGN", @placeholder = "pdesign", @title = "Pdesign" } })
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="col-md-1">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.BALSTOCK, new { htmlAttributes = new { @class = "form-control", id = "BALSTOCK", @onkeypress = "return numericOnly(this,2);", maxlength = 12, @placeholder = "Stock", @readonly = "readonly", @TabIndex = -1, @title = "Stock" } })
                                                </div>
                                            </div>


                                            <div class="col-md-1">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.QNTY, new { htmlAttributes = new { @class = "form-control", id = "QNTY", @onkeypress = "return numericOnly(this,3);", maxlength = 12, @placeholder = "Quantity", @title = "Quantity" } })
                                                </div>
                                            </div>
                                            <div class="col-md-1">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.UOM, new { htmlAttributes = new { @class = "form-control", id = "UOM", maxlength = 30, @title = "UOM", @placeholder = "UOM", @readonly = "readonly", @TabIndex = -1 } })
                                                </div>
                                            </div>
                                            <div class="col-md-1">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.NOS, new { htmlAttributes = new { @class = "form-control", id = "NOS", @onkeypress = "return numericOnly(this,3);", maxlength = 12, @placeholder = "Nos", @title = "Nos" } })
                                                </div>
                                            </div>
                                            <div class="col-md-1">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.FLAGMTR, new { htmlAttributes = new { @class = "form-control", id = "FLAGMTR", @onkeypress = "return numericOnly(this,2);", maxlength = 8, @placeholder = "FLAGMTR", @title = "FLAGMTR" } })
                                                </div>
                                            </div>
                                            <div class="col-md-1">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.RATE, new { htmlAttributes = new { @class = "form-control", id = "RATE", @onkeypress = "return numericOnly(this,2);", maxlength = 14, @title = "Rate", @placeholder = "Rate", @onchange = "GetGstPer('','');" } })
                                                </div>
                                            </div>
                                            <div class="col-md-1">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.DISCRATE, new { htmlAttributes = new { @class = "form-control", id = "DISCRATE", @onkeypress = "return numericOnly(this,2);", maxlength = 10, @placeholder = "Disc. Rate", @title = "Disc. Rate" } })
                                                </div>
                                            </div>
                                            <div class="col-md-1">
                                                <div class="editor-field">
                                                    @Html.DropDownListFor(model => model.DISCTYPE, new SelectList(Model.DISC_TYPE, "Value", "Text"), new { @class = "form-control", id = "DISCTYPE", @title = "Disc. Type" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="editor-field">
                                                    @*@Html.DropDownListFor(model => model.HSNCODE, new SelectList(Model.HSN_CODE, "Value", "Text"), new { @class = "form-control", id = "HSNCODE" })*@
                                                    @Html.EditorFor(model => model.HSNCODE, new { htmlAttributes = new { @class = "form-control", id = "HSNCODE", maxlength = 30, @title = "Hsncode", @placeholder = "Hsncode" } })
                                                </div>
                                            </div>
                                            <div class="col-md-1">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.GSTPER, new { htmlAttributes = new { @class = "form-control", id = "GSTPER", @onkeypress = "return numericOnly(this,2);", maxlength = 5, @placeholder = "GSTPER", @readonly = "readonly", @TabIndex = -1, @title = "GSTPER" } })
                                                    @Html.HiddenFor(model => model.ALL_GSTPER, new { id = "ALL_GSTPER" })
                                                    @Html.HiddenFor(model => model.PRODGRPGSTPER, new { id = "PRODGRPGSTPER" })


                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="editor-field">
                                                    @Html.EditorFor(model => model.SHADE, new { htmlAttributes = new { @class = "form-control", id = "SHADE", maxlength = 15, @title = "Shade", @placeholder = "Shade" } })
                                                </div>
                                            </div>
                                            @if (Model.MENU_PARA == "PB")
                        {
                                                <div class="col-md-4">
                                                    <div class="editor-field">
                                                        @Html.EditorFor(model => model.OURDESIGN, new { htmlAttributes = new { @class = "form-control", id = "OURDESIGN", @placeholder = "OurDesign", maxlength = 30, @title = "OurDesign" } })
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-lg-1">
                                        <div class="editor-field" style="margin-top:5px;width:auto;height:60px; overflow:auto;border:5px groove;overflow-x: hidden;">
                                            <table id="exampleLT" border="1" style="width: auto;">
                                                @for (int i = 0; i < Model.DropDown_list_MTRLJOBCD.Count; i++)
                                                {
                                                    <tr>
                                                        <td align="center">
                                                            @Html.CheckBoxFor(model => model.DropDown_list_MTRLJOBCD[i].Checked, new { id = "MaterialJobChk_" + i, onclick = "GetAllMtrljobcd();" })
                                                        </td>
                                                        <td align="center">
                                                            @{ string STRC = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD.ToString();}
                                                            @Html.DisplayFor(model => STRC)
                                                            @Html.HiddenFor(model => model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD, new { id = "MaterialJobCode_" + i })
                                                        </td>
                                                        <td align="center">
                                                            @{ string STRC1 = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBNM.ToString();}
                                                            @Html.DisplayFor(model => STRC1)
                                                        </td>
                                                    </tr>
                                                                }
                                            </table>
                                        </div>
                                        @Html.HiddenFor(model => model.ALLMTRLJOBCD, new { id = "ALLMTRLJOBCD" })


                                    </div>
                                </div>


                                <div class="row">
                                    @if (Model.MENU_PARA == "PB" || 1 == 1)
                                    {
                                        <div class="col-md-8">
                                            <div class="editor-field">
                                                @Html.EditorFor(model => model.BALENO, new { htmlAttributes = new { @class = "form-control", id = "BALENO", maxlength = 30, @placeholder = "BALENO", @title = "BALENO" } })
                                                @Html.HiddenFor(model => model.BALEYR, new { id = "BALEYR" })
                                            </div>
                                        </div>
                                    }
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.DropDownListFor(model => model.TDDISCTYPE, new SelectList(Model.DISC_TYPE, "Value", "Text"), new { @class = "form-control", id = "TDDISCTYPE", @title = "Disc-1" })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.TDDISCRATE, new { htmlAttributes = new { @class = "form-control", id = "TDDISCRATE", @onkeypress = "return numericOnly(this,2);", maxlength = 10, @placeholder = "TDDISCRATE", @title = "Disc1 Rate" } })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.DropDownListFor(model => model.SCMDISCTYPE, new SelectList(Model.DISC_TYPE, "Value", "Text"), new { @class = "form-control", id = "SCMDISCTYPE", @title = "Disc2" })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.SCMDISCRATE, new { htmlAttributes = new { @class = "form-control", id = "SCMDISCRATE", @onkeypress = "return numericOnly(this,2);", maxlength = 10, @placeholder = "SCMDISCRATE", @title = "Disc2 Rate" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.LOCABIN, new { htmlAttributes = new { @class = "form-control textbox_image", id = "LOCABIN", onkeydown = "GetHelpBlur('" + @Url.Action("GetLocationBinDetails", PageControllerName) + "','Location Bin Details','LOCABIN','LOCABIN=LOCABIN=2')", onblur = "GetHelpBlur('" + @Url.Action("GetLocationBinDetails", PageControllerName) + "','SLocation Binize Details','LOCABIN','LOCABIN=LOCABIN=2');", @placeholder = "Location Bin", maxlength = 10, @title = "Location Bin" } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetLocationBinDetails", PageControllerName)','Location Bin Details','LOCABIN','LOCABIN=LOCABIN=2')" />
                                            @Html.HiddenFor(model => model.GLCD, new { id = "GLCD" })
                                        </div>
                                    </div>
                                    <div class="col-md-1" style="width:auto;">
                                        @*<input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;" id="AddRow_Barcode" accesskey="A" value="Add Row(A)" title="Click to Fill Data in Product Details" onclick="Add_BarCodeRow()" />*@
                                        <input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;" id="AddRow_Barcode" accesskey="A" value="Add Row(Alt+A)" title="Click to Fill Data in Barcode Details" onclick="AddBarCodeGrid()" />
                                        <input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;display:none;" id="UpdateRow_Barcode" accesskey="W" value="Update Row(Alt+W)" title="Click to Update Data in Barcode Details" onclick="UpdateBarCodeRow()" />
                                        <input type="button" class="btn btn-danger" style="margin-top: 2px;padding: 2px 7px 1px 7px;" id="Clear_Barcode" accesskey="Z" value="Clear(Z)" title="Click to Clear" onclick="ClearBarcodeArea('Y')" />
                                    </div>
                                    @*iamge*@
                                    <div class="col-md-1">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "Image Desc")
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            <input type="text" id="ImageDesc" value="" class="atextBoxFor" placeholder="Description" />
                                            <input type="hidden" id="ImageName" value="" />
                                            <input type="hidden" id="ImageStr" value="" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            <input type="file" class="form-control" name="Imageupload" accept="image/*" onchange="fileTypeCheck(this);" />
                                        </div>
                                    </div>
                                </div>
                                                                }

                            <div class="row">

                                <div class="col-md-3" style="width:auto;">

                                </div>
                            </div>
                            <div style="margin-top:4px;background-color:#c4b9b9;border:5px groove;">
                                <div id="partialdivBarCodeTab">
                                    @Html.Partial("_T_SALE_PRODUCT")
                                </div>
                                <div>
                                    <div id="popup" class="row" style="margin-top: 11px;top:15%;left:2%;right:2%;position:absolute;">
                                    </div>
                                </div>
                            </div>
                            @if (Model.DefaultAction != "V" && Model.MENU_PARA != "SB")
                    {
                                <div>
                                    <div class="row">
                                        <p class="text-info">* Press <b>F8</b> in Bill Sl./Item Group/Item Code (Bar code area) to copy last row of Bar Code Grid</p>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-1" style="width:auto;">
                                            <input type="button" class="btn btn-info" style="margin-top: 2px;padding: 2px 7px 1px 7px;" name="FillDetail" value="Refresh Detail Data" title="Click to Refresh Data in Details Tab" onclick="Fill_DetailData()" />
                                        </div>
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                    <div id="DetailTab" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                            <div>
                                <div id="partialdivDetail" style="margin-top:0px;">
                                    @Html.Partial("_T_SALE_DETAIL")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="FreightOthers" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                            <div>
                                <div id="partialdivAmounts" style="margin-top:0px;">
                                    @Html.Partial("_T_SALE_AMOUNT")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Transport" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Transporter")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.TRANSLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "TRANSLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Transporter Details','TRANSLCD','TRANSLCD=slcd=1/TRANSLNM=slnm=0','trnsportlinkcd')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Transporter Details','TRANSLCD','TRANSLCD=slcd=1/TRANSLNM=slnm=0','trnsportlinkcd');", @placeholder = "Code", maxlength = 8 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Transporter Details','TRANSLCD','TRANSLCD=slcd=1/TRANSLNM=slnm=0','trnsportlinkcd')" />
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TRANSLNM, new { htmlAttributes = new { @class = "form-control", id = "TRANSLNM", maxlength = 45, @TabIndex = -1, @placeholder = "Transporter Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Courier")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.CRSLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "CRSLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Courier Details','CRSLCD','CRSLCD=slcd=1/CRSLNM=slnm=0','courierlinkcd')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Courier Details','CRSLCD','CRSLCD=slcd=1/CRSLNM=slnm=0','courierlinkcd');", @placeholder = "Code", maxlength = 8 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Courier Details','CRSLCD','CRSLCD=slcd=1/CRSLNM=slnm=0','courierlinkcd')" />
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.CRSLNM, new { htmlAttributes = new { @class = "form-control", id = "CRSLNM", maxlength = 45, @TabIndex = -1, @placeholder = "Courier Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Eway Bill Number")
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.EWAYBILLNO, new { htmlAttributes = new { @class = "form-control", id = "EWAYBILLNO", maxlength = 20, @placeholder = "Eway Bill Number" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "LR Number")
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.LRNO, new { htmlAttributes = new { @class = "form-control", id = "LRNO", maxlength = 15, @placeholder = "LR Number" } })
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "LR Date")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.LRDT, new { htmlAttributes = new { @class = "form-control", id = "LRDT", maxlength = 10, onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Vechicle Number")
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.LORRYNO, new { htmlAttributes = new { @class = "form-control", id = "LORRYNO", maxlength = 16, @placeholder = "Vechicle Number" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Gross Weight")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.GRWT, new { htmlAttributes = new { @class = "form-control", id = "GRWT", onblur = "CalulateTareWt(GRWT,NTWT,TRWT);", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "Gross Weight" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Net Weight")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.NTWT, new { htmlAttributes = new { @class = "form-control", id = "NTWT", onblur = "CalulateTareWt(GRWT,NTWT,TRWT);", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "Net Weight" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Tare Weight")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.TRWT, new { htmlAttributes = new { @class = "form-control", id = "TRWT", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "Tare Weight", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Cases Nos.")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.CASENOS, new { htmlAttributes = new { @class = "form-control", id = "CASENOS", maxlength = 500, @placeholder = "Cases Nos" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "No of Cases")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.NOOFCASES, new { htmlAttributes = new { @class = "form-control", id = "NOOFCASES", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "No of Cases" } })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="OtherAddress" class="tab-pane fade" style="margin-top: 10px;">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Invoice Type")
                                </div>
                            </div>
                            <div class="col-md-7" style="width:auto;">
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.T_VCH_GST.INVTYPECD, new SelectList(Model.INVTYPE_list, "Value", "Text"), new { @class = "form-control", id = "INVTYPECD" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Export Type")
                                </div>
                            </div>
                            <div class="col-md-7" style="width:auto;">
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.T_VCH_GST.EXPCD, new SelectList(Model.EXPCD_list, "Value", "Text"), "", new { @class = "form-control", id = "EXPCD" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Ship Document Number")
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_VCH_GST.SHIPDOCNO, new { htmlAttributes = new { @class = "form-control", id = "SHIPDOCNO", maxlength = 16, @placeholder = "Ship Document No." } })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Ship Document Date")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_VCH_GST.SHIPDOCDT, new { htmlAttributes = new { @class = "form-control", id = "SHIPDOCDT", maxlength = 10, onblur = "DocumentDateCHK(this,true);", @placeholder = "dd/mm/yyyy" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Port Code")
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_VCH_GST.PORTCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "PORTCD", maxlength = 6, onkeyup = "GetHelp('" + @Url.Action("GetPORTCD", PageControllerName) + "','PORTCD/PORTNM','0/1','Port Details','PORTCD')", onblur = "SelectPortCode(this.value,PORTCD,PORTNM);", @placeholder = "Code" } })
                                    <img src="~/Image/search.png" width="20px" style="margin-top: 5px;" height="20px" class="Help_image_button" title="Help" onclick="GetHelp('@Url.Action("GetPORTCD", PageControllerName)','PORTCD/PORTNM','0/1','Port Details','PORTCD')" />
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.PORTNM, new { htmlAttributes = new { @class = "form-control", id = "PORTNM", maxlength = 20, @TabIndex = -1, @placeholder = "Currency Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Other Name,if any")
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.OTHNM, new { htmlAttributes = new { @class = "form-control", id = "OTHNM", maxlength = 50, @placeholder = "Other Name, if Any" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Address")
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.OTHADD1, new { htmlAttributes = new { @class = "form-control", id = "OTHADD1", maxlength = 50, @placeholder = "Address 1" } })
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.OTHADD2, new { htmlAttributes = new { @class = "form-control", id = "OTHADD2", maxlength = 50, @placeholder = "Address 2" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.OTHADD3, new { htmlAttributes = new { @class = "form-control", id = "OTHADD3", maxlength = 50, @placeholder = "Address 3" } })
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.OTHADD4, new { htmlAttributes = new { @class = "form-control", id = "OTHADD4", maxlength = 50, @placeholder = "Address 4" } })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="StockTransfer" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "From Location")
                                    <sup style="color:red">*</sup>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_STKTRNF.SLOCCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SLOCCD", onblur = "SelectLocationCode(this.value,SLOCCD,SLOCNM);", onkeyup = "GetHelp('" + @Url.Action("GetLocationDetails", PageControllerName) + "','SLOCCD/SLOCNM','1/0','From Location Name','SLOCCD')", @placeholder = "Loc code", maxlength = 4 } })
                                    <img src="~/Image/search.png" class="Help_image_button" width="20px" title="Help" onclick="GetHelp('@Url.Action("GetLocationDetails", PageControllerName )','SLOCCD/SLOCNM','1/0','From Location Name','SLOCCD')" />
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.SLOCNM, new { htmlAttributes = new { @class = "form-control", id = "SLOCNM", @placeholder = "Location Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "To Location")
                                    <sup style="color:red">*</sup>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_STKTRNF.TLOCCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "TLOCCD", onblur = "SelectLocationCode(this.value,TLOCCD,TLOCNM);", onkeyup = "GetHelp('" + @Url.Action("GetLocationDetails", PageControllerName) + "','TLOCCD/TLOCNM','1/0','To Location Name','TLOCCD')", @placeholder = "Loc code", maxlength = 4 } })
                                    <img src="~/Image/search.png" class="Help_image_button" width="20px" title="Help" onclick="GetHelp('@Url.Action("GetLocationDetails", PageControllerName )','TLOCCD/TLOCNM','1/0','To Location Name','TLOCCD')" />
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TLOCNM, new { htmlAttributes = new { @class = "form-control", id = "TLOCNM", @placeholder = "Location Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "From Godown")
                                    <sup style="color:red">*</sup>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_STKTRNF.SGOCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SGOCD", maxlength = 6, onkeyup = "GetHelp('" + @Url.Action("GetGodownDetails", PageControllerName) + "','SGOCD/SGONM','1/0','Godown Details','SGOCD')", onblur = "SelectGodownCode(this.value,SGOCD,SGONM);", @placeholder = "Code" } })
                                    <img src="~/Image/search.png" style="margin-top: 5px;" height="20px" class="Help_image_button" title="Help" onclick="GetHelp('@Url.Action("GetGodownDetails", PageControllerName)','SGOCD/SGONM','1/0','Godown Details','SGOCD')" />
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.SGONM, new { htmlAttributes = new { @class = "form-control", id = "SGONM", maxlength = 20, @TabIndex = -1, @placeholder = "Godown Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "To Godown")
                                    <sup style="color:red">*</sup>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_STKTRNF.TGOCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "TGOCD", maxlength = 6, onkeyup = "GetHelp('" + @Url.Action("GetGodownDetails", PageControllerName) + "','TGOCD/TGONM','1/0','Godown Details','TGOCD')", onblur = "SelectGodownCode(this.value,TGOCD,TGONM);", @placeholder = "Code" } })
                                    <img src="~/Image/search.png" style="margin-top: 5px;" height="20px" class="Help_image_button" title="Help" onclick="GetHelp('@Url.Action("GetGodownDetails", PageControllerName)','TGOCD/TGONM','1/0','Godown Details','TGOCD')" />
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TGONM, new { htmlAttributes = new { @class = "form-control", id = "TGONM", maxlength = 20, @TabIndex = -1, @placeholder = "Godown Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Receive at Destination.")
                                    <sup style="color:red">*</sup>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_STKTRNF.RECDT, new { htmlAttributes = new { @class = "form-control", id = "RECDT", maxlength = 10, @placeholder = "dd/mm/yyyy", autocomplete = "off", onblur = "DocumentDateCHK(this)" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Source No.")
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_STKTRNF.SAUTONO, new { htmlAttributes = new { @class = "form-control", id = "SAUTONO", maxlength = 30, @placeholder = "Source No.", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Target No.")
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_STKTRNF.TAUTONO, new { htmlAttributes = new { @class = "form-control", id = "TAUTONO", maxlength = 30, @placeholder = "Target No", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Remarks" class="tab-pane fade">
                        <div class="row">
                            <div>
                                <div id="partialdivRemarks">
                                    @Html.Partial("_TRANSACTIONREMARKS")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Documents" class="tab-pane fade" style="margin-top: 10px;">
                        <div class="row" style="background-color:#c4b9b9;border:5px groove;width:fit-content;">
                            <div>
                                <div id="partialdivDocument" style="margin-top:0px;">
                                    @Html.Partial("_UPLOADDOCUMENTS")
                                </div>
                            </div>
                        </div>
                    </div>
                    @*<div id="SalesBillMade" class="tab-pane fade" style="margin-top: 10px;">

                        </div>*@
                </div>
            </div>
        </div>

        <div class="container">
            <!-- Modal -->
            <div class="modal fade" id="ViewImageModal" role="dialog">
                <div class="modal-dialog modal-md">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Image</h4>
                        </div>
                        <div class="modal-body">
                            <div id="myCarousel" class="carousel slide" data-ride="carousel">
                                <div class="carousel-inner" id="div_carousel_inner">
                                    <div class="item active">
                                        @*<img src="la.jpg" alt="Los Angelsssssssssssssssses" style="width:100%;">*@
                                    </div>
                                </div>
                                <!-- Left and right controls -->
                                <a class="left carousel-control" href="#myCarousel" data-slide="prev">
                                    <span class="glyphicon glyphicon-chevron-left"></span>
                                </a>
                                <a class="right carousel-control" href="#myCarousel" data-slide="next">
                                    <span class="glyphicon glyphicon-chevron-right"></span>
                                </a>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>


                                                                }
                                                                else
                                                                {
                                                                    @ViewBag.ErrorMessage
                                                                }

                                                                <div class="container">
                                                                    <div id="helpDIV">

                                                                    </div>
                                                                </div>
                                                                }
<script>
    function AddBarCodeGrid() {
        if ($("#ITGRPCD").val() == "") {
            msgInfo("Please enter/select Item Group Code !");
            message_value = "ITGRPCD";
            return false;
        }
        if ($("#MTRLJOBCD").val() == "") {
            msgInfo("Please enter Material Job Code !");
            message_value = "MTRLJOBCD";
            return false;
        }
        if ($("#ITCD").val() == "") {
            msgInfo("Please enter Item Code !");
            message_value = "ITCD";
            return false;
        }
        if ($("#QNTY").val() == "0") {
            msgInfo("Quantity should not be zero(0) !");
            message_value = "QNTY";
            return false;
        }
        var FLAGMTR = $("#FLAGMTR").val();
        var QNTY = $("#QNTY").val();

        if (FLAGMTR != "") {
            var flgmtr = FLAGMTR;
            if (flgmtr == "") { flgmtr = parseFloat(0); } else { flgmtr = parseFloat(flgmtr); }
            var qnty = QNTY;
            if (qnty == "") { qnty = parseFloat(0); } else { qnty = parseFloat(qnty); }
            if (flgmtr > qnty) {
                msgInfo("FLAGMTR (" + flgmtr + ") should be less than Quantity (" + qnty + ") !");
                message_value = "FLAGMTR";
                return false;
            }
        }
        if ($("#HSNCODE").val() == "") {
            msgInfo("Please enter HSN Code !");
            message_value = "HSNCODE";
            return false;
        }
        var TXNSLNO = "";
        if ($("#TXNSLNO").val() == "") {
            var GridRowMain = $("#_T_SALE_PRODUCT_GRID > tbody > tr").length;
            if (GridRowMain == 0) {
                TXNSLNO = 1;
            }
            else {
                var allslno = [parseInt(GridRowMain)];
                for (j = 0; j <= GridRowMain - 1; j++) {
                    allslno[j] = parseInt($("#B_TXNSLNO_" + j).val());
                }
                TXNSLNO = Math.max.apply(Math, allslno);
                TXNSLNO++;
            }
        }
        else {
            TXNSLNO = parseInt($("#TXNSLNO").val());
        }

        var BARCODE = $("#BARCODE").val();
        var ITGRPCD = $("#ITGRPCD").val();
        var ITGRPNM = $("#ITGRPNM").val();
        var MTRLJOBCD = $("#MTRLJOBCD").val();
        var MTRLJOBNM = $("#MTRLJOBNM").val();
        var MTBARCODE = $("#MTBARCODE").val();
        var ITCD = $("#ITCD").val();
        var ITSTYLE = $("#ITSTYLE").val();
        var STYLENO = $("#STYLENO").val();
        var STKTYPE = $("#STKTYPE").val();
        var PARTCD = $("#PARTCD").val();
        var PARTNM = $("#PARTNM").val();
        var PRTBARCODE = $("#PRTBARCODE").val();
        var COLRCD = $("#COLRCD").val();
        var COLRNM = $("#COLRNM").val();
        var CLRBARCODE = $("#CLRBARCODE").val();
        var SIZECD = $("#SIZECD").val();
        var SIZENM = $("#SIZENM").val();
        var SZBARCODE = $("#SZBARCODE").val();
        var PDESIGN = $("#PDESIGN").val();
        var BALSTOCK = $("#BALSTOCK").val();
        var UOM = $("#UOM").val();
        var NOS = $("#NOS").val();
        var RATE = $("#RATE").val();
        var DISCRATE = $("#DISCRATE").val();
        var DISCTYPE = $("#DISCTYPE").val();
        var DISCTYPE_DESC = DISCTYPE == "P" ? "%" : DISCTYPE == "N" ? "Nos" : DISCTYPE == "Q" ? "Qnty" : "Fixed";
        var HSNCODE = $("#HSNCODE").val();
        var GSTPER = $("#GSTPER").val();
        var ALL_GSTPER = $("#ALL_GSTPER").val();
        var PRODGRPGSTPER = $("#PRODGRPGSTPER").val();
        var SHADE = $("#SHADE").val();
        if ("@Model.MENU_PARA" == "PB") {
            var BALENO = $("#BALENO").val();
            var OURDESIGN = $("#OURDESIGN").val();
        }
        var TDDISCTYPE = $("#TDDISCTYPE").val();
        var TDDISCTYPE_DESC = TDDISCTYPE == "P" ? "%" : TDDISCTYPE == "N" ? "Nos" : TDDISCTYPE == "Q" ? "Qnty" : "Fixed";
        var TDDISCRATE = $("#TDDISCRATE").val();
        var SCMDISCTYPE = $("#SCMDISCTYPE").val();
        var SCMDISCTYPE_DESC = SCMDISCTYPE == "P" ? "%" : SCMDISCTYPE == "N" ? "Nos" : SCMDISCTYPE == "Q" ? "Qnty" : "Fixed";
        var SCMDISCRATE = $("#SCMDISCRATE").val();
        var LOCABIN = $("#LOCABIN").val();
        var GLCD = $("#GLCD").val();

        var rowindex = $("#_T_SALE_PRODUCT_GRID > tbody > tr").length;
        var SLNO = 1;
        if (parseInt(rowindex) != 0) {
            var LASTROWINDEX = parseInt(rowindex) - 1;
            var LASTSLNO = $("#B_SLNO_" + LASTROWINDEX).val();
            SLNO = parseInt(LASTSLNO) + 1;
        }

        var tr = "";
        tr += ' <tr style="font-size:12px; font-weight:bold;">';
        tr += '    <td class="sticky-cell">';
        tr += '        <input tabindex="-1" data-val="true" data-val-required="The Checked field is required." id="B_Checked_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].Checked" type="checkbox" value="true"><input name="TBATCHDTL[' + rowindex + '].Checked" type="hidden" value="false">';
        tr += '        <input data-val="true" data-val-length="The field BARNO must be a string with a maximum length of 25." data-val-length-max="25" data-val-required="The BARNO field is required." id="B_BARNO_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].BARNO" type="hidden" value="' + BARCODE + '">';
        tr += '        <input data-val="true" data-val-length="The field PDESIGN must be a string with a maximum length of 30." data-val-length-max="30" id="B_PDESIGN_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].PDESIGN" type="hidden" value="' + PDESIGN + '">';
        tr += '        <input data-val="true" data-val-length="The field OURDESIGN must be a string with a maximum length of 30." data-val-length-max="30" id="B_OURDESIGN_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].OURDESIGN" type="hidden" value="' + OURDESIGN + '">';
        tr += '        <input data-val="true" data-val-number="The field FLAGMTR must be a number." id="B_FLAGMTR_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].FLAGMTR" type="hidden" value="' + FLAGMTR + '">';
        tr += '        <input data-val="true" data-val-length="The field HSNCODE must be a string with a maximum length of 8." data-val-length-max="8" id="B_HSNCODE_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].HSNCODE" type="hidden" value="' + HSNCODE + '">';
        tr += '        <input data-val="true" data-val-length="The field BALENO must be a string with a maximum length of 30." data-val-length-max="30" id="B_BALENO_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].BALENO" type="hidden" value="' + BALENO + '">';
        tr += '        <input data-val="true" data-val-length="The field LOCABIN must be a string with a maximum length of 10." data-val-length-max="10" id="B_LOCABIN_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].LOCABIN" type="hidden" value="' + LOCABIN + '">';
        tr += '        <input data-val="true" data-val-length="The field GLCD must be a string with a maximum length of 10." data-val-length-max="10" id="B_GLCD_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].GLCD" type="hidden" value="' + GLCD + '">';
        tr += '        <input id="B_BARGENTYPE_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].BARGENTYPE" type="hidden" value="' + '' + '">';
        tr += '    </td>';
        tr += '    <td class="sticky-cell" style="left:20px;" title="' + SLNO + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " data-val="true" data-val-number="The field SLNO must be a number." data-val-required="The SLNO field is required." id="B_SLNO_' + rowindex + '" maxlength="2" name="TBATCHDTL[' + rowindex + '].SLNO" readonly="readonly" style="text-align:center;" type="text" value="' + SLNO + '">';
        tr += '    </td>';
        tr += '    <td class="sticky-cell" style="left:40px" title="' + TXNSLNO + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " data-val="true" data-val-number="The field TXNSLNO must be a number." data-val-required="The TXNSLNO field is required." id="B_TXNSLNO_' + rowindex + '" maxlength="4" name="TBATCHDTL[' + rowindex + '].TXNSLNO"  style="text-align:center;" onkeypress="return numericOnly(this,2);" type="text" value="' + TXNSLNO + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + ITGRPNM + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " id="B_ITGRPNM_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].ITGRPNM" readonly="readonly" type="text" value="' + ITGRPNM + '">';
        tr += '        <input id="B_ITGRPCD_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].ITGRPCD" type="hidden" value="' + ITGRPCD + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + MTRLJOBCD + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " data-val="true" data-val-length="The field MTRLJOBCD must be a string with a maximum length of 2." data-val-length-max="2" id="B_MTRLJOBCD_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].MTRLJOBCD" readonly="readonly" type="text" value="' + MTRLJOBCD + '">';
        tr += '        <input id="B_MTRLJOBNM_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].MTRLJOBNM" type="hidden" value="' + MTRLJOBNM + '">';
        tr += '        <input id="B_MTBARCODE_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].MTBARCODE" type="hidden" value="' + MTBARCODE + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + ITCD + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " id="B_ITCD_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].ITCD" readonly="readonly" type="text" value="' + ITCD + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + ITSTYLE + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " id="B_ITSTYLE_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].ITSTYLE" readonly="readonly" type="text" value="' + ITSTYLE + '">';
        tr += '        <input id="B_STYLENO_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].STYLENO" type="hidden" value="' + STYLENO + '">';
        tr += '    </td>         ';
        tr += '    <td class="" title="' + STKTYPE + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " data-val="true" data-val-length="The field STKTYPE must be a string with a maximum length of 1." data-val-length-max="1" id="B_STKTYPE_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].STKTYPE" readonly="readonly" type="text" value="' + STKTYPE + '">';
        tr += '     </td>';
        tr += '    <td class="" title="' + PARTCD + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " data-val="true" data-val-length="The field PARTCD must be a string with a maximum length of 4." data-val-length-max="4" id="B_PARTCD_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].PARTCD" readonly="readonly" type="text" value="' + PARTCD + '">';
        tr += '        <input id="B_PARTNM_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].PARTNM" type="hidden" value="' + PARTNM + '">';
        tr += '        <input id="B_PRTBARCODE_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].PRTBARCODE" type="hidden" value="' + PRTBARCODE + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + COLRCD + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " data-val="true" data-val-length="The field COLRCD must be a string with a maximum length of 4." data-val-length-max="4" id="B_COLRCD_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].COLRCD" readonly="readonly" type="text" value="' + COLRCD + '">';
        tr += '     <input id="B_CLRBARCODE_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].CLRBARCODE" type="hidden" value="' + CLRBARCODE + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + COLRNM + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " id="B_COLRNM_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].COLRNM" readonly="readonly" type="text" value="' + COLRNM + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + SIZECD + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " data-val="true" data-val-length="The field SIZECD must be a string with a maximum length of 4." data-val-length-max="4" id="B_SIZECD_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].SIZECD" readonly="readonly" type="text" value="' + SIZECD + '">';
        tr += '        <input id="B_SIZENM_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].SIZENM" type="hidden" value="' + SIZENM + '">';
        tr += '        <input id="B_SZBARCODE_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].SZBARCODE" type="hidden" value="' + SZBARCODE + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + SHADE + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " data-val="true" data-val-length="The field SHADE must be a string with a maximum length of 15." data-val-length-max="15" id="B_SHADE_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].SHADE" readonly="readonly" type="text" value="' + SHADE + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + QNTY + '">';
        tr += '        <input class=" atextBoxFor text-box single-line" data-val="true" data-val-number="The field QNTY must be a number." id="B_QNTY_' + rowindex + '" maxlength="12" name="TBATCHDTL[' + rowindex + '].QNTY" onkeypress="return numericOnly(this,3);" style="text-align: right;" type="text" onchange="CalculateTotal_Barno();" value="' + QNTY + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + UOM + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor" id="B_UOM_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].UOM" readonly="readonly" type="text" value="' + UOM + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + NOS + '">';
        tr += '        <input class=" atextBoxFor text-box single-line" data-val="true" data-val-number="The field NOS must be a number." id="B_NOS_' + rowindex + '" maxlength="12" name="TBATCHDTL[' + rowindex + '].NOS" onkeypress="return numericOnly(this,3);" style="text-align: right;" type="text" onchange="CalculateTotal_Barno();" value="' + NOS + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + RATE + '">';
        tr += '        <input class=" atextBoxFor text-box single-line" data-val="true" data-val-number="The field RATE must be a number." id="B_RATE_' + rowindex + '" maxlength="14" name="TBATCHDTL[' + rowindex + '].RATE" onkeypress="return numericOnly(this,2);" style="text-align: right;" type="text" onchange="GetGstPer(' + rowindex + ',\'#B_\');" value="' + RATE + '" >';
        tr += '    </td>';
        tr += '    <td class="" title="' + GSTPER + '">';
        tr += '        <input class="atextBoxFor text-box single-line" data-val="true" data-val-number="The field GSTPER must be a number." id="B_GSTPER_' + rowindex + '" maxlength="5" name="TBATCHDTL[' + rowindex + '].GSTPER" onkeypress="return numericOnly(this,2);" style="text-align: right;" readonly="readonly" type="text" value="' + GSTPER + '">';
        tr += '        <input id="B_ALL_GSTPER_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].ALL_GSTPER" type="hidden" value="' + ALL_GSTPER + '">';
        tr += '        <input id="B_PRODGRPGSTPER_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].PRODGRPGSTPER" type="hidden" value="' + PRODGRPGSTPER + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + DISCRATE + '">';
        tr += '        <input class=" atextBoxFor text-box single-line" data-val="true" data-val-number="The field DISCRATE must be a number." id="B_DISCRATE_' + rowindex + '" maxlength="10" name="TBATCHDTL[' + rowindex + '].DISCRATE" onkeypress="return numericOnly(this,2);" style="text-align: right;" type="text" value="' + DISCRATE + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + DISCTYPE_DESC + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor" id="B_DISCTYPE_DESC_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].DISCTYPE_DESC" readonly="readonly" type="text" value="' + DISCTYPE_DESC + '">';
        tr += '        <input data-val="true" data-val-length="The field DISCTYPE must be a string with a maximum length of 1." data-val-length-max="1" id="B_DISCTYPE_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].DISCTYPE" type="hidden" value="' + DISCTYPE + '">';
        tr += '    </td><td class="" title="' + TDDISCTYPE_DESC + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " id="B_TDDISCTYPE_DESC_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].TDDISCTYPE_DESC" readonly="readonly" type="text" value="' + TDDISCTYPE_DESC + '">';
        tr += '        <input data-val="true" data-val-length="The field TDDISCTYPE must be a string with a maximum length of 1." data-val-length-max="1" id="B_TDDISCTYPE_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].TDDISCTYPE" type="hidden" value="' + TDDISCTYPE + '">';
        tr += '                              </td>';
        tr += '    <td class="" title="' + TDDISCRATE + '">';
        tr += '        <input class=" atextBoxFor text-box single-line" data-val="true" data-val-number="The field TDDISCRATE must be a number." id="B_TDDISCRATE_' + rowindex + '" maxlength="10" name="TBATCHDTL[' + rowindex + '].TDDISCRATE" onkeypress="return numericOnly(this,2);" style="text-align: right;" type="text" value="' + TDDISCRATE + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + SCMDISCTYPE_DESC + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " id="B_SCMDISCTYPE_DESC_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].SCMDISCTYPE_DESC" readonly="readonly" type="text" value="' + SCMDISCTYPE_DESC + '">';
        tr += '        <input data-val="true" data-val-length="The field SCMDISCTYPE must be a string with a maximum length of 1." data-val-length-max="1" id="B_SCMDISCTYPE_' + rowindex + '" name="TBATCHDTL[' + rowindex + '].SCMDISCTYPE" type="hidden" value="' + SCMDISCTYPE + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + SCMDISCRATE + '">';
        tr += '        <input class=" atextBoxFor text-box single-line" data-val="true" data-val-number="The field SCMDISCRATE must be a number." id="B_SCMDISCRATE_' + rowindex + '" maxlength="10" name="TBATCHDTL[' + rowindex + '].SCMDISCRATE" onkeypress="return numericOnly(this,2);" style="text-align: right;" type="text" value="' + SCMDISCRATE + '">';
        tr += '    </td>';
        tr += '    <td class="" >';
        tr += '        <input type="file" class="atextBoxFor" name="ImageData_' + rowindex + '" id="B_ImageData_' + rowindex + '" onchange="fileCheck(this,0);">';
        tr += '    </td>';
        tr += '        <td class="sticky-cell-opposite">';
        tr += '            <button type="button" class="btn btn-primary px-3" style="padding: 0px 12px 0px 12px;color:chartreuse;" onclick="FillBarcodeArea(\'\', \'_T_SALE_PRODUCT_GRID\', ' + rowindex + ');" title="CLICK HERE TO EDIT BARCODEDATA"><span class="glyphicon glyphicon-pencil"></span></button>';
        tr += '        </td>';
        tr += ' </tr>';

        $("#_T_SALE_PRODUCT_GRID tbody").append(tr);
        CalculateTotal_Barno();
        ClearBarcodeArea();
        @*if ("@Model.MENU_PARA" == "PB") {
            $("#BALENO").val("");
        }
        $("#DISCTYPE").val("P");
        $("#TDDISCTYPE").val("P");
        $("#SCMDISCTYPE").val("P");*@

        if ("@Model.MENU_PARA" == "PB") {
            $("#TXNSLNO").focus();
        } else {
            $("#BARCODE").focus();
        }
    }
</script>
<script>
    function fileTypeCheck(id) {
        var fileUpload = $(id).get(0);
        var filesSelected = fileUpload.files;
        if (filesSelected.length > 0) {
            var fileToLoad = filesSelected[0];
            document.getElementById("ImageName").value = fileToLoad.name;
            var fileReader = new FileReader();
            fileReader.onload = function (fileLoadedEvent) {
                document.getElementById("ImageStr").value = fileLoadedEvent.target.result;
            };
            fileReader.readAsDataURL(fileToLoad);
        }
    }

    function UploadBarnoImage(i) {
        debugger;
        var ImageDesc = $('#ImageDesc').val();
        if (document.getElementById("ImageName").value == "") return;
        var OpenImageModal = $('#OpenImageModal_' + i).html(); var actt = "";
        if (OpenImageModal == "") { OpenImageModal = 1; actt = "active"; $("#div_carousel_inner").append(''); } else {
            OpenImageModal = parseInt(OpenImageModal) + 1;
            actt = "";
        }
        $('#OpenImageModal_' + i).html(OpenImageModal);
        $.ajax({
            type: 'POST',
            url: "@Url.Action("UploadImages", PageControllerName )",
            beforesend: $("#WaitingMode").show(),
            data: "ImageStr=" + $('#ImageStr').val() + "&ImageName=" + $('#ImageName').val() + "&ImageDesc=" + ImageDesc,
            success: function (result) {
                $("#WaitingMode").hide();
                var id = (result.split('/')[2]).split('.')[0];
                var newid = $("#BarImages").val() + String.fromCharCode(181) + (result.split('/')[2] + '~' + ImageDesc);
                $("#BarImages").val(newid);
                var htm = '';
                htm += '<div class="item ' + actt + '">';
                htm += '    <img src="' + result + '"  alt="Img Not Found" style="width:100%;">';
                htm += '    <div class="carousel-caption">';
                htm += '    <h3> ' + ImageDesc + ' </h3>';
                htm += '    </div>';
                htm += '</div>';
                $("#div_carousel_inner").append(htm);

                //htm += '<div class="col-lg-4" id="' + id + '">';
                //htm += '       <div class="thumbnail">';
                //htm += '           <button type="button" style="position:absolute;top:5px;right:11px;padding:0px 5px;cursor:pointer;border-radius:10px;" class="btn-danger" onclick= deleteBarImages("' + id + '")>X</button>';
                //htm += '           <a href="' + result + '" target="_blank">';
                //htm += '                <img src="' + result + '" alt="" style="width:100%">';
                //htm += '                <div class="caption">';
                //htm += '                   ' + ImageDesc;
                //htm += '          </div>';
                //htm += '      </a>';
                //htm += '  </div>';
                //htm += '</div>';
                $("#divUploadImage").append(htm);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function deleteBarImages(id) {
        debugger;
        var arr = $("#BarImages").val().split(String.fromCharCode(181)); var deleteindex = 0;
        $.each(arr, function (index, value) {
            var divid = (value.split('~')[0]).split('.')[0];
            if (id == divid) {
                deleteindex = index;
            }
        });
        arr.splice(deleteindex, 1);
        $("#" + id).remove();
        var newimg = arr.join(String.fromCharCode(181));
        $("#BarImages").val(newimg);
    }
</script>