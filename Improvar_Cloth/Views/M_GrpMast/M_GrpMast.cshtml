@model Improvar.ViewModels.GroupMasterEntry
@{
    ViewBag.Title = "Group Master";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    string PageControllerName = "M_GrpMast";
}

<script src="~/Scripts/jquery.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        if ("@Model.DefaultAction" == "V" || "@Model.DefaultAction" == "D") {
            modeView();
        }
        else if ("@Model.DefaultAction" == "E") {

            $("#ITGRPCD").attr("readonly", "readonly");
        }
        else if ("@Model.DefaultAction" == "A") {
            $('form :input:enabled:visible:not([readonly]):first').focus();
            $('form :input:enabled:visible:not([readonly]):first').focus();
            $('form :input:enabled:visible:not([readonly]):first').focus();
            $('form :input:enabled:visible:not([readonly]):first').focus();
            $('form :input:enabled:visible:not([readonly]):first').focus();
        }
        $("#WaitingMode").hide();
   });
</script>
<script>
   function requiredFieldValidator()
   {
       if (!emptyFieldCheck("Enter Group Name", "GRPNM")) { return false; }
       if (!emptyFieldCheck("Enter Item Group Name", "ITGRPNM")) { return false; }
       var grptyp = $("#grptype").val();
       if (grptyp == "0") { msgInfo("Select Group Type"); message_value = "grptype"; return false; }
        return true;
   }
</script>
<script>
    @{
        string mldauto = "";
        if (@Model.M_GROUP != null)
        {
            mldauto = Model.M_GROUP.M_AUTONO.ToString();
        }
        else
        {
            mldauto = "";
        }
    }
    function ModifyLogDetails() {
        if ("@Model.DefaultAction" == "V") {
            ModifyLogDtl(@mldauto);
        }
    }
</script>
<script>
    function CheckGroupCode(id) {
        if ("@Model.DefaultAction" == "A") {
            var valu = document.getElementById(id).value;
            if (valu == "") {
            }
            else {
                $.ajax({
                    type: 'GET',
                    url: $("#urlname").val(),
                    data: {
                        val: valu
                    },
                    success: function (result) {
                        if (result == "1") {
                            $("#Msgdiv1").show();
                            $("#info").show();
                            $("#msg_ok_info").focus();
                            $("#msgbody_info").html("Code Already Exists : Please Enter a Valid Code !! ");
                            $("#ITGRPCD").val("");
                            message_value = "ITGRPCD";
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $("#WaitingMode").hide();
                        msgError(XMLHttpRequest.responseText);
                        $("body span h1").remove(); $("#msgbody_error style").remove();
                    }
                });
            }
        }
    }
</script>
<script>
    function input(id, id1) {
        var str = $("#tempHDD").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
    }
    function SelectProductGrp(id, PRODGRPCD, PRODGRPNM) {
        if (id == "") {
            $("#PRODGRPNM").val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: $("#urlPRODGRP").val(),
                data: {
                    val: id
                },
                success: function (result) {
                    if (result == "0") {
                        $("#Msgdiv1").show();
                        $("#info").show();
                        $("#PRODGRPCD").val("");
                        $("#PRODGRPNM").val("");
                        $("#btnok").focus();
                        $("#msgbody_info").html("Invalid Product Group Code !! ");
                        message_value = "PRODGRPCD";
                    }
                    else {
                        $("#tempHDD").val(result);
                        input(PRODGRPCD, PRODGRPNM);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
</script>
<script>

    function AddDOCrow() {
        $.ajax({
            type: 'POST',
            url: $("#add_doc_url").val(),
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '-10px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeleteDOCrow() {
        $.ajax({
            type: 'POST',
            url: $("#del_doc_url").val(),
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '0px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function pageprinting()
    {
        $("#btnprint").click();
    }
</script>

@using (Html.BeginForm())
{
    if (Model.DefaultView == true)
    {
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <input type="hidden" id="btnSave" value="@Url.Action("SAVE", PageControllerName)" />
            <input type="hidden" id="urlname" value="@Url.Action("CheckGroupCode", PageControllerName)" />
            <input type="hidden" id="urlPRODGRP" value="@Url.Action("ProductGrp", PageControllerName)" />
            <input type="hidden" id="add_doc_url" value="@Url.Action("AddDOCRow", PageControllerName )" />
            <input type="hidden" id="del_doc_url" value="@Url.Action("DeleteDOCRow", PageControllerName )" />
            <input type="hidden" id="srhpnl" value="@Url.Action("SearchPannelData", PageControllerName)" />

            <input type="submit" id="btnprint" formtarget="_blank" style="display:none" />
            @Html.HiddenFor(s => s.DefaultAction)
            @Html.HiddenFor(a => a.M_GROUP.M_AUTONO)
            @Html.HiddenFor(e => e.M_GROUP.EMD_NO)
            <ul class="nav nav-tabs">
                <li class="active"><a data-toggle="tab" href="#Main">Main</a></li>
                <li><a data-toggle="tab" href="#Documents">Documents</a></li>
            </ul>
            <div class="tab-content">
                <div id="Main" class="tab-pane fade in active" style="margin-top: 10px;">

                    <div class="row">
                        <div class="col-md-7">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Group Code")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-field">
                                @if (Model.DefaultAction == "A")
                                {
                                    @Html.EditorFor(model => model.M_GROUP.ITGRPCD, new { htmlAttributes = new { @class = "form-control", id = "ITGRPCD", onblur = "CheckGroupCode('ITGRPCD');", @placeholder = "Code", @onkeyup = "toUpper(this);", maxlength = 4, @readonly = "readonly" } })
                                }
                                else
                                {
                                    @Html.EditorFor(model => model.M_GROUP.ITGRPCD, new { htmlAttributes = new { @class = "form-control", id = "ITGRPCD", @placeholder = "Code", @onkeyup = "toUpper(this);", maxlength = 4, @readonly = "readonly" } })
                                }
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-7">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Group Name")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        @*<div class="col-md-9">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_GROUP.ITGRPNM, new { htmlAttributes = new { @class = "form-control", id = "ITGRPNM", @placeholder = "Group Name", maxlength = 30 } })
                            </div>
                        </div>*@
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_GROUP.GRPNM, new { htmlAttributes = new { @class = "form-control", id = "GRPNM", @placeholder = "Group Name", maxlength = 40, @list = "GRPNMlist" } })
                                <datalist id="GRPNMlist">
                                    @foreach (var jg in Model.Database_Combo1)
                                    {
                                        <option value="@jg.FIELD_VALUE" />
                                    }
                                </datalist>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-7">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", " Item Group Name")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-9">
                <div class="editor-field">
                    @Html.EditorFor(model => model.M_GROUP.ITGRPNM, new { htmlAttributes = new { @class = "form-control", id = "ITGRPNM", @placeholder = "Item Group Name", maxlength = 40 } })
                </div>
            </div>
                        @*<div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_GROUP.ITGRPNM, new { htmlAttributes = new { @class = "form-control", id = "ITGRPNM", @placeholder = "Group Name", maxlength = 40, @list = "ITGRPNMlist" } })
                                <datalist id="ITGRPNMlist">
                                    @foreach (var jg in Model.Database_Combo1)
                                    {
                                        <option value="@jg.FIELD_VALUE" />
                                    }
                                </datalist>
                            </div>
                        </div>*@
                    </div>
                    <div class="row">
                        <div class="col-md-7">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", " Short Name")
                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_GROUP.SHORTNM, new { htmlAttributes = new { @class = "form-control", id = "SHORTNM", @placeholder = "Short Name", maxlength = 25 } })
                            </div>
                        </div>
                    </div>
                        <div class="row">
                            <div class="col-md-7">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Group Type")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="editor-field">
                                    <select id="grptype" name="grptype" class="form-control">
                                        <option value="0" selected="selected">====Select====</option>
                                        @foreach (var i in Model.GroupType)
                                        {
                                            if (Model.DefaultAction == "A")
                                            {
                                                <option value="@i.value">@i.text</option>
                                            }
                                            else
                                            {
                                                if (Model.M_GROUP.ITGRPTYPE == i.value)
                                                {
                                                    <option value="@i.value" selected="selected">@i.text</option>
                                                }
                                                else
                                                {
                                                    <option value="@i.value">@i.text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-7">
                                <div class="editor-field" style="margin-top: 4px;">
                                    @Html.Label("", "Product Group")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_GROUP.PRODGRPCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "PRODGRPCD", onkeyup = "GetHelp('" + @Url.Action("GetProductGrp", PageControllerName) + "','PRODGRPCD/PRODGRPNM','1/0','Select Product Group Code','PRODGRPCD')", @placeholder = "Code", maxlength = 4, onblur = "SelectProductGrp(this.value,PRODGRPCD,PRODGRPNM);" } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" on onclick="GetHelp('@Url.Action("GetProductGrp", PageControllerName)','PRODGRPCD/PRODGRPNM','1/0','Select Product Group Code','PRODGRPCD')" />
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_PRODGRP.PRODGRPNM, new { htmlAttributes = new { @class = "form-control", id = "PRODGRPNM", @placeholder = "Product Group Name", maxlength = 15, @TabIndex = -1, @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-7">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "HSNCODE")
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_GROUP.HSNCODE, new { htmlAttributes = new { @class = "form-control", id = "HSNCODE", @title = "Only Numeric", @onkeypress = "return event.charCode > 47 && event.charCode < 58;", @placeholder = "HSNCODE", maxlength = 8, @list = "HSNCODElist" } })
                                    <datalist id="HSNCODElist">
                                        @foreach (var jg in Model.Database_Combo2)
                                        {
                                            <option value="@jg.FIELD_VALUE" />
                                        }
                                    </datalist>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-7">
                                <div class="editor-field" style="margin-top: 4px;">
                                    @Html.Label("", "Bar Code Generation Type")

                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => Model.M_GROUP.BARGENTYPE, new SelectList(Model.DropDown_list1, "Value", "Text"), new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    <div id="CLASS1" class="row">
                        <div class="col-md-7">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Class 1")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="editor-field">
                                @*@Html.EditorFor(model => model.M_GROUP.CLASS1CD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "CLASS1CD", onkeyup = "GetHelp('" + @Url.Action("GetClass1Details", PageControllerName) + "','CLASS1CD/CLASS1NM','1/0','Class 1 Details','CLASS1CD')", onblur = "SelectClass1(this.value,'CLASS1CD','CLASS1NM');", @placeholder = "Code", maxlength = 8 } })
                                <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onclick="GetHelp('@Url.Action("GetClass1Details", PageControllerName)','CLASS1CD/CLASS1NM','1/0','Class 1 Details','CLASS1CD')" />*@

                                @Html.EditorFor(model => model.M_GROUP.CLASS1CD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "CLASS1CD", onkeydown = "GetHelpBlur('" + @Url.Action("GetClass1Details", PageControllerName) + "','Class 1 Details','CLASS1CD','CLASS1CD=CLASS1CD=1/CLASS1NM=CLASS1NM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetClass1Details", PageControllerName) + "','Class 1 Details','CLASS1CD','CLASS1CD=CLASS1CD=1/CLASS1NM=CLASS1NM=0');", @placeholder = "Code", maxlength = 8 } })
                                <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetClass1Details", PageControllerName)','Class 1 Details','CLASS1CD','CLASS1CD=CLASS1CD=1/CLASS1NM=CLASS1NM=0')" />
                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.CLASS1NM, new { htmlAttributes = new { @class = "form-control", id = "CLASS1NM", maxlength = 40, @title = "Only for View", @placeholder = "Class 1 Name", @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>
                  
                        <div class="row">
                            <div class="col-md-3">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "De - Activate")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field" style="margin-top:6px;">
                                    @Html.CheckBoxFor(model => model.Checked)
                                </div>
                            </div>
                        </div>
                    </div>
                <div id="Documents" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                    <div class="row" style="margin-top: 11px;width:1024px;height:auto;background-color:#c4b9b9">
                        <div id="partialdivDocument">
                            @Html.Partial("_UPLOADDOCUMENTS")
                        </div>
                    </div>
                </div>
                </div>
            </div>
                }
                else
                {
                @ViewBag.ErrorMessage
                }
                <div class="container">
                    <div id="helpDIV">

                    </div>
                </div>
                }
