@model Improvar.ViewModels.RepEWBChanges
@{
    ViewBag.Title = "Rep_EWB_Changes";
    Layout = "~/Views/Shared/_ReportLayout.cshtml";
}
@*<script src="~/Scripts/jquery.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="~/Content/bootstrap-select.css" />
    @Scripts.Render("~/Scripts/Multiple-Select-min.js")
    @Scripts.Render("~/Scripts/bootstrap-select.js")*@
<script src="~/Scripts/jquery.min.js"></script>

<script>
    $(function () {
        $("#LRDT1").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate' });

    });
</script>
<script>
    $(document).ready(function () {

    });
</script>

<script>
    function SelectBLNODetail(id, BLNO, AUTONO) {
        debugger;
        var Code = document.getElementById(AUTONO.id).value
        if (id == "") {
            $("#" + BLNO.id).val("");
            //$("#" + AUTONO.id).val("");
            ClearAllTextBoxes("BLNO,AUTONO,BLDT,SLNM,GSTNO,ITCD_NEW,BLAMT,EWAYBILLNO,EWAYBILLDT,TRSLCD,TRSLNM,LRNO,LRDT,LORRYNO,TRSLCD1,TRSLNM1,LRNO1,LRDT1,LORRYNO1,reasoncd,reasonrem,AGSLCD,AGSLNM,AGSLCD1,AGSLNM1,CARRIAGEAMT");
        }
        else {
            $.ajax({
                type: 'POST',
                beforesend: $("#WaitingMode").show(),
                url: "@Url.Action("GetBLNODetails", "Rep_EWB_Changes")",
                data: $('form').serialize() + "&val=" + id + "&Code=" + Code,
                success: function (result) {
                    //var MSG = result.indexOf('#helpDIV');
                    var MSG = result.indexOf(String.fromCharCode(181));
                    if (MSG >=0) {
                        $("#WaitingMode").hide();
                        var res = result;
                        document.getElementById("BLNO").value = returncolvalue(res, "BLNO");
                        document.getElementById("AUTONO").value = returncolvalue(res, "AUTONO");
                        document.getElementById("BLDT").value = returncolvalue(res, "BLDT");
                        document.getElementById("SLNM").value = returncolvalue(res, "SLNM");
                        document.getElementById("GSTNO").value = returncolvalue(res, "GSTNO");
                        document.getElementById("BLAMT").value = returncolvalue(res, "BLAMT");
                        document.getElementById("EWAYBILLNO").value = returncolvalue(res, "EWAYBILLNO");
                        document.getElementById("EWAYBILLDT").value = returncolvalue(res, "EWAYBILLDT");
                        document.getElementById("TRSLCD").value = returncolvalue(res, "translcd");
                        document.getElementById("TRSLNM").value = returncolvalue(res, "TRSLNM");
                        document.getElementById("LRNO").value = returncolvalue(res, "LRNO");
                        document.getElementById("LRDT").value = returncolvalue(res, "LRDT");
                        document.getElementById("LORRYNO").value = returncolvalue(res, "LORRYNO");
                        document.getElementById("TRSLCD1").value = returncolvalue(res, "translcd");
                        document.getElementById("TRSLNM1").value = returncolvalue(res, "TRSLNM");
                        document.getElementById("LRNO1").value = returncolvalue(res, "LRNO");
                        document.getElementById("LRDT1").value = returncolvalue(res, "LRDT");
                        document.getElementById("LORRYNO1").value = returncolvalue(res, "LORRYNO");
                        document.getElementById("CARRIAGEAMT").value = returncolvalue(res, "CRGAMT");
                        var reasoncd = returncolvalue(res, "reasoncd");
                        var reasonrem = returncolvalue(res, "reasonrem");
                        if (reasoncd != "")
                        {
                            $('#reasoncd').html('');
                            var options = '';
                            options += '<option value="' + reasoncd + '"></option>';
                            $('#reasoncd').append(options);
                        }
                        if (reasonrem != "") {
                            $('#reasonrem').html('');
                            var options = '';
                            options += '<option value="' + reasonrem + '"></option>';
                            $('#reasonrem').append(options);
                        }
                        document.getElementById("AGSLCD1").value = returncolvalue(res, "AGSLCD");
                        document.getElementById("AGSLNM1").value = returncolvalue(res, "AGSLNM");
                        document.getElementById("AGSLCD").value = returncolvalue(res, "AGSLCD");
                        document.getElementById("AGSLNM").value = returncolvalue(res, "AGSLNM");

                    }
                    else {

                        msgInfo("Invalid Sales Bill No. Please Enter a Valid Sales Bill No. !!");
                        $("#" + BLNO.id).val("");
                        //$("#" + AUTONO.id).val("");
                        message_value = BLNO.id;

                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
</script>


<script>
    function Update_Data() {
        debugger;
        if ($("#BLNO").val() == "") { msgInfo("Please Enter/Select Sales Bill No. !"); message_value = "BLNO"; return false; }
        if ($("#REASONREM").val() == "") { msgInfo("Please Enter/Select Reason Remarks !"); message_value = "REASONREM"; return false; }
        if ($("#LRDT1").val() != "") {
            var dt = $("#BLDT").val();
            var docdtdateParts1 = dt.split("/");
            var docdate = new Date(docdtdateParts1[2], docdtdateParts1[1] - 1, docdtdateParts1[0]);

            var dt1 = $("#LRDT1").val();
            var lrdateParts1 = dt1.split("/");
            var lrdate = new Date(lrdateParts1[2], lrdateParts1[1] - 1, lrdateParts1[0]);

            if (lrdate < docdate) {
                msgInfo("LR Date Should not be less than Document Date !! ");
                message_value = "LRDT1";
                return false;
            }
        }
        $.ajax({
            type: 'post',
            beforesend: $("#WaitingMode").show(),
            url: "@Url.Action("Update", "Rep_EWB_Changes")",
            data: $('form').serialize(),
            success: function (result) {
                $("#WaitingMode").hide();
                if (result == "1") {
                    msgSuccess1("Update Successfully !");
                }
                else {
                    msgInfo(result);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>


<script>
    function SelectPartyCode(id, SLCD, PartyName, TAG) {
        debugger;

        //var ID_VAL = document.getElementById(id.id).value;
        if (id == "") {
            $("#" + SLCD.id).val("");
            $("#" + PartyName.id).val("");
        }
        else {

            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetPartyDetails", "Rep_EWB_Changes")",
                data: { val: id, TAG: TAG },
                success: function (result) {
                    var MSG = result.indexOf(String.fromCharCode(181));
                    if (MSG >= 0) {
                        $("#tempHDD").val(result);
                        var findstr = $("#tempHDD").val();

                        $("#" + SLCD.id).val(returncolvalue(findstr, "SLCD"));
                        $("#" + PartyName.id).val(returncolvalue(findstr, "SLNM"));


                    }
                    else {
                        $("#" + SLCD.id).val("");
                        $("#" + PartyName.id).val("");
                        msgInfo(result);
                        message_value = SLCD.id;
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
</script>

@using (Html.BeginForm("Rep_EWB_Changes", "Rep_EWB_Changes", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    <div class="row" style="margin-top: 5px; font:bold;">
        <div class="col-md-5">
            <div class="editor-label" style="margin-top: 6px;">
                @Html.Label("", "Sales Bill No.")
            </div>
        </div>
        <div class="col-md-8">
            <div class="editor-field">
                @Html.EditorFor(model => model.BLNO, new { htmlAttributes = new { @class = "form-control textbox_image", id = "BLNO", onkeydown = "GetHelpBlur('" + @Url.Action("GetBLNODetails", "Rep_EWB_Changes") + "','Bill No. Details','BLNO','BLNO=BLNO=0/AUTONO=AUTONO=2/BLDT=BLDT=1')", onblur = "SelectBLNODetail(this.value,BLNO,AUTONO);", @placeholder = "BLNO", maxlength = 25 } })
                <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetBLNODetails", "Rep_EWB_Changes")','Bill No. Details','BLNO','BLNO=BLNO=0/AUTONO=AUTONO=2/BLDT=BLDT=1',)" />
                @Html.HiddenFor(model => model.AUTONO, new { id = "AUTONO" })
            </div>
        </div>
        <div class="col-md-1">
            <div class="editor-field" style="margin-top: 6px;">
                @Html.Label("", "Date")
            </div>
        </div>
        <div class="col-md-5">
            <div class="editor-field">
                @Html.EditorFor(model => model.BLDT, new { htmlAttributes = new { @class = "form-control", id = "BLDT", @placeholder = "Date", @readonly = "readonly", @TabIndex = -1 } })

            </div>
        </div>
        <div class="col-md-1"> </div><div class="col-lg-5"><p><strong>Note: Sales Bill No. comes upto Less than equal 15 Days of Doc Date </strong></p></div>
    </div>
    <div class="row">
        <div class="col-md-5">
            <div class="editor-field" style="margin-top: 6px;">
                @Html.Label("", "Party name")
            </div>
        </div>
        <div class="col-md-8">
            <div class="editor-field">
                @Html.EditorFor(model => model.SLNM, new { htmlAttributes = new { @class = "form-control", id = "SLNM", @placeholder = "Party name", @readonly = "readonly", @TabIndex = -1 } })

            </div>
        </div>
        <div class="col-md-1" style="width:auto;">
            <div class="editor-field" style="margin-top: 6px;">
                @Html.Label("", "GST #")
            </div>
        </div>
        <div class="col-md-5" style="width:auto;">
            <div class="editor-field">
                @Html.EditorFor(model => model.GSTNO, new { htmlAttributes = new { @class = "form-control", id = "GSTNO", @placeholder = "GSTNO", @readonly = "readonly", @TabIndex = -1 } })
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-5">
            <div class="editor-field" style="margin-top: 6px;">
                @Html.Label("", "Bill Value")
            </div>
        </div>
        <div class="col-md-5">
            <div class="editor-field">
                @Html.EditorFor(model => model.BLAMT, new { htmlAttributes = new { @class = "form-control", id = "BLAMT", @placeholder = "BLAMT", @readonly = "readonly", @TabIndex = -1 } })
            </div>
        </div>

        <div class="col-md-1" style="width:auto;">
            <div class="editor-field" style="margin-top: 6px;">
                @Html.Label("", "EWB #")
            </div>
        </div>
        <div class="col-md-5">
            <div class="editor-field">
                @Html.EditorFor(model => model.EWAYBILLNO, new { htmlAttributes = new { @class = "form-control", id = "EWAYBILLNO", @placeholder = "EWAYBILLNO", @readonly = "readonly", @TabIndex = -1 } })
            </div>
        </div>

        <div class="col-md-1" style="width:auto;">
            <div class="editor-field" style="margin-top: 6px;">
                @Html.Label("", "EWB Date")
            </div>
        </div>
        <div class="col-md-5">
            <div class="editor-field">
                @Html.EditorFor(model => model.EWAYBILLDT, new { htmlAttributes = new { @class = "form-control", id = "EWAYBILLDT", @placeholder = "EWAYBILLDT", @readonly = "readonly", @TabIndex = -1 } })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">
            <div class="editor-field" style="margin-top: 6px;">
                @Html.Label("", "Transporter")
            </div>
        </div>
        <div class="col-md-5">
            <div class="editor-field">
                @Html.EditorFor(model => model.TRSLCD, new { htmlAttributes = new { @class = "form-control", id = "TRSLCD", @placeholder = "TRSLCD", @readonly = "readonly", @TabIndex = -1 } })
            </div>
        </div>
        <div class="col-md-7" style="width:auto;">
            <div class="editor-field">
                @Html.EditorFor(model => model.TRSLNM, new { htmlAttributes = new { @class = "form-control", id = "TRSLNM", @placeholder = "TRSLNM", @readonly = "readonly", @TabIndex = -1 } })
            </div>
        </div>

        <div class="col-md-5">
            <div class="editor-field" style="margin-top: 6px;">
                @Html.Label("", "Carriage Charges")
            </div>
        </div>
        <div class="col-md-5">
            <div class="editor-field">
                @Html.EditorFor(model => model.CARRIAGEAMT, new { htmlAttributes = new { @class = "form-control", id = "CARRIAGEAMT", @placeholder = "CARRIAGEAMT", @readonly = "readonly", @TabIndex = -1 } })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">
            <div class="editor-field" style="margin-top: 6px;">
                @Html.Label("", "LR No")
            </div>
        </div>
        <div class="col-md-5">
            <div class="editor-field">
                @Html.EditorFor(model => model.LRNO, new { htmlAttributes = new { @class = "form-control", id = "LRNO", @placeholder = "LRNO", @readonly = "readonly", @TabIndex = -1 } })
            </div>
        </div>
        <div class="col-md-1">
            <div class="editor-field" style="margin-top: 6px;">
                @Html.Label("", "LR Date")
            </div>
        </div>
        <div class="col-md-5">
            <div class="editor-field">
                @Html.EditorFor(model => model.LRDT, new { htmlAttributes = new { @class = "form-control", id = "LRDT", @placeholder = "LRDT", @readonly = "readonly", @TabIndex = -1 } })
            </div>
        </div>
        <div class="col-md-1">
            <div class="editor-field" style="margin-top: 6px;">
                @Html.Label("", "Lorry No")
            </div>
        </div>
        <div class="col-md-5">
            <div class="editor-field">
                @Html.EditorFor(model => model.LORRYNO, new { htmlAttributes = new { @class = "form-control", id = "LORRYNO", @placeholder = "LORRYNO", @readonly = "readonly", @TabIndex = -1 } })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">
            <div class="editor-field" style="margin-top: 6px;">
                @Html.Label("", "Agent")
            </div>
        </div>
        <div class="col-md-5">
            <div class="editor-field">
                @Html.EditorFor(model => model.AGSLCD, new { htmlAttributes = new { @class = "form-control", id = "AGSLCD", @placeholder = "AGSLCD", @readonly = "readonly", @TabIndex = -1 } })
            </div>
        </div>
        <div class="col-md-7" style="width:auto;">
            <div class="editor-field">
                @Html.EditorFor(model => model.AGSLNM, new { htmlAttributes = new { @class = "form-control", id = "AGSLNM", @placeholder = "AGSLNM", @readonly = "readonly", @TabIndex = -1 } })
            </div>
        </div>

    </div>
    <div class="row" style="margin-top:15px;">
        <ul class="nav nav-tabs">
            <li id="MAIN_LI" class="active"><a data-toggle="tab" href="#MAIN">Changed to</a></li>
        </ul>
        <div class="tab-content">
            <div id="MAIN" class="tab-pane fade in active" style="margin-top: 10px;">
                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-field" style="margin-top: 6px;">
                            @Html.Label("", "Transporter")
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="editor-field">


                            @Html.EditorFor(model => model.TRSLCD1, new { htmlAttributes = new { @class = "form-control textbox_image", id = "TRSLCD1", maxlength = 8, onkeyup = "GetHelp('" + @Url.Action("GetPartyDetails", "Rep_EWB_Changes") + "','TRSLCD1/TRSLNM1','1/0','Transporter Details','TRSLCD1','T')", onblur = "SelectPartyCode(this.value,TRSLCD1,TRSLNM1,'T');", @placeholder = "TRSLCD" } })
                            <img src="~/Image/search.png" width="20px" style="margin-top: 5px;" height="20px" class="Help_image_button" title="Help" onclick="GetHelp('@Url.Action("GetPartyDetails", "Rep_EWB_Changes")','TRSLCD1/TRSLNM1','1/0','Transporter Details','TRSLCD1','T')" />


                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.TRSLNM1, new { htmlAttributes = new { @class = "form-control", id = "TRSLNM1", @placeholder = "TRSLNM", @readonly = "readonly", @TabIndex = -1 } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-field" style="margin-top: 6px;">
                            @Html.Label("", "LR No")
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.LRNO1, new { htmlAttributes = new { @class = "form-control", id = "LRNO1", @placeholder = "LRNO", maxlength = 100 } })
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-field" style="margin-top: 6px;">
                            @Html.Label("", "LR Date")
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.LRDT1, new { htmlAttributes = new { @class = "form-control", id = "LRDT1", maxlength = 10, @placeholder = "dd/mm/yyyy", onblur = "DocumentDateCHK(this)", autonocomplete = "off" } })
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-field" style="margin-top: 6px;">
                            @Html.Label("", "Lorry No")
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.LORRYNO1, new { htmlAttributes = new { @class = "form-control", id = "LORRYNO1", @placeholder = "LORRYNO", maxlength = 50 } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-field" style="margin-top: 6px;">
                            @Html.Label("", "Agent")
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="editor-field">

                            @Html.EditorFor(model => model.AGSLCD1, new { htmlAttributes = new { @class = "form-control textbox_image", id = "AGSLCD1", maxlength = 8, onkeyup = "GetHelp('" + @Url.Action("GetPartyDetails", "Rep_EWB_Changes") + "','AGSLCD1/AGSLNM1','1/0','Agent Details','AGSLCD1','A')", onblur = "SelectPartyCode(this.value,AGSLCD1,AGSLNM1,'A');", @placeholder = "AGSLCD" } })
                            <img src="~/Image/search.png" width="20px" style="margin-top: 5px;" height="20px" class="Help_image_button" title="Help" onclick="GetHelp('@Url.Action("GetPartyDetails", "Rep_EWB_Changes")','AGSLCD1/AGSLNM1','1/0','Agent Details','AGSLCD1','A')" />

                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.AGSLNM1, new { htmlAttributes = new { @class = "form-control", id = "AGSLNM1", @placeholder = "AGSLNM", @readonly = "readonly", @TabIndex = -1 } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-field" style="margin-top: 6px;">
                            @Html.Label("", "Reason code")
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="editor-field">
                            @*@Html.EditorFor(model => model.REASONCD, new { htmlAttributes = new { @class = "form-control", id = "REASONCD", @placeholder = "REASONCD", @readonly = "readonly", @TabIndex = -1 } })*@

                            @Html.EditorFor(model => model.REASONCD, new { htmlAttributes = new { @class = "form-control", id = "REASONCD", @placeholder = "REASONCD", maxlength = 4, @list = "REASONCDlist" } })
                            <datalist id="REASONCDlist">
                                @foreach (var jg in Model.Database_Combo1)
                                {
                                    <option value="@jg.FIELD_VALUE" />
                                }
                            </datalist>

                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-field" style="margin-top: 6px;">
                            @Html.Label("", "Reason Remarks")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.REASONREM, new { htmlAttributes = new { @class = "form-control", id = "REASONREM", @placeholder = "REASONREM", maxlength = 400, @list = "REASONREMlist" } })
                            <datalist id="REASONREMlist">
                                @foreach (var jg in Model.Database_Combo2)
                                {
                                    <option value="@jg.FIELD_VALUE" />
                                }
                            </datalist>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1" style="width:auto;">
                        <input type="button" class="btn-sm btn-info" style="padding: 0px 7px 0px 7px;" id="Update_EWB" value="Update" title="Click to Update" onclick="Update_Data()" />
                    </div>
                </div>
            </div>
        </div>
    </div>



    @*<div class="row" style="margin-top:20PX">
            <div class="col-lg-6">
                <input class="btn btn-primary" style="padding: 5px;" type="submit" name="submitbutton" formmethod="post" value="Show Report" formtarget="_blank" />

            </div>
        </div>*@
    @*<div class="row" style="background-color:#c4b9b9;width:100%">
        <div id="PartialdivEWBILL">*@
    @*@Html.Partial("_Rep_EWB_Changes")*@
    @*</div>
        </div>*@
    <div class="container">
        <div id="helpDIV">

        </div>
    </div>
}
