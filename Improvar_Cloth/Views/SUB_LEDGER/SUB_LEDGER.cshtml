@model Improvar.ViewModels.SubLedgerEntry
@{
    ViewBag.Title = "Sub Ledger Master";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    string PageControllerName = "SUB_LEDGER";
}
<link rel="stylesheet" href="~/Content/bootstrap-float-label.min.css" />
<script src="~/Scripts/jquery.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        if ("@Model.DefaultAction" == "V" || "@Model.DefaultAction" == "D") {
            modeView();
        }
        else if ("@Model.DefaultAction" == "E") {
            $("#doctype").attr("disabled", "true");
            $("#DOCDT").attr("readonly", "readonly");

        }
        else if ("@Model.DefaultAction" == "A") {
            $('form :input:enabled:visible:not([readonly]):first').focus();
        }
        $("#WaitingMode").hide();
    });
</script>
<script>
    function requiredFieldValidator() {
        var BLDGNO = $("#BLDGNO").val().length;
        var PREMISES = $("#PREMISES").val().length;
        var FLOORNO = $("#FLOORNO").val().length;
        var sum = parseInt(BLDGNO) + parseInt(PREMISES) + parseInt(FLOORNO);
        if (sum > 60) {
            msgInfo("Address must be less than 60 charecters !");
            message_value = "BLDGNO";
            return false;
        }
        if (!emptyFieldCheck("Enter Ledger Name ", "SLNM")) {
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");

            return false;
        }
        debugger;
        var str = ($("#SLNM").val().trim()).substr(0, 1);

        if (/^[a-zA-Z0-9- ]*$/.test(str) == false) {
            msgInfo("Subledger could not contain any special cherecter at starting of name !");
            message_value = "SLNM";
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            return false;
        }
        //if (str.trim()!= str)
        //{
        //    msgInfo("Subledger could not contain space at starting of name !");
        //    message_value = "SLNM";
        //    $("li").removeClass("active").addClass("");
        //    $(".nav-tabs li:first-child").addClass('active');
        //    //below set the  child sequence
        //    $(".tab-content div").removeClass("active");
        //    $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
        //    return false;
        //}

        //var format = /^[ !#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]$/;

        //if (!format.test(str)) {
        //    debugger
        //    if (str.include("$", 0)) {
        //        msgInfo("Subledger could not contain any special cherecter at starting of name !");
        //        message_value = "SLNM";
        //        $("li").removeClass("active").addClass("");
        //        $(".nav-tabs li:first-child").addClass('active');
        //        //below set the  child sequence
        //        $(".tab-content div").removeClass("active");
        //        $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
        //        return false;
        //    }
        //}
        if (!emptyFieldCheck("Select District", "DISTRICT")) {
            message_value = "DISTRICT";
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            return false;
        }

        if (!emptyFieldCheck("Select State", "STATE")) {
            message_value = "STATE";
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            return false;
        }

        if (!emptyFieldCheck("Enter Pin Code", "PIN")) {
            message_value = "PIN";
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            return false;
        }
        if (!emptyFieldCheck("Enter Country", "COUNTRY")) {
            message_value = "COUNTRY";
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            return false;
        }

        var GridLTYPE = $("#exampleLT > tbody > tr").length;
        var Count = 0;
        for (var i = 0; i <= GridLTYPE - 1; i++) {
            var Check = document.getElementById("PrtyTypChk_" + i).checked;
            if (Check == true) {
                Count = Count + 1;
            }
        }
        if (Count == 0) {
            msgInfo("Select Party Type.");
            message_value = "PrtyTypChk_0";
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:first-child").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");

            return false;
        }
        var comtype = $("#comtype").val();
        if (comtype == "") {
            msgInfo("Please Select Company Type !! ");
            message_value = "comtype";
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:nth-child(2)").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:nth-child(2)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            return false;
        }
        var REGNTYPE = $("#REGNTYPE").val();
        if (REGNTYPE == "") {
            msgInfo("Please Select Registration Type !! ");
            message_value = "REGNTYPE";
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:nth-child(2)").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:nth-child(2)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            return false;
        } else {
            var GSTNO = $("#GSTNO").val();
            if (GSTNO != "") {
                if (REGNTYPE == "U") {
                    msgInfo("Registration type should not Unregistered when you have entered GSTNO !! ");
                    message_value = "REGNTYPE";
                    $("li").removeClass("active").addClass("");
                    $(".nav-tabs li:nth-child(2)").addClass('active');
                    //below set the  child sequence
                    $(".tab-content div").removeClass("active");
                    $(".tab-content div:nth-child(2)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
                    return false;
                }
            }
        }
        return true;
    }
</script>

<script>
    @{
        string mldauto = "";
        if (@Model.M_SUBLEG != null)
        {
            mldauto = Model.M_SUBLEG.M_AUTONO.ToString();
        }
        else
        {
            mldauto = "";
        }
    }
    function ModifyLogDetails() {
        if ("@Model.DefaultAction" == "V") {
            ModifyLogDtl(@mldauto);
        }
    }
</script>
<script>
    function validateGSTNO() {
        var gstinVal = $("#GSTNO").val();
        var statecode = $("#GSTNO").val().substring(0, 2);
        var pancarno = $("#GSTNO").val().substring(2, 12);
        var entityNumber = $("#GSTNO").val().substring(12, 13);
        var defaultZvalue = $("#GSTNO").val().substring(13, 14);
        var checksumdigit = $("#GSTNO").val().substring(14, 15);
        if (gstinVal.length == 0) {
            return false;
        }
        if (gstinVal.length != 15) {
            msgInfo('GST Number length is invalid');
            //$("#GSTNO").val("");
            message_value = "GSTNO";
            return false;
        }
        if (pancarno.length != 10) {
            msgInfo('Pan Card length Number is invalid in GST no');
            //$("#GSTNO").val("");
            message_value = "GSTNO";
            return false;
        }
        if (defaultZvalue !== 'Z') {
            msgInfo('GST Number is invalid Z not in Entered GST Number');
            //$("#GSTNO").val("");
            message_value = "GSTNO";
            return false;
        }
        var reggst = /^([0-9]){2}([a-zA-Z]){5}([0-9]){4}([a-zA-Z]){1}([0-9]){1}([a-zA-Z]){1}[0-9A-Z]{1}?$/;
        if (!reggst.test(gstinVal) && gstinVal != '') {
            msgInfo('GST Identification Number is not valid. It should be in this "11AAAAA1111A1ZA" format');
            //$("#GSTNO").val("");
            message_value = "GSTNO";
            return false;
        }
        return true;
    }
</script>


<script>

    function AddDOCrow() {
        $.ajax({
            type: 'POST',
            url: $("#add_doc_url").val(),
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivdoc").animate({ marginTop: '-10px' }, 50);
                $("#partialdivdoc").html(result);
            }
        });
    }
    function DeleteDOCrow() {
        $.ajax({
            type: 'POST',
            url: $("#del_doc_url").val(),
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivdoc").animate({ marginTop: '0px' }, 50);
                $("#partialdivdoc").html(result);
            }
        });
    }
</script>

<script>
    function Addrow() {
        $.ajax({
            type: 'POST',
            url: $("#btnAdd").val(),
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdiv").animate({ marginTop: '-10px' }, 50);
                $("#partialdiv").html(result);
            }
        });
    }
    function Deleterow(urlstring, id) {
        $.ajax({
            type: 'POST',
            url: $("#btnDelete").val(),
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdiv").animate({ marginTop: '0px' }, 50);
                $("#partialdiv").html(result);
            }
        });
    }

</script>
<script>
    function AddRowBank(urlstring, id) {
        $.ajax({
            type: 'POST',
            url: $("#btnAddBank").val(),
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivBank").animate({ marginTop: '-10px' }, 50);
                $("#partialdivBank").html(result);
            }
        });
    }
    function DeleteRowBank(urlstring, id) {
        $.ajax({
            type: 'POST',
            url: $("#btnDeleteBank").val(),
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivBank").animate({ marginTop: '0px' }, 50);
                $("#partialdivBank").html(result);
            }
        });
    }

</script>
<script>
    function AddRowCompany(urlstring, id) {
        $.ajax({
            type: 'POST',
            url: $("#btnAddCompany").val(),
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivCompany").animate({ marginTop: '-10px' }, 50);
                $("#partialdivCompany").html(result);
            }
        });
    }
    function DeleteRowCompany(urlstring, id) {
        $.ajax({
            type: 'POST',
            url: $("#btnDeleteCompany").val(),
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivCompany").animate({ marginTop: '0px' }, 50);
                $("#partialdivCompany").html(result);
            }
        });
    }

</script>

<script>
    function input6(id, id1) {

        var str = $("#tempHDD").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
    }
    function SelectCompCD(id, COMPCD_, COMPNM_) {
        debugger
        var id1 = COMPCD_.id;
        var id2 = COMPNM_.id;
        if (id == "") {
            $("#" + id1).val("");
            $("#" + id2).val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetCompanyDetails", PageControllerName )",
                data: {
                    val: id
                },
                success: function (result) {
                    var MSG = result.indexOf(String.fromCharCode(181));
                    if (MSG >= 0) {
                        $("#tempHDD").val(result);
                        var str = $("#tempHDD").val().split(String.fromCharCode(181));
                        document.getElementById(COMPCD_.id).value = str[0].toString();
                        document.getElementById(COMPNM_.id).value = str[1].toString();
                    }
                    else {
                        $("#Msgdiv1").show();
                        $("#info").show();
                        $("#" + COMPCD_.id).val("");
                        $("#" + COMPNM_.id).val("");
                        $("#btnok").focus();
                        $("#msgbody_info").html(result);
                        message_value = COMPCD_.id;
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError("Error: " + textStatus + "," + errorThrown);
                }
            });
        }
    }
</script>
<script>
    function inputDIST(id, id1) {
        var str = $("#tempHDDFF").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
    }
    function SelectDISTRICT(id, DISTRICT, DISTNM) {
        if (id == "") {
            $("#DISTRICT").val("");
            $("#DISTNM").val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: $("#urlname3").val(),
                data: {
                    val: id
                },
                success: function (result) {
                    if (result == "0") {
                        msgInfo("Invalid District Code !");
                        $("#DISTRICT").val("");
                        $("#DISTNM").val("");

                        message_value = "DISTRICT";
                    }
                    else {
                        $("#tempHDDFF").val(result);
                        inputDIST(DISTRICT, DISTNM);
                    }

                }
            });
        }
    }
</script>
<script>
    function inputSTATE(id, id1) {
        var str = $("#tempHDDFF").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
    }
    function SelectSTATE(id, STATECD, STATENM) {
        debugger
        if (id == "") {
            $("#STATECD").val("");
            $("#STATE").val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: $("#urlname2").val(),
                data: {
                    val: id
                },
                success: function (result) {
                    if (result == "0") {
                        msgInfo("Invalid State Code !")
                        $("#STATECD").val("");
                        $("#STATE").val("");
                        message_value = "STATECD";
                    }
                    else {
                        $("#tempHDDFF").val(result);
                        inputSTATE(STATECD, STATENM);
                    }

                }
            });
        }
    }
</script>
<script>
    function inputCOUNTRY(id, id1) {
        var str = $("#tempHDDFF").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
    }
    function SelectCOUNTRY(id, COUNTRY, CNAME) {
        if (id == "") {
            $("#COUNTRY").val("");
            $("#CNAME").val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: $("#urlname4").val(),
                data: {
                    val: id
                },
                success: function (result) {
                    if (result == "0") {
                        msgInfo("Invalid Country Code !");
                        $("#COUNTRY").val("");
                        $("#CNAME").val("");
                        message_value = "COUNTRY";
                    }
                    else {
                        $("#tempHDDFF").val(result);
                        inputCOUNTRY(COUNTRY, CNAME);
                    }

                }
            });
        }
    }
</script>

<script>
    function inputFSC(id, id1, id2, id3) {
        var str = $("#tempHDDFF").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
        $("#" + id2.id).val(str[2].toString());
        $("#" + id3.id).val(str[3].toString());
    }
    function SelectIFSCCODE(id, IFSCCODE_, BANKNAME, BRANCH_, CITY_) {
        if (id == "") {
            var id1 = IFSCCODE_.id;
            var id2 = BANKNAME.id;
            var id3 = BRANCH_.id;
            var id4 = CITY_.id;

            $("#" + id1).val("");
            $("#" + id2).val("");
            $("#" + id3).val("");
            $("#" + id4).val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: $("#ifscurl").val(),
                data: {
                    val: id
                },
                success: function (result) {
                    if (result == "0") {
                        msgInfo("Invalid Code !");
                        $("#" + IFSCCODE_.id).val("");
                        message_value = IFSCCODE_.id;
                    }
                    else {
                        $("#tempHDDFF").val(result);
                        inputFSC(IFSCCODE_, BANKNAME, BRANCH_, CITY_);
                    }

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError("Error: " + textStatus + "," + errorThrown);
                }
            });
        }
    }
</script>
<script>
    $(function () {
        if ("@Model.DefaultAction" == "A" || "@Model.DefaultAction" == "E") {
            $("#M_SUBLEG_GSTDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate' });
            $("#STATDT_1").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate' });
        }
    });
</script>

<script>
    function inputLINK(id, id1) {
        var str = $("#tempHDD").val().split(String.fromCharCode(181));
        $("#" + id.id).val(str[0]);
        $("#" + id1.id).val(str[1].toString());
    }
    function SelectLINKPARTY(id, PSLCD, PSLNM) {
        if (id == "") {
            $("#PSLCD").val("");
            $("#PSLNM").val("");
        }
        else {
            $.ajax({
                type: 'GET',
                url: $("#urlnameLINK").val(),
                data: {
                    val: id
                },
                success: function (result) {
                    if (result == "0") {
                        msgInfo("Invalid Code !! ");
                        $("#PSLCD").val("");
                        $("#PSLNM").val("");
                        message_value = "PSLCD";
                    }
                    else {
                        $("#tempHDD").val(result);
                        inputLINK(PSLCD, PSLNM);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError("Error: " + textStatus + "," + errorThrown);
                }
            });
        }
    }
</script>
<script>
    //Sub Ledger
    function CheckSubledger() {
        if ("@Model.DefaultAction" == "A" || "@Model.DefaultAction" == "E") {
            var name = $("#SLNM").val();
            if (name != "") {
                $.ajax({
                    type: 'post',
                    url: $("#urlCheckSubledger").val(),
                    data: { val: name },
                    beforesend: $("#WaitingMode").show(),
                    success: function (result) {
                        $("#WaitingMode").hide();
                        if (result != "") { msgInfo(result); }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $("#WaitingMode").hide();
                        msgError("Error: " + textStatus + "," + errorThrown);
                    }
                });
            }
        }
    }
</script>

<script>
    //Sub Ledger
    function CheckGSTNO() {
        if ("@Model.DefaultAction" == "A" || "@Model.DefaultAction" == "E") {
            var GSTNO = $("#GSTNO").val();
            if (GSTNO != "") {
                $.ajax({
                    type: 'post',
                    url: $("#urlCheckGSTNO").val(),
                    data: { val: GSTNO },
                    beforesend: $("#WaitingMode").show(),
                    success: function (result) {
                        $("#WaitingMode").hide();
                        if (result != "") {
                            $("#GSTNO").val("");
                            msgInfo(result);
                            message_value = GSTNO;
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $("#WaitingMode").hide();
                        msgError("Error: " + textStatus + "," + errorThrown);
                    }
                });
            }
        }
    }
</script>

<script>
    function pageprinting() {
        $.ajax({
            type: 'post',
            url: '@Url.Action("Print", PageControllerName )',
            data: $('form').serialize(),
            beforesend: $("#WaitingMode").show(),
            success: function (result) {
                $("#WaitingMode").hide();
                window.open("@Url.Action("Rep_SubledgerPrint", "Rep_SubledgerPrint", new { US = CommFunc.Encrypt_URL(Model.UNQSNO) })", "_blank");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError("Error: " + textStatus + "," + errorThrown);
            }
        });
    }
</script>
<script>
    function AddToPrivious() {
        $.ajax({
            type: 'post',
            url: "@Url.Action("SavePreviousYrData", PageControllerName)",
            beforesend: $("#WaitingMode").show(),
            data: $('form').serialize(),
            success: function (result) {
                $("#WaitingMode").hide();
                if (result == "1") {
                    msgSuccess1("Previous year data save sucessfully");
                    message_value = "btnPrvyr";
                }
                else {
                    msgWarning(result);
                    message_value = "btnPrvyr";
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }


    function GetGstInfo() {
        if (validateGSTNO() == false) return false;
        var gstno = $("#GSTNO").val();
        $.ajax({
            type: 'get',
            url: "@Url.Action("GetGstInfo", PageControllerName)",
            beforesend: $("#WaitingMode").show(),
            data: { GSTNO: gstno },
            success: function (result) {
                debugger;
                $("#WaitingMode").hide();
                if (result.message == "ok") {
                    document.getElementById("GSTNO").value = result.Gstin;
                    document.getElementById("PANNO").value = result.Panno;
                    document.getElementById("STATECD").value = result.StateCd;
                    document.getElementById("STATE").value = result.StateNm;
                    document.getElementById("comtype").value = result.Comptype;
                    document.getElementById("SLNM").value = result.TradeName;
                    document.getElementById("PROPNAME").value = result.LegalName;
                    document.getElementById("PREMISES").value = result.AddrBnm;
                    document.getElementById("BLDGNO").value = result.AddrBno;
                    document.getElementById("FLOORNO").value = result.AddrFlno;
                    document.getElementById("ROADNAME").value = result.AddrSt;
                    document.getElementById("DISTRICT").value = result.AddrLoc;
                    document.getElementById("PIN").value = result.AddrPncd;
                    document.getElementById("REGNTYPE").value = "R"; //result.TxpType;
                    document.getElementById("COUNTRY").value = "INDIA"; //result.TxpType;
                } else {
                    msgInfo(result.message);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>

@using (Html.BeginForm())
{
    if (Model.DefaultView == true)
    {
        <input type="hidden" id="ifscurl" value="@Url.Action("BankDetails", PageControllerName)" />
        <input type="hidden" id="tempHDDFF" value="" />
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <input type="hidden" id="btnSave" value="@Url.Action("SAVE", PageControllerName )" />
            <input type="hidden" id="btnAdd" value="@Url.Action("AddRow", PageControllerName )" />
            <input type="hidden" id="btnDelete" value="@Url.Action("DeleteRow", PageControllerName )" />
            <input type="hidden" id="btnAddBank" value="@Url.Action("AddRowBank", PageControllerName )" />
            <input type="hidden" id="btnDeleteBank" value="@Url.Action("DeleteRowBank", PageControllerName )" />
            <input type="hidden" id="btnAddCompany" value="@Url.Action("AddRowCompany", PageControllerName )" />
            <input type="hidden" id="btnDeleteCompany" value="@Url.Action("DeleteRowCompany", PageControllerName )" />
            <input type="hidden" id="urlname2" value="@Url.Action("State", PageControllerName )" />
            <input type="hidden" id="urlname3" value="@Url.Action("District", PageControllerName )" />
            <input type="hidden" id="urlname4" value="@Url.Action("Country", PageControllerName )" />
            <input type="hidden" id="urlnameLINK" value="@Url.Action("LinkCode", PageControllerName )" />
            <input type="hidden" id="add_doc_url" value="@Url.Action("AddDOCRow", PageControllerName )" />
            <input type="hidden" id="del_doc_url" value="@Url.Action("DeleteDOCRow", PageControllerName )" />
            <input type="hidden" id="urlCheckSubledger" value="@Url.Action("CheckSubledgerName", PageControllerName )" />
            <input type="hidden" id="urlCheckGSTNO" value="@Url.Action("CheckGSTNO", PageControllerName )" />
            <input type="hidden" id="srhpnl" value="@Url.Action("SearchPannelData", PageControllerName)" />
            <input type="submit" id="btnprint" formtarget="_blank" style="display:none" />
            <input type="hidden" id="ModifyLogSchma" value="FIN" />

            @Html.HiddenFor(s => s.DefaultAction)
            @Html.HiddenFor(e => e.M_SUBLEG.EMD_NO)
            @Html.HiddenFor(a => a.M_SUBLEG.M_AUTONO)
            @Html.HiddenFor(a => a.maxdate)
            <ul class="nav nav-tabs">
                <li class="active">
                    <a data-toggle="tab" href="#Standard">Standard</a>
                </li>
                <li>
                    <a data-toggle="tab" href="#StatutoryInfo">Statutory Info</a>
                </li>
                <li>
                    <a a data-toggle="tab" href="#Communication">Communication</a>
                </li>
                <li>
                    <a a data-toggle="tab" href="#OthAdd">Other Address</a>
                </li>
                @if (Model.DefaultAction == "V")
                {
                    <li>
                        <a a data-toggle="tab" href="#FullAddress">Full Address</a>
                    </li>
                }
                <li>
                    <a a data-toggle="tab" href="#BankDetails">Bank Details</a>
                </li>
                <li>
                    <a a data-toggle="tab" href="#TDSDetails">TDS Details</a>
                </li>
                <li>
                    <a data-toggle="tab" href="#CompanyLocation">Company Location</a>
                </li>
                <li> <a data-toggle="tab" href="#Other">Other</a> </li>
                <li>
                    <a a data-toggle="tab" href="#Documents">Documents</a>
                </li>
            </ul>
            <div class="tab-content">
                <div id="Standard" class="tab-pane fade in active" style="margin-top: 10px;">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Sub Ledger Code")
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.SLCD, new { htmlAttributes = new { @class = "form-control", id = "SLCD", @title = "Only for View", @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Link Party")
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.PSLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "PSLCD", onkeyup = "GetHelp_WithId('" + @Url.Action("GetLinkCode", PageControllerName) + "', 'PSLCD/PSLNM', '1/0', 'Select Link Party', 'PSLCD', 'SLCD')", onblur = "SelectLINKPARTY(this.value,PSLCD,PSLNM);", @placeholder = "Code", maxlength = 8 } })
                                <img src="~/Image/search.png" width="20px" class="Help_image_button" style="margin-top: 5px;" height="20px" title="Help" onclick="GetHelp_WithId('@Url.Action("GetLinkCode", PageControllerName )','PSLCD/PSLNM','1/0','Select Link Party','PSLCD','SLCD')" />
                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.PSLNM, new { htmlAttributes = new { @class = "form-control", id = "PSLNM", @placeholder = "Link Party Name", maxlength = 45, @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-sm-1">
                            @if (Model.DefaultAction == "V")
                            {
                                if (Model.isPresentinLastYrSchema == "")
                                { }
                                if (Model.isPresentinLastYrSchema == "ADD")
                                {<button type="button" id="btnPrvyr" style="padding-left:1px;padding-right:1px" value="PRVSCHM" name="button" class="btn btn-info btn-sm" onclick="AddToPrivious();">Add to last year schema</button>
                                }
                                if (Model.isPresentinLastYrSchema == "EDIT")
                                {<button type="button" id="btnPrvyr" style="padding-left:1px;padding-right:1px" value="PRVSCHM" name="button" class="btn btn-info btn-sm" onclick="AddToPrivious();">Modify to last year schema</button>
                                }
                            }

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "GST No.")
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.GSTNO, new { htmlAttributes = new { @class = "form-control", Id = "GSTNO", @style = "text-transform:uppercase",onkeyup = "toUpper(this)", maxlength = 15, @placeholder = "GST No." } })
                            </div>
                        </div>
                        <div class="col-sm-1">
                            @if (Model.DefaultAction != "V" && Model.IsAPIEnabled == true)
                            {
                                <button type="button" style="margin-top:5px;padding-right:1px" name="button" class="btn-info" onclick="GetGstInfo();">Get Gst Info</button>
                            }
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Sub Ledger")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.SLNM, new { htmlAttributes = new { id = "SLNM", @class = "form-control", onblur = "CheckSubledger()", @placeholder = "Sub Ledger Name", maxlength = 45 } })
                            </div>
                        </div>
                        <div class="col-md-3" style="margin-right:-28px;">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Short Name")
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.SHORTNM, new { htmlAttributes = new { @class = "form-control", ID = "SHORTNM", @placeholder = "Short Name", maxlength = 15 } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Party Group Code")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SUBLEG.PARTYCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "PARTYCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetPartyGroupDetails", PageControllerName) + "','Party Group Details','PARTYCD','PARTYCD=PARTYCD=1/PARTYNM=PARTYNM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetPartyGroupDetails", PageControllerName) + "','Party Group Details','PARTYCD','PARTYCD=PARTYCD=1/PARTYNM=PARTYNM=0');", @placeholder = "Code", maxlength = 4 } })
                                    <img src="~/Image/search.png" id="PARTY_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetPartyGroupDetails", PageControllerName)','Party Group Details','PARTYCD','PARTYCD=PARTYCD=1/PARTYNM=PARTYNM=0')" />
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.PARTYNM, new { htmlAttributes = new { @class = "form-control", id = "PARTYNM", maxlength = 45, @title = "Only for View", @placeholder = "Party Group Name", @readonly = "readonly", tabindex = "-1" } })
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Full Name(Optional)")
                            </div>
                        </div>
                        <div class="col-md-11">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.FULLNAME, new { htmlAttributes = new { @class = "form-control", @placeholder = "Full Name (Optional)", maxlength = 80 } })

                            </div>
                        </div>
                    </div>
                    <div class="row" id="address">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Address")
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="editor-field input-group" style="width:-webkit-fill-available;">
                                <span class="has-float-label">
                                    @Html.EditorFor(model => model.M_SUBLEG.BLDGNO, new { htmlAttributes = new { @class = "form-control", ID = "BLDGNO", @placeholder = "Building No. / Flat No." } })
                                    @if (Model.DefaultAction == "A")
                                    {
                                        <label for="BLDGNO">Flat No</label>
                                    }
                                    else
                                    {
                                        <label for="BLDGNO" style="font-size: 87%;color: darkgreen;">Flat No</label>
                                    }
                                </span>
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-field input-group" style="width:-webkit-fill-available;">
                                <span class="has-float-label">
                                    @Html.EditorFor(model => model.M_SUBLEG.FLOORNO, new { htmlAttributes = new { @class = "form-control", ID = "FLOORNO", @placeholder = "Floor No." } })
                                    @if (Model.DefaultAction == "A")
                                    {
                                        <label for="FLOORNO">Floor</label>
                                    }
                                    else
                                    {
                                        <label for="FLOORNO" style="font-size: 87%;color: darkgreen;">Floor No</label>
                                    }
                                </span>
                            </div>
                        </div>
                        <div class="col-md-10">
                            <div class="editor-field input-group" style="width:-webkit-fill-available;">
                                <span class="has-float-label">
                                    @Html.EditorFor(model => model.M_SUBLEG.PREMISES, new { htmlAttributes = new { @class = "form-control", ID = "PREMISES", @placeholder = "Name of the Premises / Building" } })
                                    @if (Model.DefaultAction == "A")
                                    {
                                        <label for="PREMISES">Premises Name</label>
                                    }
                                    else
                                    {
                                        <label for="PREMISES" style="font-size: 87%;color: darkgreen;">Premises Name</label>
                                    }
                                </span>
                            </div>
                        </div>


                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-field">
                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="editor-field input-group" style="width:-webkit-fill-available;">
                                <span class="has-float-label">
                                    @Html.EditorFor(model => model.M_SUBLEG.ROADNAME, new { htmlAttributes = new { @class = "form-control", id = "ROADNAME", @placeholder = "Road Name / Street Name" } })
                                    @if (Model.DefaultAction == "A")
                                    {
                                        <label for="ROADNAME">Road Name</label>
                                    }
                                    else
                                    {
                                        <label for="ROADNAME" style="font-size: 87%;color: darkgreen;">Road Name</label>
                                    }
                                </span>

                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="editor-field input-group" style="width:-webkit-fill-available;">
                                <span class="has-float-label">
                                    @Html.EditorFor(model => model.M_SUBLEG.LOCALITY, new { htmlAttributes = new { Id = "LOCALITY", @class = "form-control", @placeholder = "Locality / Area / Village" } })
                                    @if (Model.DefaultAction == "A")
                                    {
                                        <label for="LOCALITY">Locality</label>
                                    }
                                    else
                                    {
                                        <label for="LOCALITY" style="font-size: 87%;color: darkgreen;">Locality/Area</label>
                                    }
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Address(Additional)")
                            </div>
                        </div>
                        <div class="col-md-11">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.EXTADDR, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address (Additional)", Id = "EXTADDR", maxlength = 60 } })
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Landmark")
                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.LANDMARK, new { htmlAttributes = new { @class = "form-control", id = "LANDMARK", @placeholder = "LandMark", maxlength = 80 } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "District")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.DISTRICT, new { htmlAttributes = new { @class = "form-control", id = "DISTRICT", @placeholder = "DISTRICT", maxlength = 40, @list = "DISTRICTlist" } })
                                <datalist id="DISTRICTlist">
                                    @foreach (var jg in Model.Database_Combo1)
                                    {
                                        <option value="@jg.FIELD_VALUE" />
                                    }
                                </datalist>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Pin Code")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.PIN, new { htmlAttributes = new { @class = "form-control", id = "PIN", @placeholder = "Pin Code", @onkeypress = "return event.charCode > 47 && event.charCode < 58;", maxlength = 10 } })
                            </div>
                        </div>

                        <div class="col-md-1">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Area")
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.SLAREA, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address (Additional)", maxlength = 30 } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "State")
                                <sup style="color:Red;">*</sup>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.STATECD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "STATECD", onblur = "SelectSTATE(this.value,STATECD,STATE);", onkeyup = "GetHelp('" + @Url.Action("GetState", PageControllerName) + "','STATECD/STATE','1/0','Select State','STATECD')", @placeholder = "Code", maxlength = 2 } })
                                <img src="~/Image/search.png" class="Help_image_button" width="20px" class="Help_image_button" style="margin-top: 5px;" height="20px" title="Help" onclick="GetHelp('@Url.Action("GetState", PageControllerName )','STATECD/STATE','1/0','Select State','STATECD')" />
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.STATE, new { htmlAttributes = new { @class = "form-control", id = "STATE", @placeholder = "State Name", maxlength = 35, @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Country")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.COUNTRY, new { htmlAttributes = new { @class = "form-control", id = "COUNTRY", @placeholder = "COUNTRY", maxlength = 35, @list = "COUNTRYlist" } })
                                <datalist id="COUNTRYlist">
                                    @foreach (var jg in Model.Database_Combo2)
                                    {
                                        <option value="@jg.FIELD_VALUE" />
                                    }
                                </datalist>
                            </div>
                        </div>
                    </div>
                    <div class="row">

                        @*<div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Party Group")
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="editor-field">
                                    <select id="prtygrp" name="prtygrp" class="form-control">
                                        <option value="0" selected="selected">====Select Party Group====</option>
                                        @foreach (var i in Model.PartyGroup)
                                        {
                                            if (Model.DefaultAction == "A")
                                            {
                                                <option value="@i.PARTYCD">@i.PARTYNM</option>
                                            }
                                            else
                                            {
                                                if (Model.M_SUBLEG == null)
                                                {
                                                    <option value="@i.PARTYCD">@i.PARTYNM</option>
                                                }
                                                else
                                                {
                                                    if (Model.M_SUBLEG.PARTYGRP == i.PARTYCD)
                                                    {
                                                        <option value="@i.PARTYCD" selected="selected">@i.PARTYNM</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@i.PARTYCD">@i.PARTYNM</option>
                                                    }
                                                }

                                            }
                                        }
                                    </select>
                                </div>
                            </div>*@
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Account Name Of")
                            </div>
                        </div>
                        <div class="col-md-11">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.ACTNAMEOF, new { htmlAttributes = new { @class = "form-control", @placeholder = "Account Name Of/Party Bill Remarks", Id = "ACTNAMEOF", maxlength = 100 } })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Legacy Code")
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_CNTRL_HDR.PKGLEGACYCD, new { htmlAttributes = new { @class = "form-control", id = "Legacy", @placeholder = "Legacy", maxlength = 20 } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Nature of business activities")
                            </div>
                        </div>
                        <div class="col-md-6" style="margin-top:5px;margin-left:5px;width:auto;height:161px;overflow:auto; BORDER:2PX groove;BORDER-COLOR: gainsboro; ">
                            <div class="editor-field">
                                <table id="exampleB" style="margin-top: 0px;">
                                    @for (int i = 0; i < Model.BusinessActivity.Count(); i++)
                                    {
                                        <tr>
                                            <td align="center">
                                                @Html.CheckBoxFor(model => model.BusinessActivity[i].Checked, new { htmlAttributes = new { id = "chkid" } })
                                            </td>
                                            <td align="center" style="float:left;margin-top:1px;">
                                                @{ string STRC = Model.BusinessActivity[i].NATBUSNM.ToString();}
                                                @Html.DisplayFor(model => STRC)
                                                @Html.HiddenFor(model => model.BusinessActivity[i].NATBUSCD)
                                            </td>

                                        </tr>
                                                    }
                                </table>
                            </div>
                        </div>
                        @*<div class="col-md-3">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "General Ledger")
                                </div>
                            </div>
                            <div class="col-md-6" style="margin-top:5px;width:auto;height:161px; overflow:auto;">
                                <div class="editor-field">
                                    <table id="exampleGL" border="1" style="width: auto;">
                                        <thead>
                                            <tr>
                                                <th colspan="3">
                                                    <input type="text" value="" placeholder="Search" style="width:250px;border:none;outline:none" onkeyup="filterTable(event, 'exampleGL');" />
                                                </th>
                                            </tr>
                                            <tr style="background-color:#808080;" class="grid_th">
                                                <th align="center"></th>
                                                <th align="center">
                                                    G L Name
                                                </th>
                                                <th align="center">
                                                    G L Code
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @for (int i = 0; i < Model.GeneralLedgerDetails.Count(); i++)
                                            {
                                                <tr>
                                                    @if (Model.DefaultAction == "V")
                                                    {
                                                        if (Model.GeneralLedgerDetails[i].Checked == true)
                                                        {
                                                            <td align="center">
                                                                @Html.CheckBoxFor(model => model.GeneralLedgerDetails[i].Checked, new { htmlAttributes = new { id = "chkid1" } })
                                                            </td>
                                                            <td align="center">
                                                                @{ string STRC1 = Model.GeneralLedgerDetails[i].GLNM.ToString();}
                                                                @Html.DisplayFor(model => STRC1)
                                                                @Html.HiddenFor(model => model.GeneralLedgerDetails[i].GLNM)
                                                            </td>
                                                            <td align="center">
                                                                @{ string STRC = Model.GeneralLedgerDetails[i].GLCD.ToString();}
                                                                @Html.DisplayFor(model => STRC)
                                                                @Html.HiddenFor(model => model.GeneralLedgerDetails[i].GLCD)
                                                            </td>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <td align="center">
                                                                            @Html.CheckBoxFor(model => model.GeneralLedgerDetails[i].Checked, new { htmlAttributes = new { id = "chkid1" } })
                                                                        </td>
                                                                        <td align="center">
                                                                            @{ string STRC1 = Model.GeneralLedgerDetails[i].GLNM.ToString();}
                                                                            @Html.DisplayFor(model => STRC1)
                                                                            @Html.HiddenFor(model => model.GeneralLedgerDetails[i].GLNM)
                                                                        </td>
                                                                        <td align="center">
                                                                            @{ string STRC = Model.GeneralLedgerDetails[i].GLCD.ToString();}
                                                                            @Html.DisplayFor(model => STRC)
                                                                            @Html.HiddenFor(model => model.GeneralLedgerDetails[i].GLCD)
                                                                        </td>
                                                                                }

                                                </tr>
                                                                                }
                                        </tbody>
                                    </table>
                                </div>
                            </div>*@
                        <div class="col-md-1">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Party Type")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-6" style="margin-top:5px;width:auto;height:161px; overflow:auto;">
                            <div class="editor-field">
                                <table id="exampleLT" border="1" style="width: auto;">
                                    <thead>
                                        <tr>
                                            <th colspan="3">
                                                <input type="text" value="" placeholder="Search" style="width:100px;border:none;outline:none" onkeyup="filterTable(event, 'exampleLT');" />
                                            </th>
                                        </tr>
                                        <tr style="background-color:#808080;" class="grid_th">
                                            <th align="center"></th>
                                            <th align="center">
                                                Type Name
                                            </th>
                                            <th align="center">
                                                Type Code
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.LinkType.Count(); i++)
                                        {
                                            <tr>
                                                @if (Model.DefaultAction == "V")
                                                {
                                                    if (Model.LinkType[i].Checked == true)
                                                    {
                                                        <td align="center">
                                                            @Html.CheckBoxFor(model => model.LinkType[i].Checked, new { id = "PrtyTypChk_" + i })
                                                        </td>
                                                        <td align="center">
                                                            @{ string STRC1 = Model.LinkType[i].LINKNM.ToString();}
                                                            @Html.DisplayFor(model => STRC1)
                                                            @Html.HiddenFor(model => model.LinkType[i].LINKNM)
                                                        </td>
                                                        <td align="center">
                                                            @{ string STRC = Model.LinkType[i].LINKCD.ToString();}
                                                            @Html.DisplayFor(model => STRC)
                                                            @Html.HiddenFor(model => model.LinkType[i].LINKCD)
                                                        </td>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <td align="center">
                                                                        @Html.CheckBoxFor(model => model.LinkType[i].Checked, new { id = "PrtyTypChk_" + i })
                                                                    </td>
                                                                    <td align="center">
                                                                        @{ string STRC1 = Model.LinkType[i].LINKNM.ToString();}
                                                                        @Html.DisplayFor(model => STRC1)
                                                                        @Html.HiddenFor(model => model.LinkType[i].LINKNM)
                                                                    </td>
                                                                    <td align="center">
                                                                        @{ string STRC = Model.LinkType[i].LINKCD.ToString();}
                                                                        @Html.DisplayFor(model => STRC)
                                                                        @Html.HiddenFor(model => model.LinkType[i].LINKCD)
                                                                    </td>
                                                                            }

                                            </tr>
                                                                            }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "De - Active")
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-field" style="margin-top:6px;">
                                @Html.CheckBoxFor(model => model.Checked)
                            </div>
                        </div>
                    </div>

                </div>
                <div id="StatutoryInfo" class="tab-pane fade" style="margin-top: 10px;">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "PAN No.")
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.PANNO, new { htmlAttributes = new { @class = "form-control", Id = "PANNO", @style = "text-transform:uppercase", maxlength = 15, @placeholder = "Pan No." } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "CEN No.(Transporter)")
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.CENNO, new { htmlAttributes = new { @class = "form-control", Id = "CENNO", @style = "text-transform:uppercase", maxlength = 15, @placeholder = "CEN(Transporter)" } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "TAN No.")
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.TANNO, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:uppercase", maxlength = 15, @placeholder = "TAN No." } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "CIN No.")
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.CINNO, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:uppercase", maxlength = 25, @placeholder = "CIN No." } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        @*<div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "GST No.")
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.M_SUBLEG.GSTNO, new { htmlAttributes = new { @class = "form-control", Id = "GSTNO", @style = "text-transform:uppercase", maxlength = 15, @placeholder = "GST No." } })
                                </div>
                            </div>*@
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "GST Date")
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.GSTDT, new { htmlAttributes = new { @class = "form-control", @placeholder = "GST Date", maxlength = 10 } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Trade License No")
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.STATNO_1, new { htmlAttributes = new { @class = "form-control", id = "STATNO_1", @placeholder = "Trade License No" } })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Trade License Date")
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.STATDT_1, new { htmlAttributes = new { @class = "form-control", id = "STATDT_1", @placeholder = "License Date" } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Company Type")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                <select id="comtype" name="comtype" class="form-control" onchange="">
                                    <option value="" selected="selected">==Select==</option>
                                    @foreach (var i in Model.CompanyType)
                                    {
                                        if (Model.DefaultAction == "A")
                                        {
                                            <option value="@i.COMPTYCD">@i.COMPTYNM</option>
                                        }
                                        else
                                        {
                                            if (Model.M_SUBLEG == null)
                                            {
                                                <option value="@i.COMPTYCD">@i.COMPTYNM</option>
                                            }
                                            else
                                            {
                                                if (Model.M_SUBLEG.SLCOMPTYPE == i.COMPTYCD)
                                                {
                                                    <option value="@i.COMPTYCD" selected="selected">@i.COMPTYNM</option>
                                                }
                                                else
                                                {
                                                    <option value="@i.COMPTYCD">@i.COMPTYNM</option>
                                                }
                                            }
                                        }

                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Legal Name , if any")
                            </div>
                        </div>
                        <div class="col-md-10">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.PROPNAME, new { htmlAttributes = new { @class = "form-control", id = "PROPNAME", maxlength = 100, @placeholder = "Name as per GST/ Income Tax" } })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Aadhar No. (Optional)")
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.ADHAARNO, new { htmlAttributes = new { @class = "form-control", maxlength = 16, @placeholder = "Adhar No. (Optional)" } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Registration Type")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.M_SUBLEG.REGNTYPE, new SelectList(Model.RegistrationType, "Value", "Text"), "---Select---", new { @class = "form-control", @id = "REGNTYPE" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Service Type")
                            </div>
                        </div>
                        <div class="col-md-8" style="border: 2px groove;">
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.M_SUBLEG.CMPNONCMP, "L", new { onclick = "return false" })  @Html.Label("Company ")
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.M_SUBLEG.CMPNONCMP, "I", new { onclick = "return false" })  @Html.Label("Non Company ")
                            </label>
                        </div>
                        <div class="col-md-10">
                            <div class="editor-label" style="margin-top: 6px;">
                                @if (Model.DefaultAction != "V")
                                {
                                    @Html.Label("", "Service Type Will depend on Company Type. It is autosaving property.")
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", " TCS Applicable")
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-field" style="margin-top:6px;">
                            @Html.CheckBoxFor(model => model.TCSAPPL)
                        </div>
                    </div>

                </div>
                <div id="Communication" class="tab-pane fade" style="margin-top: 10px;">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "GPS Location")
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.GPSLAT, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return numericOnly(this,8);", @placeholder = "Latitude", maxlength = 15 } })
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.GPSLOT, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return numericOnly(this,8);", @placeholder = "Longtitude", maxlength = 15 } })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Phone")
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.SLPHNO, new { htmlAttributes = new { @class = "form-control", @placeholder = "SLPHNO", maxlength = 30 } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Office Phone No.")
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.PHNO1STD, new { htmlAttributes = new { @class = "form-control", id = "PHNO1STD", @placeholder = "Std", @onkeypress = "return event.charCode > 47 && event.charCode < 58;", maxlength = 5 } })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.PHNO1, new { htmlAttributes = new { @class = "form-control", id = "PHNO1", @placeholder = "Number", @onkeypress = "return event.charCode > 47 && event.charCode < 58;", @type = "text", maxlength = 10 } })
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.PHNO2STD, new { htmlAttributes = new { @class = "form-control", id = "PHNO2STD", @placeholder = "Std", @onkeypress = "return event.charCode > 47 && event.charCode < 58;", maxlength = 5 } })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.PHNO2, new { htmlAttributes = new { @class = "form-control", id = "PHNO2", @placeholder = "Number", @onkeypress = "return event.charCode > 47 && event.charCode < 58;", @type = "text", maxlength = 10 } })

                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.PHNO3STD, new { htmlAttributes = new { @class = "form-control", id = "PHNO3STD", @placeholder = "Std", @onkeypress = "return event.charCode > 47 && event.charCode < 58;", maxlength = 5 } })

                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.PHNO3, new { htmlAttributes = new { @class = "form-control", id = "PHNO3", @placeholder = "Number", @onkeypress = "return event.charCode > 47 && event.charCode < 58;", @type = "text", maxlength = 10 } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Website")
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.WEBADDR, new { htmlAttributes = new { @class = "form-control", @placeholder = "Website", maxlength = 100 } })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Office Email")
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.OFCEMAIL, new { htmlAttributes = new { @class = "form-control", @placeholder = "Office Email", maxlength = 50 } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Facebook ID")
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.FACEBOOK_ID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Facdbook ID", maxlength = 100 } })

                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Twitter ID")
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.TWITTER_ID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Twitter ID", maxlength = 100 } })

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Registered Email")
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.REGEMAILID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Registered Email", maxlength = 60 } })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Registered Mobile")
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.REGMOBILE, new { htmlAttributes = new { @class = "form-control", @placeholder = "Registered Mobile", @onkeypress = "return event.charCode > 47 && event.charCode < 58;", @type = "text", maxlength = 10 } })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Whatsapp No.")
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.WHATSAPP_NO, new { htmlAttributes = new { @class = "form-control", @placeholder = "WhatsApp No.", @onkeypress = "return event.charCode > 47 && event.charCode < 58;", @type = "text", maxlength = 10 } })
                            </div>
                        </div>
                    </div>
                    <div class="row" style="margin-top: 11px;border:groove;background-color:#c4b9b9;height:auto;">
                        <div>
                            <div id="partialdiv" style="margin-top:0px;">
                                @Html.Partial("_SUB_LEDGER")
                            </div>

                        </div>
                    </div>
                </div>


                <div id="OthAdd" class="tab-pane fade" style="margin-top: 10px;">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Address Line 1")
                            </div>
                        </div>
                        <div class="col-md-10">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.OTHADD1, new { htmlAttributes = new { @class = "form-control", @id = "OTHADD1", @placeholder = "Address Line 1", maxlength = 50 } })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Address Line 2")
                            </div>
                        </div>
                        <div class="col-md-10">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.OTHADD2, new { htmlAttributes = new { @class = "form-control", @id = "OTHADD2", @placeholder = "Address Line 2", maxlength = 50 } })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Address Line 3")
                            </div>
                        </div>
                        <div class="col-md-10">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.OTHADD3, new { htmlAttributes = new { @class = "form-control", @id = "OTHADD3", @placeholder = "Address Line 3", maxlength = 50 } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "City")
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.OTHADD4, new { htmlAttributes = new { @class = "form-control", @id = "OTHADD4", @placeholder = "City", maxlength = 50 } })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Pin Code")
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.OTHADDPIN, new { htmlAttributes = new { @class = "form-control", @id = "OTHADDPIN", @onkeypress = "return numericOnly(this);", @placeholder = "Pin Code", maxlength = 7 } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Email")
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.OTHADDEMAIL, new { htmlAttributes = new { @class = "form-control", @id = "OTHADDEMAIL", @placeholder = "Email", maxlength = 50 } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Note")
                            </div>
                        </div>
                        <div class="col-md-11">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.OTHADDREM, new { htmlAttributes = new { @class = "form-control", @id = "OTHADDREM", @placeholder = "Note", maxlength = 100 } })
                            </div>
                        </div>
                    </div>

                </div>
                <div id="FullAddress" class="tab-pane fade" style="margin-top: 10px;">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Address Line 1")
                            </div>
                        </div>
                        <div class="col-md-10">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.ADD1, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Address Line 2")
                            </div>
                        </div>
                        <div class="col-md-10">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.ADD2, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Address Line 3")
                            </div>
                        </div>
                        <div class="col-md-10">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.ADD3, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Address Line 4")
                            </div>
                        </div>
                        <div class="col-md-10">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.ADD4, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Address Line 5")
                            </div>
                        </div>
                        <div class="col-md-10">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.ADD5, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Address Line 6")
                            </div>
                        </div>
                        <div class="col-md-10">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.ADD6, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Address Line 7")
                            </div>
                        </div>
                        <div class="col-md-10">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.M_SUBLEG.ADD7, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>
                </div>



                <div id="BankDetails" class="tab-pane fade" style="margin-top: 10px;">
                    <div class="row" style="margin-top: 11px;height:auto;background-color:#c4b9b9">
                        <div id="partialdivBank">
                            @Html.Partial("_SUB_LEDGER_BANK")
                        </div>
                    </div>
                </div>
                <div id="TDSDetails" class="tab-pane fade" style="margin-top: 10px;">
                    <div class="row" style="margin-top: 11px;width:1120px;height:auto;background-color:#c4b9b9">
                        <div id="partialdivCompany">
                            @Html.Partial("_SUB_LEDGER_COMPANY")
                        </div>

                    </div>
                </div>
                <div id="CompanyLocation" class="tab-pane fade" style="margin-top: 10px;">
                    <div class="row">
                        <div class="editor-field">
                            <table id="CompanyLoation" cellpadding="3PX" cellspacing="3PX" border="1" width="300px" style="margin-left:15px;">
                                <tr>
                                    <td align="center">
                                        <input type="checkbox" name="Test" onclick="SetAllCheckBoxes(this, 'CompanyLoation')" />
                                    </td>
                                    <td align="center">
                                        Company Name
                                    </td>
                                    <td align="center">
                                        Location Name
                                    </td>
                                </tr>
                                @for (int i = 0; i < Model.CompanyLocationName.Count(); i++)
                                {
                                    <tr>
                                        <td align="center">
                                            @Html.CheckBoxFor(model => model.CompanyLocationName[i].Checked, new { id = "SelectCheck_" + i })
                                        </td>
                                        <td align="center">
                                            @{ string STRC = Model.CompanyLocationName[i].COMPNM.ToString();}
                                            @Html.DisplayFor(model => STRC)
                                            @Html.HiddenFor(model => model.CompanyLocationName[i].COMPCD)
                                        </td>
                                        <td align="center">
                                            @{ string STRL = Model.CompanyLocationName[i].LOCNM.ToString();}
                                            @Html.DisplayFor(model => STRL)
                                            @Html.HiddenFor(model => model.CompanyLocationName[i].LOCCD)
                                        </td>
                                    </tr>
                                                }
                            </table>
                        </div>
                    </div>
                </div>
                <div id="Other" class="tab-pane fade" style="margin-top: 10px;">
                    <div class="row" style="margin-top: 11px;width:1120px;height:auto;background-color:#c4b9b9">
                        <div id="partialdivLocation">
                            @Html.Partial("_SUB_LEDGER_OTHER")
                        </div>
                    </div>
                </div>
                <div id="Documents" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                    <div class="row" style="margin-top: 11px;width:max-content;height:auto;background-color:#c4b9b9">
                        <div id="partialdivdoc">
                            @Html.Partial("_UPLOADDOCUMENTS")
                        </div>
                    </div>
                </div>
            </div>
        </div>
                                                }
                                                else
                                                {
                                                    @ViewBag.ErrorMessage
                                                }
                                                <div class="container">
                                                    <div id="helpDIV">

                                                    </div>
                                                </div>
                                                }