@model Improvar.ViewModels.TransactionSalePosEntry
@{
    string PageControllerName = "T_SALE_POS";
    ViewBag.Title = "Cash Sale (Pos)";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    switch (Model.MENU_PARA)
    {
        case "SBCM":
            ViewBag.Title = "Cash Memo"; break;
        case "SBCMR":
            ViewBag.Title = "Cash Memo Credit Note"; break;
        default: ViewBag.Title = ""; break;
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .TextAreaRemarks {
        height: 190px;
    }
</style>
<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/Cloth.js?Ver=@System.DateTime.Now"></script>
<script src="~/Scripts/SalePos.js?Ver=@System.DateTime.Now"></script>
<script type="text/javascript">
    $("#WaitingMode").show();
    $(document).ready(function () {
        if ("@Model.DefaultAction" == "V" || "@Model.DefaultAction" == "D") {
            modeView();
        }
        else if ("@Model.DefaultAction" == "E") {
            var BARGENTYPE = $("#BARGENTYPE").val();
            if (BARGENTYPE == "E") {
                $("#BARGENTYPE").attr("style", "pointer-events:none");
            }
            if ('@Model.MENU_PARA' == "SB") {
                $('#PACKSLIP_HELP').hide("");
                $("#LINKDOCNO").attr("readonly", "readonly");
            }
            else {
                GetAllMtrljobcd();
            }
            Checked_Disable();
            changeBARGENTYPE();
        }
        else if ("@Model.DefaultAction" == "A") {
            $('form :input:enabled:visible:not([readonly]):first').focus();
            if ('@Model.MENU_PARA' != "SB") {
                GetAllMtrljobcd();
            }
        }
        if ("@Model.LINKDOCNO" != "") {

            $('#_T_SALE_POS_PRODUCT_GRID input').attr('readonly', 'readonly');
            $('#_T_SALE_POS_DETAIL_GRID input').removeAttr("onblur");
            $('#_T_SALE_POS_PRODUCT_GRID input').attr('TabIndex', '-1');
        }
        $("#WaitingMode").hide();
    });
</script>
<script>
    function requiredFieldValidator() {
        if (!emptyFieldCheck("Please Select / Enter Document Date", "DOCDT")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Party", "RTDEBCD")) { return false; }
        //if (!emptyFieldCheck("Please Select / Enter Godown", "GOCD")) {
        //    $("li").removeClass("active").addClass("");
        //    $(".nav-tabs li:first-child").addClass('active');
        //    $(".tab-content div").removeClass("active");
        //    $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
        //    return false;
        //}
        var T_PER = 0;
        var GridRow = $("#_T_SALE_POS_SALESMAN_GRID > tbody > tr").length;
        for (var i = 0; i <= GridRow - 1; i++) {
            var PER_ = $("#PER_" + i).val();
            if (PER_ == "") { PER_ = parseFloat(0); } else { PER_ = parseFloat(PER_) }
            if (PER_ != "") { T_PER = T_PER + parseFloat(PER_); } else { T_PER = T_PER + parseFloat(0); }
            //document.getElementById("PER_" + i).value = PER_.toFixed(2);
        }
        if (T_PER > 100) {
            msgWarning("Total of Percentage(%) Should be 100 !!");
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:fourth-child").addClass('active');
            $(".tab-content div").removeClass("active");
            $(".tab-content div:fourth-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            return false;
        }

        if ("@Model.MENU_PARA" == "PB") {
            if (!emptyFieldCheck("Please Enter Purchase bill no", "PREFNO")) {
                $("li").removeClass("active").addClass("");
                $(".nav-tabs li:first-child").addClass('active');
                $(".tab-content div").removeClass("active");
                $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
                return false;
            }
            if (!emptyFieldCheck("Please Enter Purchase bill date", "PREFDT")) {
                $("li").removeClass("active").addClass("");
                $(".nav-tabs li:first-child").addClass('active');
                $(".tab-content div").removeClass("active");
                $(".tab-content div:first-child").removeClass("tab-pane fade").addClass("tab-pane fade in active");
                return false;
            }
        }
        return true;
    }
</script>
<script>
    @{
        string mldauto = "";
        if (@Model.T_CNTRL_HDR != null)
        {
            if (@Model.T_CNTRL_HDR.AUTONO != null)
            {
                mldauto = Model.T_CNTRL_HDR.AUTONO.ToString();
                if (Model.T_CNTRL_HDR.CANCEL == "Y")
                {
                    ViewBag.formname = ViewBag.formname + "   " + "(Record Cancelled)";
                }
            }
        }
        else
        {
            mldauto = "";
        }
    }
    function ModifyLogDetails() {
        if ("@Model.DefaultAction" == "V") {
            ModifyLogDtl('@mldauto');
        }
    }
</script>
<script>
    $(function () {
        if ("@Model.DefaultAction" != "V") {
            $("#DOCDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate', minDate: '@Model.mindate' });
            $("#LRDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate' });
            $("#PREFDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate' });
            $("#POREFDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate' });
        }
    });
</script>
<script>
    function SelectBARCODEDetail(id, BARNO, DOCDT) {
        debugger;
        var docdt = document.getElementById(DOCDT.id).value;
        if (id == "") {
            $("#" + BARNO.id).val("");
            //$("#" + CLASS1NM.id).val("");
        }
        else {
            $.ajax({
                type: 'POST',
                beforesend: $("#WaitingMode").show(),
                url: "@Url.Action("GetBarCodeDetails", PageControllerName)",
                data: $('form').serialize() + "&val=" + id + "&Code=" + docdt,
                success: function (result) {
                    var MSG = result.indexOf(String.fromCharCode(181));
                    if (result != 0) {
                        $("#WaitingMode").hide();
                        $("#partialdivBarCodeTab").animate({ marginTop: '0px' }, 50);
                        $("#partialdivBarCodeTab").html(result);
                    }
                    else {

                        msgInfo("Invalid Bar Code ! Please Enter a Valid Bar Code !!");
                        message_value = BARNO.id;

                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
</script>
<script>
    //function AmountCalculation(i) {
    //    var DefaultAction = $("#DefaultAction").val();
    //    if (DefaultAction == "V") return true;
    //    var A_NOS = document.getElementById("B_T_NOS").value;
    //    var B_QNTY = document.getElementById("B_T_QNTY").value;
    //    var D_GROSS_AMT = document.getElementById("T_GROSS_AMT").value;
    //    var E_NET_AMT = document.getElementById("T_NET_AMT").value;
    //    var RT = document.getElementById("AMTRATE_" + i).value;
    //    var IGST_PER = document.getElementById("AIGSTPER_" + i).value;
    //    if (IGST_PER == "") { IGST_PER = parseFloat(0); } else { IGST_PER = parseFloat(IGST_PER) }
    //    var CGST_PER = document.getElementById("ACGSTPER_" + i).value;
    //    if (CGST_PER == "") { CGST_PER = parseFloat(0); } else { CGST_PER = parseFloat(CGST_PER) }
    //    var SGST_PER = document.getElementById("ASGSTPER_" + i).value;
    //    if (SGST_PER == "") { SGST_PER = parseFloat(0); } else { SGST_PER = parseFloat(SGST_PER) }
    //    var CESS_PER = document.getElementById("ACESSPER_" + i).value;
    //    if (CESS_PER == "") { CESS_PER = parseFloat(0); } else { CESS_PER = parseFloat(CESS_PER) }
    //    var DUTY_PER = document.getElementById("ADUTYPER_" + i).value;
    //    if (DUTY_PER == "") { DUTY_PER = parseFloat(0); } else { DUTY_PER = parseFloat(DUTY_PER) }
    //    var CALC_TYPE = document.getElementById("CALCTYPE_" + i).value;
    //    var CALC_FORMULA = document.getElementById("CALCFORMULA_" + i).value;
    //    if (A_NOS == "") { A_NOS = parseFloat(0); }
    //    if (B_QNTY == "") { B_QNTY = parseFloat(0); }
    //    if (D_GROSS_AMT == "") { D_GROSS_AMT = parseFloat(0); }
    //    if (E_NET_AMT == "") { E_NET_AMT = parseFloat(0); }
    //    if (RT == "") { RT = parseFloat(0); }
    //    var AMOUNT = 0;
    //    if (CALC_TYPE == "F") { AMOUNT = parseFloat(RT); }
    //    else if (CALC_TYPE == "P") {
    //        if (CALC_FORMULA == "A") { AMOUNT = parseFloat(A_NOS) * parseFloat(RT); }
    //        else if (CALC_FORMULA == "B") { AMOUNT = parseFloat(B_QNTY) * parseFloat(RT); }
    //        else if (CALC_FORMULA == "D") { AMOUNT = parseFloat(D_GROSS_AMT) * parseFloat(RT); }
    //        else if (CALC_FORMULA == "E") { AMOUNT = parseFloat(E_NET_AMT) * parseFloat(RT); }
    //    }
    //    document.getElementById("A_AMT_" + i).value = AMOUNT;
    //    var IGST_AMT = 0; var CGST_AMT = 0; var SGST_AMT = 0; var CESS_AMT = 0; var DUTY_AMT = 0;

    //    // IGST CALCULATION
    //    document.getElementById("AIGSTPER_" + i).value = IGST_PER;
    //    IGST_AMT = (AMOUNT * IGST_PER) / 100;

    //    AmountChange(document.getElementById("AIGSTAMT_" + i), document.getElementById("A_AMT_" + i), document.getElementById("AIGSTPER_" + i), document.getElementById("ANETAMT_" + i),
    //    document.getElementById("ACGSTAMT_" + i), document.getElementById("ASGSTAMT_" + i), document.getElementById("ACESSAMT_" + i), document.getElementById("ADUTYAMT_" + i));
    //    document.getElementById("AIGSTAMT_" + i).value = parseFloat(IGST_AMT).toFixed(2);
    //    //END

    //    // CGST CALCULATION
    //    document.getElementById("ACGSTPER_" + i).value = CGST_PER;
    //    CGST_AMT = (AMOUNT * CGST_PER) / 100;
    //    AmountChange(document.getElementById("ACGSTAMT_" + i), document.getElementById("A_AMT_" + i), document.getElementById("ACGSTPER_" + i), document.getElementById("ANETAMT_" + i),
    //        document.getElementById("AIGSTAMT_" + i), document.getElementById("ASGSTAMT_" + i), document.getElementById("ACESSAMT_" + i), document.getElementById("ADUTYAMT_" + i));
    //    document.getElementById("ACGSTAMT_" + i).value = parseFloat(CGST_AMT).toFixed(2);
    //    //END
    //    // SGST CALCULATION
    //    document.getElementById("ASGSTPER_" + i).value = SGST_PER;
    //    SGST_AMT = (AMOUNT * SGST_PER) / 100;
    //    AmountChange(document.getElementById("ASGSTAMT_" + i), document.getElementById("A_AMT_" + i), document.getElementById("ASGSTPER_" + i), document.getElementById("ANETAMT_" + i),
    //        document.getElementById("AIGSTAMT_" + i), document.getElementById("ASGSTAMT_" + i), document.getElementById("ACESSAMT_" + i), document.getElementById("ADUTYAMT_" + i));
    //    document.getElementById("ASGSTAMT_" + i).value = parseFloat(SGST_AMT).toFixed(2);
    //    //END
    //    // CESS CALCULATION
    //    document.getElementById("ACESSPER_" + i).value = CESS_PER;
    //    CESS_AMT = (AMOUNT * CESS_PER) / 100;
    //    AmountChange(document.getElementById("ACESSAMT_" + i), document.getElementById("A_AMT_" + i), document.getElementById("ACESSPER_" + i), document.getElementById("ANETAMT_" + i),
    //        document.getElementById("AIGSTAMT_" + i), document.getElementById("ASGSTAMT_" + i), document.getElementById("ACESSAMT_" + i), document.getElementById("ADUTYAMT_" + i));
    //    document.getElementById("ACESSAMT_" + i).value = parseFloat(CESS_AMT).toFixed(2);
    //    //END
    //    // DUTY CALCULATION

    //    document.getElementById("ADUTYPER_" + i).value = DUTY_PER;
    //    DUTY_AMT = (AMOUNT * DUTY_PER) / 100;
    //    AmountChange(document.getElementById("ADUTYAMT_" + i), document.getElementById("A_AMT_" + i), document.getElementById("ADUTYPER_" + i), document.getElementById("ANETAMT_" + i),
    //    document.getElementById("AIGSTAMT_" + i), document.getElementById("ASGSTAMT_" + i), document.getElementById("ACESSAMT_" + i), document.getElementById("ADUTYAMT_" + i));
    //    document.getElementById("ADUTYAMT_" + i).value = parseFloat(DUTY_AMT).toFixed(2);
    //    //END

    //    var NET_AMT = AMOUNT + parseFloat(document.getElementById("AIGSTAMT_" + i).value) + parseFloat(document.getElementById("ACGSTAMT_" + i).value) +
    //                 parseFloat(document.getElementById("ASGSTAMT_" + i).value) + parseFloat(document.getElementById("ACESSAMT_" + i).value) + parseFloat(document.getElementById("ADUTYAMT_" + i).value);
    //    document.getElementById("ANETAMT_" + i).value = parseFloat(NET_AMT).toFixed(2);

    //    //GRID TOTAL CALCULATION
    //    AmountCalculateTotal();

    //}
    //function AmountChange(id, AMOUNT, PER, NETAMT, AMT1, AMT2, AMT3, AMT4) {
    //    var DefaultAction = $("#DefaultAction").val();
    //    if (DefaultAction == "V") return true;
    //    var NEW_AMT = document.getElementById(id.id).value;
    //    var PERCENTAGE = document.getElementById(PER.id).value;
    //    var AMT = document.getElementById(AMOUNT.id).value;
    //    var AMT_1 = document.getElementById(AMT1.id).value;
    //    var AMT_2 = document.getElementById(AMT2.id).value;
    //    var AMT_3 = document.getElementById(AMT3.id).value;
    //    var AMT_4 = document.getElementById(AMT4.id).value;
    //    if (PERCENTAGE != "") {
    //        var CAL_ABET_AMT = parseFloat(AMT) * parseFloat(PERCENTAGE) / 100;
    //        var BAL_AMT = Math.abs(parseFloat(NEW_AMT) - parseFloat(CAL_ABET_AMT));
    //        if (BAL_AMT <= 1) {
    //            document.getElementById(id.id).value = parseFloat(NEW_AMT).toFixed(2);
    //            document.getElementById(NETAMT.id).value = parseFloat(parseFloat(NEW_AMT) + parseFloat(AMT) + parseFloat(AMT_1) + parseFloat(AMT_2) + parseFloat(AMT_3) + parseFloat(AMT_4)).toFixed(2);
    //        }
    //        else {
    //            document.getElementById(id.id).value = parseFloat(CAL_ABET_AMT).toFixed(2);
    //            document.getElementById(NETAMT.id).value = parseFloat(parseFloat(CAL_ABET_AMT) + parseFloat(AMT) + parseFloat(AMT_1) + parseFloat(AMT_2) + parseFloat(AMT_3) + parseFloat(AMT_4)).toFixed(2);
    //        }
    //    }
    //    //GRID TOTAL CALCULATION
    //    AmountCalculateTotal();

    //}
    //function AmountCalculateTotal() {
    //    var DefaultAction = $("#DefaultAction").val();
    //    if (DefaultAction == "V") return true;
    //    var T_CURR_AMT = 0; var T_AMT = 0; var T_IGST_AMT = 0; var T_CGST_AMT = 0; var T_SGST_AMT = 0; var T_CESS_AMT = 0; var T_DUTY_AMT = 0; var T_NET_AMT = 0;
    //    var GridRow = $("#_T_SALE_POS_AMOUNT_GRID > tbody > tr").length;
    //    for (var i = 0; i <= GridRow - 1; i++) {
    //        var CURR_AMT = document.getElementById("ACURR_AMT_" + i).value;
    //        if (CURR_AMT != "") { T_CURR_AMT = T_CURR_AMT + parseFloat(CURR_AMT); } else { T_CURR_AMT = T_CURR_AMT + parseFloat(0); }

    //        var AMT = document.getElementById("A_AMT_" + i).value;
    //        if (AMT != "") { T_AMT = T_AMT + parseFloat(AMT); } else { T_AMT = T_AMT + parseFloat(0); }

    //        var IGST_AMT = document.getElementById("AIGSTAMT_" + i).value;
    //        if (IGST_AMT != "") { T_IGST_AMT = T_IGST_AMT + parseFloat(IGST_AMT); } else { T_IGST_AMT = T_IGST_AMT + parseFloat(0); }

    //        var CGST_AMT = document.getElementById("ACGSTAMT_" + i).value;
    //        if (CGST_AMT != "") { T_CGST_AMT = T_CGST_AMT + parseFloat(CGST_AMT); } else { T_CGST_AMT = T_CGST_AMT + parseFloat(0); }

    //        var SGST_AMT = document.getElementById("ASGSTAMT_" + i).value;
    //        if (SGST_AMT != "") { T_SGST_AMT = T_SGST_AMT + parseFloat(SGST_AMT); } else { T_SGST_AMT = T_SGST_AMT + parseFloat(0); }

    //        var CESS_AMT = document.getElementById("ACESSAMT_" + i).value;
    //        if (CESS_AMT != "") { T_CESS_AMT = T_CESS_AMT + parseFloat(CESS_AMT); } else { T_CESS_AMT = T_CESS_AMT + parseFloat(0); }

    //        var DUTY_AMT = document.getElementById("ADUTYAMT_" + i).value;
    //        if (DUTY_AMT != "") { T_DUTY_AMT = T_DUTY_AMT + parseFloat(DUTY_AMT); } else { T_DUTY_AMT = T_DUTY_AMT + parseFloat(0); }

    //        var NET_AMT = document.getElementById("ANETAMT_" + i).value;
    //        if (NET_AMT != "") { T_NET_AMT = T_NET_AMT + parseFloat(NET_AMT); } else { T_NET_AMT = T_NET_AMT + parseFloat(0); }

    //    }
    //    document.getElementById("A_T_CURR").value = parseFloat(T_CURR_AMT).toFixed(2);
    //    document.getElementById("A_T_AMOUNT").value = parseFloat(T_AMT).toFixed(2);
    //    document.getElementById("A_T_IGST").value = parseFloat(T_IGST_AMT).toFixed(2);
    //    document.getElementById("A_T_CGST").value = parseFloat(T_CGST_AMT).toFixed(2);
    //    document.getElementById("A_T_SGST").value = parseFloat(T_SGST_AMT).toFixed(2);
    //    document.getElementById("A_T_CESS").value = parseFloat(T_CESS_AMT).toFixed(2);
    //    document.getElementById("A_T_DUTY").value = parseFloat(T_DUTY_AMT).toFixed(2);
    //    document.getElementById("A_T_NET").value = parseFloat(T_NET_AMT).toFixed(2);

    //    //BILL AMOUNT CALCULATION
    //    BillAmountCalculate();

    //}
    //function BillAmountCalculate() {
    //    var DefaultAction = $("#DefaultAction").val();
    //    if (DefaultAction == "V") return true;
    //    debugger;
    //    var R_TOTAL_BILL_AMOUNT = 0;
    //    var TOTAL_ROUND = 0;
    //    var netamt = 0;
    //    var ROUND_TAG = document.getElementById("RoundOff").checked;
    //    var D_TOTALNOS = 0, D_TOTALQNTY = 0, D_TOTALTAXVAL = 0, A_TOTALTAXVAL = 0, D_TOTALIGST = 0, A_TOTALIGST = 0, D_TOTALCGST = 0, A_TOTALCGST = 0, D_TOTALSGST = 0, A_TOTALSGST = 0, D_TOTALNETAMT = 0, A_TOTALNETAMT = 0;
    //    var T_NOS = $("#T_NOS").val();
    //    if (T_NOS != "") { D_TOTALNOS = D_TOTALNOS + parseFloat(T_NOS); } else { D_TOTALNOS = D_TOTALNOS + parseFloat(0); }

    //    var T_QNTY = $("#T_QNTY").val();
    //    if (T_QNTY != "") { D_TOTALQNTY = D_TOTALQNTY + parseFloat(T_QNTY); } else { D_TOTALQNTY = D_TOTALQNTY + parseFloat(0); }

    //    var T_GROSS_AMT = $("#T_GROSS_AMT").val();
    //    if (T_GROSS_AMT != "") { D_TOTALTAXVAL = D_TOTALTAXVAL + parseFloat(T_GROSS_AMT); } else { D_TOTALTAXVAL = D_TOTALTAXVAL + parseFloat(0); }

    //    var A_T_AMOUNT = $("#A_T_AMOUNT").val();
    //    if (A_T_AMOUNT != "") { A_TOTALTAXVAL = A_TOTALTAXVAL + parseFloat(A_T_AMOUNT); } else { A_TOTALTAXVAL = A_TOTALTAXVAL + parseFloat(0); }
    //    //
    //    var T_IGST_AMT = $("#T_IGST_AMT").val();
    //    if (T_IGST_AMT != "") { D_TOTALIGST = D_TOTALIGST + parseFloat(T_IGST_AMT); } else { D_TOTALIGST = D_TOTALIGST + parseFloat(0); }

    //    var A_T_IGST = $("#A_T_IGST").val();
    //    if (A_T_IGST != "") { A_TOTALIGST = A_TOTALIGST + parseFloat(A_T_IGST); } else { A_TOTALIGST = A_TOTALIGST + parseFloat(0); }

    //    var T_CGST_AMT = $("#T_CGST_AMT").val();
    //    if (T_CGST_AMT != "") { D_TOTALCGST = D_TOTALCGST + parseFloat(T_CGST_AMT); } else { D_TOTALCGST = D_TOTALCGST + parseFloat(0); }

    //    var A_T_CGST = $("#A_T_CGST").val();
    //    if (A_T_CGST != "") { A_TOTALCGST = A_TOTALCGST + parseFloat(A_T_CGST); } else { A_TOTALCGST = A_TOTALCGST + parseFloat(0); }

    //    var T_SGST_AMT = $("#T_SGST_AMT").val();
    //    if (T_SGST_AMT != "") { D_TOTALSGST = D_TOTALSGST + parseFloat(T_SGST_AMT); } else { D_TOTALSGST = D_TOTALSGST + parseFloat(0); }

    //    var A_T_SGST = $("#A_T_SGST").val();
    //    if (A_T_SGST != "") { A_TOTALSGST = A_TOTALSGST + parseFloat(A_T_SGST); } else { A_TOTALSGST = A_TOTALSGST + parseFloat(0); }

    //    var T_NET_AMT = $("#T_NET_AMT").val();
    //    if (T_NET_AMT != "") { D_TOTALNETAMT = D_TOTALNETAMT + parseFloat(T_NET_AMT); } else { D_TOTALNETAMT = D_TOTALNETAMT + parseFloat(0); }

    //    var A_T_NET = $("#A_T_NET").val();
    //    if (A_T_NET != "") { A_TOTALNETAMT = A_TOTALNETAMT + parseFloat(A_T_NET); } else { A_TOTALNETAMT = A_TOTALNETAMT + parseFloat(0); }

    //    var totaltaxval = 0;
    //    totaltaxval = parseFloat(parseFloat(D_TOTALTAXVAL) + parseFloat(A_TOTALTAXVAL)).toFixed(2);

    //    var totaltax = 0;
    //    totaltax = parseFloat(parseFloat(D_TOTALIGST) + parseFloat(A_TOTALIGST) + parseFloat(D_TOTALCGST) + parseFloat(A_TOTALCGST) + parseFloat(D_TOTALSGST) + parseFloat(A_TOTALSGST)).toFixed(2);

    //    var totalbillamt = 0;
    //    totalbillamt = parseFloat(parseFloat(D_TOTALNETAMT) + parseFloat(A_TOTALNETAMT)).toFixed(2);

    //    $("#TOTNOS").val(parseFloat(D_TOTALNOS).toFixed(0));
    //    $("#TOTQNTY").val(parseFloat(D_TOTALQNTY).toFixed(2));
    //    $("#TOTTAXVAL").val(parseFloat(totaltaxval).toFixed(2));
    //    $("#TOTTAX").val(parseFloat(totaltax).toFixed(2));

    //    //tcs
    //    var TCSPER = 0; TCSAMT = 0; TCSON = 0;
    //    var MENU_PARA = $("#MENU_PARA").val();
    //    //if (MENU_PARA != "SR" || MENU_PARA != "PR") {
    //    //    TCSPER = parseFloat(document.getElementById("TCSPER").value).toFixed(3);
    //    //    if (TCSPER == "" || TCSPER == "NaN") { TCSPER = parseFloat(0); }
    //    //    document.getElementById("TCSPER").value = parseFloat(TCSPER).toFixed(3);
    //    //    if (MENU_PARA == "PB") {
    //    //        TCSON = $("#TCSON").val();
    //    //        if (TCSON == "") { TCSON = parseFloat(0); } else { TCSON = parseFloat(TCSON); }
    //    //    }
    //    //    else {
    //    //        GetTCSON(totalbillamt);
    //    //        TCSON = $("#TCSON").val();
    //    //        if (TCSON == "") { TCSON = parseFloat(0); } else { TCSON = parseFloat(TCSON) }
    //    //    }
    //    //    TCSAMT = parseFloat(parseFloat(TCSON) * parseFloat(TCSPER) / 100);
    //    //    TCSAMT = CalculateTcsAmt(TCSAMT);
    //    //    if (MENU_PARA == "PB") {
    //    //        var NEW_TCSAMT = $("#TCSAMT").val();
    //    //        if (NEW_TCSAMT == "") { NEW_TCSAMT = parseFloat(0); } else { NEW_TCSAMT = parseFloat(NEW_TCSAMT) }

    //    //        var TCSON = $("#TCSON").val();
    //    //        if (TCSON == "") { TCSON = parseFloat(0); } else { TCSON = parseFloat(TCSON) }

    //    //        var TCSPER = $("#TCSPER").val();
    //    //        if (TCSPER == "") { TCSPER = parseFloat(0); } else { TCSPER = parseFloat(TCSPER) }

    //    //        var CAL_TCSAMT = TCSAMT;
    //    //        var BAL_AMT = Math.abs(parseFloat(NEW_TCSAMT) - parseFloat(CAL_TCSAMT));
    //    //        if (BAL_AMT <= 1 && NEW_TCSAMT > 0) {
    //    //            $("#TCSAMT").val(parseFloat(NEW_TCSAMT).toFixed(2));
    //    //            TCSAMT = NEW_TCSAMT;
    //    //        }
    //    //        else {
    //    //            $("#TCSAMT").val(parseFloat(CAL_TCSAMT).toFixed(2));
    //    //            TCSAMT = CAL_TCSAMT;
    //    //        }
    //    //    }
    //    //    else {
    //    //        document.getElementById("TCSAMT").value = parseFloat(TCSAMT).toFixed(2);

    //    //    }
    //    //}
    //    //
    //    totalbillamt = parseFloat(totalbillamt) + parseFloat(TCSAMT);
    //    var REVCHRG = $("#REVCHRG").val();
    //    if (REVCHRG == "Y") {
    //        totalbillamt = parseFloat(totalbillamt) - parseFloat(totaltax);
    //    }
    //    if (ROUND_TAG == true) {
    //        R_TOTAL_BILL_AMOUNT = Math.round(totalbillamt);
    //        TOTAL_ROUND = R_TOTAL_BILL_AMOUNT - totalbillamt;
    //        document.getElementById("BLAMT").value = parseFloat(R_TOTAL_BILL_AMOUNT).toFixed(2);
    //        document.getElementById("ROAMT").value = parseFloat(TOTAL_ROUND).toFixed(2);
    //    }
    //    else {
    //        TOTAL_ROUND = 0;
    //        document.getElementById("BLAMT").value = parseFloat(totalbillamt).toFixed(2);
    //        document.getElementById("ROAMT").value = parseFloat(TOTAL_ROUND).toFixed(2);
    //    }

    //}

    //function GetTCSON(billamount) {
    //    debugger;
    //    var DefaultAction = $("#DefaultAction").val();
    //    if (DefaultAction == "V") return true;
    //    var MENU_PARA = $("#MENU_PARA").val();
    //    var TCSON = 0;
    //    if ($("#TCSAPPL").val() != "Y") {
    //        TCSON = parseFloat(0);
    //    }
    //    else {
    //        var tdslimit = $("#TDSLIMIT").val();
    //        if (tdslimit == "") { tdslimit = parseFloat(0); } else { tdslimit = parseFloat(tdslimit) }

    //        var amt = $("#AMT").val();
    //        if (amt == "") { amt = parseFloat(0); } else { amt = parseFloat(amt) }

    //        var blamt = billamount;//$("#BILL_AMT").val();
    //        if (blamt == "") { blamt = parseFloat(0); } else { blamt = parseFloat(blamt) }

    //        var tcsamt = $("#TCSAMT").val();
    //        if (tcsamt == "") { tcsamt = parseFloat(0); } else { tcsamt = parseFloat(tcsamt) }

    //        var totaltaxableamt = $("#TOTTAXVAL").val();
    //        if (totaltaxableamt == "") { totaltaxableamt = parseFloat(0); } else { totaltaxableamt = parseFloat(totaltaxableamt) }

    //        var tdscalcon = $("#TDSCALCON").val();

    //        var TL = tdslimit;	//tdslimit from m_tds_cntrl_dtl
    //        var O = amt;	//amt from slcdtcscalcon func
    //        var B = blamt;//parseFloat(blamt - tcsamt);//	blamt - tcsamt
    //        var T = totaltaxableamt;//	total taxable amt


    //        if (tdscalcon == "B") {
    //            TCSON = parseFloat(parseFloat(O) + parseFloat(B) - parseFloat(TL));
    //        }
    //        else {// tdscalcon = "T"
    //            TCSON = parseFloat(parseFloat(O) + parseFloat(T) - parseFloat(TL));
    //        }

    //        if (TCSON < 0) TCSON = parseFloat(0);
    //    }
    //    $("#TCSON").val(parseFloat(TCSON).toFixed(2));
    //}

    function CalculateTcsAmt(TCSAMT) {
        debugger;
        var DefaultAction = $("#DefaultAction").val();
        if (DefaultAction == "V") return true;
        var TDSROUNDCAL = $("#TDSROUNDCAL").val();
        if (TDSROUNDCAL == "Y" || TDSROUNDCAL == "") {
            TCSAMT = Math.round(TCSAMT); //==yes or null or blank
        }
        else
            if (TDSROUNDCAL == "N") {
                TCSAMT = Math.ceil(TCSAMT); //==nxt
            }
            else
                if (TDSROUNDCAL == "L") {
                    TCSAMT = Math.floor(TCSAMT); //==least
                }
                else {
                    TCSAMT = TCSAMT; //==2
                }
        return TCSAMT;
    }
</script>
<script>
    function CalculateSalesMan_Amt_Details(i) {
        debugger;
        var T_PER = 0; var t_blamt = 0; var t_itamt = 0; var PER_ = 0;
        var GridRow = $("#_T_SALE_POS_SALESMAN_GRID > tbody > tr").length;
       // for (var i = 0; i <= GridRow - 1; i++) {
            PER_ = $("#S_PER_" + i).val();
            if (PER_ == "") { PER_ = parseFloat(0); } else { PER_ = parseFloat(PER_) }
            if (PER_ != "") { T_PER = T_PER + parseFloat(PER_); } else { T_PER = T_PER + parseFloat(0); }
            document.getElementById("S_PER_" + i).value = PER_.toFixed(2);
      
       // }
            if (T_PER > 100) { msgWarning("Total of Percentage(%) Should be 100 !!"); $("#S_PER_" + i).val(""); $("#S_PER_" + i).focus(); }
        else {
            for (var i = 0; i <= GridRow - 1; i++) {
                var T_GROSS_AMT = $("#T_GROSS_AMT").val();
                if (T_GROSS_AMT == "") { T_GROSS_AMT = parseFloat(0); } else { T_GROSS_AMT = parseFloat(T_GROSS_AMT) }
                var R_T_GROSS_AMT = $("#R_T_GROSS_AMT").val();
                if (R_T_GROSS_AMT == "") { R_T_GROSS_AMT = parseFloat(0); } else { R_T_GROSS_AMT = parseFloat(R_T_GROSS_AMT) }
                var PER_ = $("#S_PER_" + i).val();
                if (PER_ == "") { PER_ = parseFloat(0); } else { PER_ = parseFloat(PER_) }
                var PAYABLE = $("#PAYABLE").val();
                if (PAYABLE == "") { PAYABLE = parseFloat(0); } else { PAYABLE = parseFloat(PAYABLE) }
                document.getElementById("S_PER_" + i).value = PER_.toFixed(2);
                var blamt = parseFloat(PAYABLE * PER_) / 100;
                document.getElementById("S_BLAMT_" + i).value = blamt.toFixed(2);
                var Mtaxamt = T_GROSS_AMT;
                var Rtaxamt = R_T_GROSS_AMT;
                var itamt = parseFloat(Mtaxamt) - parseFloat(Rtaxamt);
                document.getElementById("S_ITAMT_" + i).value = itamt.toFixed(2);
                t_blamt = t_blamt + blamt;
                t_itamt =t_itamt+ itamt;

            }
        }
        document.getElementById("S_T_ITAMT").value = t_itamt.toFixed(2);
        document.getElementById("S_T_BLAMT").value = t_blamt.toFixed(2)


    }
    function CalculatePymtAmt_Total() {
        debugger;
        var T_AMT = 0;
        var GridRow = $("#_T_SALE_POS_PAYMENT > tbody > tr").length;
        for (var i = 0; i <= GridRow - 1; i++) {

            var AMT = $("#P_AMT_" + i).val();
            if (AMT == "") { AMT = parseFloat(0); } else { AMT = parseFloat(AMT) }
            if (AMT != "") { T_AMT = T_AMT + parseFloat(AMT); } else { T_AMT = T_AMT + parseFloat(0); }
            document.getElementById("P_AMT_" + i).value = AMT.toFixed(2);
        }
        document.getElementById("T_PYMT_AMT").value = T_AMT.toFixed(2);

    }
</script>
<script>
    function AddRowPYMT(ID) {
        debugger;
        var TAG = ""; var COUNT = document.getElementById(ID).value; if (COUNT != "") { COUNT = parseInt(COUNT); } else { COUNT = parseInt(0); } if (COUNT > 0) { TAG = "Y"; }
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddRowPYMT", PageControllerName)",
            beforesend: $("#WaitingMode").show(),
            data: $('form').serialize() + "&COUNT=" + COUNT + "&TAG=" + TAG,
            success: function (result) {
                $("#WaitingMode").hide();
                $("#partialdivPayment").animate({ marginTop: '-10px' }, 50);
                $("#partialdivPayment").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeleteRow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivSalesman").animate({ marginTop: '0px' }, 50);
                $("#partialdivSalesman").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeleteRowPYMT() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteRowPYMT", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivPayment").animate({ marginTop: '0px' }, 50);
                $("#partialdivPayment").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function pageprinting() {
        debugger;
        var ty = $("#DOCCD").val();
        $.ajax({
            type: 'get',
            url: "@Url.Action("Print", PageControllerName)",
            data: "DOCNO=" + $("#DOCNO").val() + "&DOC_CD=" + $("#DOCCD").val() + "&DOCDT=" + $("#DOCDT").val(),
            success: function (result) {
                @*window.open("@Url.Action("Rep_OrdPrint", "Rep_OrdPrint", new { US = Model.UNQSNO_ENCRYPTED })", "_blank")*@
                window.open("@Url.Action("SaleBill_Print", "SaleBill_Print", new { US = Model.UNQSNO_ENCRYPTED })", "_blank")
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
@section Scripts {
    <script>
        function ReloadWithData() {
            var searchValue = $('#AUTONO').val();
            var url = window.location.href;
            var key1 = "searchValue";
            url = updateQueryStringParameter(url, key1, searchValue);
            url = updateQueryStringParameter(url, "loadOrder", "Y");
            window.location = url;
        }
        function ReloadWithPSLIP() {
            var searchValue = $('#LINKAUTONO').val();
            var searchValue1 = $('#LINKDOCNO').val();
            var url = window.location.href;
            var key1 = "searchValue";
            url = updateQueryStringParameter(url, key1, searchValue);
            url = updateQueryStringParameter(url, "loadOrder", searchValue1);
            window.location = url;
        }
    </script>
}
@using (Html.BeginForm())
{
    if (Model.DefaultView == true)
    {
        @Html.HiddenFor(a => Model.maxdate)
        @Html.HiddenFor(a => Model.mindate)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" id="btnSave" value="@Url.Action("SAVE", PageControllerName)" />
        <input type="hidden" id="srhpnl" value="@Url.Action("SearchPannelData", PageControllerName)" />
        <input type="hidden" id="UrlBarnoDetails" value="@Url.Action("GetBarCodeDetails", PageControllerName)" />
        <input type="hidden" id="UrlAddBarCodeRow" value="@Url.Action("FillBarCodeData", PageControllerName)" />
        <input type="hidden" id="UrlFillDetailData" value="@Url.Action("FillDetailData", PageControllerName)" />
        <input type="hidden" id="UrlDeleteRow" value="@Url.Action("DeleteRowBarno", PageControllerName)" />
        <input type="hidden" id="UrlAddDOCRow" value="@Url.Action("AddDOCRow", PageControllerName)" />
        <input type="hidden" id="UrlDeleteDOCRow" value="@Url.Action("DeleteDOCRow", PageControllerName)" />
        <input type="hidden" id="UrlSelectTDSCode" value="@Url.Action("GetTDSDetails", PageControllerName)" />
        <input type="hidden" id="UrlUploadImages" value="@Url.Action("UploadImages", PageControllerName )" />
        <input type="hidden" id="UrlSubLedgerDetails" value="@Url.Action("GetSubLedgerDetails", PageControllerName )" />
        <input type="hidden" id="salesmanlinkcd" value="E" />
        <input type="hidden" id="agentlinkcd" value="A" />
        <input type="hidden" id="courierlinkcd" value="U" />
        <input type="hidden" id="trnsportlinkcd" value="T" />
        <input type="hidden" id="slcd_tag" value="Party" />
        <input type="hidden" id="MTRLJOBCD" value="" />
        @Html.HiddenFor(s => s.DefaultAction, new { id = "DefaultAction" })
        @Html.HiddenFor(s => s.MENU_PARA, new { id = "MENU_PARA" })
        @Html.HiddenFor(a => a.T_TXN.AUTONO, new { id = "AUTONO" })
        @Html.HiddenFor(a => a.INCLRATEASK, new { id = "INCLRATEASK" })
        @Html.HiddenFor(a => a.T_CNTRL_HDR.MNTHCD)
        @Html.HiddenFor(a => a.T_CNTRL_HDR.EMD_NO)
        @Html.HiddenFor(model => model.T_VCH_GST.SHIPDOCNO, new { htmlAttributes = new { id = "SHIPDOCNO" } })
        @Html.HiddenFor(model => model.T_VCH_GST.SHIPDOCDT, new { htmlAttributes = new { id = "SHIPDOCDT" } })
        <div class="form-horizontal">
            @if (Model.DefaultAction == "V")
            {
                @Html.Partial("_FilteredSearch")
            }
            <div class="row">
                <div class="col-lg-11">
                    <div class="row">
                        <div class="col-md-5" style="margin-top: 6px;">
                            <div class="editor-label">
                                @Html.Label("", "Document Code")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="editor-field">
                                @if (Model.DefaultAction == "A")
                                {
                                    @Html.DropDownListFor(model => model.T_TXN.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", @onchange = "ChangeDoctype();" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.T_TXN.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", style = "pointer-events:none;background-color:#eee" })
                                }
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Document Date")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXN.DOCDT, new { htmlAttributes = new { @class = "form-control", id = "DOCDT", onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy", maxlength = 10 } })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Document No.")
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXN.DOCNO, new { htmlAttributes = new { @class = "form-control", id = "DOCNO", @placeholder = "Doc. No.", maxlength = 6, @readonly = "readonly" } })
                            </div>
                        </div>
                        @*<div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Bill Type")
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.T_TXNOTH.BLTYPE, new SelectList(Model.BL_TYPE, "Value", "Text"), " ", new { @class = "form-control", id = "BLTYPE" })
                                </div>

                            </div>*@

                    </div>
                    <div class="row">
                        <div class="col-md-5">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Retail")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXNMEMO.RTDEBCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "RTDEBCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetRefRetailDetails", PageControllerName) + "','Retail Details','RTDEBCD','RTDEBCD=RTDEBCD=1/RTDEBNM=RTDEBNM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetRefRetailDetails", PageControllerName) + "','Retail Details','RTDEBCD','RTDEBCD=RTDEBCD=1/RTDEBNM=RTDEBNM=0/MOBILE=MOBILE/ADDR=ADDR');", @placeholder = "Code", maxlength = 8 } })
                                <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetRefRetailDetails", PageControllerName)','Retail Details','RTDEBCD','RTDEBCD=RTDEBCD=1/RTDEBNM=RTDEBNM=0')" />
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.RTDEBNM, new { htmlAttributes = new { @class = "form-control", id = "RTDBNM", maxlength = 15, @title = "Only for View", @placeholder = "Ref Retail Name", @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.MOBILE, new { htmlAttributes = new { @class = "form-control", id = "MOBILE", maxlength = 10, @title = "Only for View", @readonly = "readonly" } })
                                @Html.HiddenFor(model => model.ADDR, new  { @class = "form-control", id = "ADDR", maxlength = 15 })
                                @Html.HiddenFor(model => model.RETDEBSLCD, new { @class = "form-control", id = "RETDEBSLCD", maxlength = 15})
                            </div>
                        </div>
                        @*<div class="col-md-8">
                            <div class="editor-field">
                               
                            </div>
                        </div>*@
                        <div class="col-md-4">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXNOTH.TAXGRPCD, new { htmlAttributes = new { @class = "form-control", id = "TAXGRPCD", @title = "Tax Group Code", @placeholder = "Tax Group Code", @readonly = "readonly", tabindex = "-1" } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-5">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Name")
                                @*<b style="color:Red;">*</b>*@
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXNMEMO.NM, new { htmlAttributes = new { @class = "form-control", id = "NM", maxlength = 15, @placeholder = "Name" } })
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXNMEMO.MOBILE, new { htmlAttributes = new { @class = "form-control", id = "MOBNO", @onkeypress = "return event.charCode > 47 && event.charCode < 58;", @placeholder = "Mobile No.", maxlength = 10 } })
                            </div>
                        </div>
                        <div class="col-md-5" style="width: auto;">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Inclusive Rate")
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-field" style="margin-top: 6px;">
                                @Html.CheckBoxFor(model => model.INC_RATE, new { htmlAttributes = new { @class = "form-control", id = "INC_RATE" } })
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Godown")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXN.GOCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "GOCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetGodownDetails", PageControllerName) + "','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetGodownDetails", PageControllerName) + "','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0');", @placeholder = "Code", maxlength = 6 } })
                                <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetGodownDetails", PageControllerName)','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0')" />
                                @*@Html.HiddenFor(model => model.GONM, new { id = "GONM" })*@
                            </div>
                        </div>
                        @*</div>
                            <div class="row">*@

                        <div class="col-md-1">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.GONM, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @title = "Godown Name", @placeholder = "Godown Name", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Price Code")
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXNOTH.PRCCD, new { htmlAttributes = new { @class = "form-control", id = "PRCCD", @TabIndex = -1, @title = "Only for View", @placeholder = "Code", @readonly = "readonly" } })
                                @*@Html.EditorFor(model => model.T_TXNOTH.PRCCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "PRCCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetPriceDetails", PageControllerName) + "','Price Details','PRCCD','PRCCD=PRCCD=1/PRCNM=PRCNM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetPriceDetails", PageControllerName) + "','Price Details','PRCCD','PRCCD=PRCCD=1/PRCNM=PRCNM=0');", @placeholder = "Code", maxlength = 4 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetPriceDetails", PageControllerName)','Price Details','PRCCD','PRCCD=PRCCD =1/PRCNM =PRCNM =0')" />*@
                            </div>
                        </div>
                        @*<div class="col-md-1">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.PRCNM, new { htmlAttributes = new { @class = "form-control", id = "PRCNM", @TabIndex = -1, @title = "Price List Name", @placeholder = "Price List Name", @readonly = "readonly" } })
                                </div>
                            </div>*@
                    </div>
                    <div class="row">
                        <div class="col-md-5">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Net Due")
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.NETDUE, new { htmlAttributes = new { @class = "form-control", id = "NETDUE", maxlength = 15, @placeholder = "Net Due", @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-md-5" style="width: auto;">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Memo Amount")
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXN.BLAMT, new { htmlAttributes = new { @class = "form-control", id = "BLAMT", maxlength = 15, @placeholder = "Memo Amount", @style = "font-weight:bold;font-size:15px;text-align:right" , @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-md-5" style="width: auto;">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Return ")
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.RETAMT, new { htmlAttributes = new { @class = "form-control", id = "RETAMT", maxlength = 15, @placeholder = "Return Amount", @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-md-5" style="width: auto;">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Payable ")
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.PAYABLE, new { htmlAttributes = new { @class = "form-control", id = "PAYABLE", maxlength = 15, @placeholder = "Payable Amount", @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-md-5" style="width: auto;">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Payment ")
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.PAYAMT, new { htmlAttributes = new { @class = "form-control", id = "PAYAMT", maxlength = 15, @placeholder = "Payment Amount", @TabIndex = -1, @readonly = "readonly" } })
                            </div>
                        </div>

                    </div>
                </div>
        
                <div class="col-lg-1">
                    <div class="editor-field" style="margin-top:5px;width:auto;height:60px; overflow:auto;border:5px groove;overflow-x: hidden;">
                        <table id="exampleLT" border="1" style="width: auto;">
                            @for (int i = 0; i < Model.DropDown_list_MTRLJOBCD.Count; i++)
                            {
                                <tr>
                                    <td align="center">
                                        @Html.CheckBoxFor(model => model.DropDown_list_MTRLJOBCD[i].Checked, new { id = "MaterialJobChk_" + i, onclick = "GetAllMtrljobcd();" })
                                    </td>
                                    <td align="center">
                                        @{ string STRC = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD.ToString();}
                                        @Html.DisplayFor(model => STRC)
                                        @Html.HiddenFor(model => model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD, new { id = "MaterialJobCode_" + i })
                                    </td>
                                    <td align="center">
                                        @{ string STRC1 = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBNM.ToString();}
                                        @Html.DisplayFor(model => STRC1)
                                    </td>
                                </tr>
                                            }
                        </table>
                    </div>
                    @Html.HiddenFor(model => model.ALLMTRLJOBCD, new { id = "ALLMTRLJOBCD" })
                </div>
                <div class="row">
                    @*<div class="col-md-3">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Reverse Charge")
                        </div>
                    </div>
                    <div class="col-md-7" style="width:auto;">
                        <div class="editor-field">
                            @Html.DropDownListFor(model => Model.T_TXN.REVCHRG, new SelectList(Model.Reverse_Charge, "Value", "Text", Model.T_TXN.REVCHRG), "No", new { @class = "form-control", id = "REVCHRG", @style = "display:none", onchange = "ReverceCharges();" })
                        </div>
                    </div>*@
                    <div class="col-md-1" style="margin-right: -41px;">
                        <div class="editor-field" style="margin-top:6px;">
                            @Html.CheckBoxFor(model => model.RoundOff, new { id = "RoundOff", onclick = "BillAmountCalculate();" })
                            @Html.DropDownListFor(model => Model.T_TXN.REVCHRG, new SelectList(Model.Reverse_Charge, "Value", "Text"), "No", new {  id = "REVCHRG", @style = "display:none", onchange = "ReverceCharges();" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.ROAMT, new { htmlAttributes = new { @class = "form-control", id = "ROAMT", maxlength = 6, @TabIndex = -1, @placeholder = "Rounded off", @readonly = "readonly" } })
                        </div>
                    </div>
                    @*<div class="col-md-4">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Bill Amount")
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.BLAMT, new { htmlAttributes = new { @class = "form-control", id = "BLAMT", maxlength = 14, @TabIndex = -1, @placeholder = "Bill Amount", @readonly = "readonly", @style = "font-weight:bold;font-size:15px;text-align:right" } })
                        </div>
                    </div>*@
                 
                </div>

            </div>
            <div class="row" style="margin-top:5px;">
                <ul class="nav nav-tabs">
                    <li id="Main_LI4" class="active"><a data-toggle="tab" href="#Main" accesskey="M">Main(M)</a></li>
                    @*<li id="BarCodeTab_LI4" class=""><a data-toggle="tab" href="#BarCodeTab" accesskey="B">Bar Code(B)</a></li>*@
                    <li id="Return_LI4" class=""><a data-toggle="tab" href="#ReturnTab" accesskey="R">Return(R)</a></li>
                    <li id="Amounts_LI" class=""><a data-toggle="tab" href="#Amount" accesskey="A">Amount(A)</a></li>
                    <li id="Payment_LI" class=""><a data-toggle="tab" href="#Payment" accesskey="T">Payment(P)</a></li>
                    <li id="Remarks_LI4" class=""><a data-toggle="tab" href="#Remarks" accesskey="R">Remarks (R)</a></li>
                    <li id="Documents_LI4" class=""><a data-toggle="tab" href="#Documents" accesskey="U">Documents(U)</a></li>
                </ul>
                <div class="tab-content">
                    <div id="Main" class="tab-pane fade in active" style="margin-top: 5px;">
                        <div class="row">

                            <div class="row">
                                @if (Model.DefaultAction != "V")
                                {
                                    <div class="col-md-1">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "Bar Code")
                                            <b style="color:Red;">*</b>
                                        </div>
                                    </div>
                                        <div class="col-md-8">
                                            <div class="editor-field">
                                                @Html.EditorFor(model => model.BARCODE, new { htmlAttributes = new { @class = "form-control textbox_image", id = "BARCODE", onkeydown = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','BARCODE','BARCODE=BARNO=0/MTRLJOBCD=MTRLJOBCD=2/PARTCD=PARTCD=8','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD')", onblur = "GetBarnoDetails(this.value);", @placeholder = "Bar Code", maxlength = 25 } })
                                                <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetBarCodeDetails", PageControllerName)','Bar Code Details','BARCODE','BARCODE=BARNO=0/MTRLJOBCD=MTRLJOBCD=2/PARTCD=PARTCD=8','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD')" />

                                                @*@Html.EditorFor(model => model.BARCODE, new { htmlAttributes = new { @class = "form-control textbox_image", id = "BARCODE", onkeydown = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','BARCODE','BARCODE=BARNO=0','DOCDT')", onblur = "SelectBARCODEDetail(this.value,BARCODE,DOCDT)", @placeholder = "Bar Code", maxlength = 25 } })
                                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetBarCodeDetails", PageControllerName)','Bar Code Details','BARCODE','BARCODE=BARNO=0','DOCDT')" />*@
                                            </div>
                                        </div>
                                }

                            </div>

                            <div class="row">
                                <div class="col-md-3" style="width:auto;">
                                </div>
                            </div>
                            <div style="margin-top:4px;background-color:#c4b9b9;border:5px groove;">
                                <div id="partialdivBarCodeTab">
                                    @Html.Partial("_T_SALE_POS_PRODUCT")
                                </div>
                                @*<div>
                                        <div id="popup" class="row" style="margin-top: 11px;top:15%;left:2%;right:2%;position:absolute;">
                                        </div>
                                    </div>*@
                            </div>
                            @*@if (Model.DefaultAction != "V" && Model.MENU_PARA != "SB")
                                {
                                    <div>
                                        <div class="row">
                                            <p class="text-info">* Press <b>F8</b> in Bill Sl./Item Group/Item Code (Bar code area) to copy last row of Bar Code Grid</p>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-1" style="width:auto;">
                                                <input type="button" class="btn btn-info" style="margin-top: 2px;padding: 2px 7px 1px 7px;" name="FillDetail" value="Refresh Detail Data" title="Click to Refresh Data in Details Tab" onclick="Fill_DetailData()" />
                                            </div>
                                        </div>
                                    </div>
                                }*@

                        </div>
                    </div>
                    <div id="ReturnTab" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                            <div>
                                <div id="partialdivReturn" style="margin-top:0px;">
                                    @*@Html.Partial("_T_SALE_POS_DETAIL")*@
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Amount" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                            <div>
                                <div id="partialdivAmounts" style="margin-top:0px;">
                                    @Html.Partial("_T_SALE_POS_AMOUNT")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Payment" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;width:fit-content;">
                            <div>
                                <div id="partialdivSalesman" style="margin-top:0px;">
                                    @Html.Partial("_T_SALE_POS_SALESMAN")
                                </div>
                            </div>
                        </div>
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;width:fit-content;">
                            <div>
                                <div id="partialdivPayment" style="margin-top:0px;">
                                    @Html.Partial("_T_SALE_POS_PAYMENT")
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="Remarks" class="tab-pane fade">
                        <div class="row">
                            <div>
                                <div id="partialdivRemarks">
                                    @Html.Partial("_TRANSACTIONREMARKS")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Documents" class="tab-pane fade" style="margin-top: 10px;">
                        <div class="row" style="background-color:#c4b9b9;border:5px groove;width:fit-content;">
                            <div>
                                <div id="partialdivDocument" style="margin-top:0px;">
                                    @Html.Partial("_UPLOADDOCUMENTS")
                                </div>
                            </div>
                        </div>
                    </div>
                    @*<div id="SalesBillMade" class="tab-pane fade" style="margin-top: 10px;">

                        </div>*@
                </div>
            </div>
        </div>

            <div class="container">
                <!-- Modal -->
                <div class="modal fade" id="ViewImageModal" role="dialog">
                    <div class="modal-dialog modal-md">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">Image Preview</h4>
                            </div>
                            <div class="modal-body">
                                <div id="myCarousel" class="carousel" data-ride="carousel">
                                    <div class="carousel-inner" id="div_carousel_inner">
                                        <div class="item active">
                                            <img src="" alt="Los Angeles" style="width:100%;">
                                        </div>
                                        <div class="item">
                                            <img src="" alt="Chicago" style="width:100%;">
                                        </div>
                                    </div>
                                    <!-- Left and right controls -->
                                    <a class="left  carousel-control arrow-left" id="prev">
                                        <span class="glyphicon glyphicon-chevron-left"></span>
                                    </a>
                                    <a class="right  carousel-control arrow-right" id="next">
                                        <span class="glyphicon glyphicon-chevron-right"></span>
                                    </a>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="pull-left">
                                            <input type="hidden" id="ActiveBarRowIndex" />
                                            <input type="hidden" id="BarImages" />
                                            @*<button type="button" class="btn btn-danger" onclick="deleteBarImages()"><span class="glyphicon glyphicon-trash"></span></button>*@
                                        </div>
                                    </div>
                                    <div class="col-sm-6"><button type="button" class="btn btn-default" data-dismiss="modal">Close</button></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

                                            }
                                            else
                                            {
                                                @ViewBag.ErrorMessage
                                            }

                                            <div class="container">
                                                <div id="helpDIV">

                                                </div>
                                            </div>
                                            }
