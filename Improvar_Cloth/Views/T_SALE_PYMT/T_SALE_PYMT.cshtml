@model Improvar.ViewModels.SalePymtEntry
@{
    string PageControllerName = "T_SALE_PYMT";
    switch (Model.MENU_PARA)
    {
        case "PYMT":
            ViewBag.Title = "Pymt Recd from Retail Debtor"; break;
        default: ViewBag.Title = ""; break;
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .TextAreaRemarks {
        height: 190px;
    }
</style>
<script src="~/Scripts/jquery.min.js"></script>
<link rel="stylesheet" href="~/Content/jquery.stickytable.css">
<script type="text/javascript">
    $("#WaitingMode").show();
    $(document).ready(function () {
        if ("@Model.DefaultAction" == "V" || "@Model.DefaultAction" == "D") {
            modeView();
        }
        else if ("@Model.DefaultAction" == "E") {
        }
        else if ("@Model.DefaultAction" == "A") {
            $('form :input:enabled:visible:not([readonly]):first').focus();
        }
        $("#WaitingMode").hide();
    });
</script>
<script>
    @{
        string mldauto = "";
        if (@Model.T_CNTRL_HDR != null)
        {
            if (@Model.T_CNTRL_HDR.AUTONO != null)
            {
                mldauto = Model.T_CNTRL_HDR.AUTONO.ToString();
                if (Model.T_CNTRL_HDR.CANCEL == "Y")
                {
                    ViewBag.formname = ViewBag.formname + "   " + "(Record Cancelled) <span style='font-size: small;'>" + Model.T_CNTRL_HDR.CANC_REM + "</span>";
                    //ViewBag.formname = ViewBag.formname + "   " + "(Record Cancelled)";
                }
            }
        }
        else
        {
            mldauto = "";
        }
    }
    function ModifyLogDetails() {
        if ("@Model.DefaultAction" == "V") {
            ModifyLogDtl('@mldauto');
        }
    }
</script>
<script>
    function requiredFieldValidator() {
        if (!emptyFieldCheck("Please Select / Enter Document Date", "DOCDT")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Retail", "RTDEBCD")) { return false; }
        return true;
    }
</script>
<script>
    $(function () {
        if ("@Model.DefaultAction" != "V") {
            $("#DOCDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate', minDate: '@Model.mindate' });
        }
    });
</script>

<script>
    function AddDOCrow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddDOCRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '-10px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeleteDOCrow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteDOCRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '0px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function DeleteRow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivMain").animate({ marginTop: '0px' }, 50);
                $("#partialdivMain").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>

<script>
    function pageprinting() {
        debugger;
        var ty = $("#DOCCD").val();
        $.ajax({
            type: 'POST',
            url: "@Url.Action("Print", PageControllerName)",
            data: $('form').serialize() + "&DOCNO=" + $("#DOCONLYNO").val() + "&DOC_CD=" + $("#DOCCD").val() + "&DOCDT=" + $("#DOCDT").val(),
            success: function (result) {
                window.open("@Url.Action("Khasra_BaleTrnf_Print", "Khasra_BaleTrnf_Print", new { US = Model.UNQSNO_ENCRYPTED })", "_blank")
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function GetInvoice() {
        //const keyName = event.key;
        //if (keyName == undefined || keyName == "F7") {
        //var slno = $("#GetInvoice" + i).val();
        $.ajax({
            type: 'POST',
            beforesend: $("#WaitingMode").show(),
            url: "@Url.Action("GetInvoice", PageControllerName)",
            data: $('form').serialize() + "&slno=" + slno,
            success: function (result) {
                $("#WaitingMode").hide();
                if (result.indexOf("_T_Mrcpt_MAIN_GRID") != -1) {
                    $('.PopUp_Backround').show();
                    $('#popupADJ').html(result);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                $('.PopUp_Backround').hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
        //            msgInfo("Ledger Head Code Not Available ! Please Select / Enter a Ledger Head For BillWise Adjustment !! ");
        //            message_value = GLCD_.id;
    }
</script>
<script>
    function AllCheckAdjustInvoice(obj, tablename) {
        debugger;
        var filter = document.getElementById("I_FilterSearch").value;
        var rows = document.querySelector("#" + tablename + " tbody").rows;
        for (var i = 0; i <= rows.length - 1; i++) {
            var flag = 0;
            for (var x = 0; x <= rows[i].cells.length - 1; x++) {
                var firstCol = rows[i].cells[x].children[0].value.toUpperCase();
                if (firstCol.indexOf(filter) > -1) {
                    flag = 1;
                }
            }
            if (flag == 1) {
                var chkbox = document.getElementById('I_Checked_' + i);
                chkbox.checked = obj.checked;
            }
            CalculateAdjRow(tablename, i, 'I_Checked')
        }
    }

    function CalculateAvlAdjBal(tablename, rowindex) {
        var prvadj = 0.0, coladj = 0.0, colbal = 0.0;
        var rows = document.querySelector("#" + tablename + " tbody").rows;
        for (var i = 0; i <= rows.length - 1; i++) {
            if (i != rowindex) {
                coladj += retFloat(document.getElementById("I_ADJ_AMT_" + i).value);
            }
            prvadj += retFloat(document.getElementById("I_PRE_ADJ_AMT_" + i).value);
            //colbal += retFloat(document.getElementById("I_BAL_AMT_" + i).value);
        }
        //document.getElementById("TOT_VBALAMT").value = colbal.toFixed(2);
        document.getElementById("TOT_ADJ").value = coladj.toFixed(2);
        var PAMT = retFloat(document.getElementById("T_PYMT_AMT").value);
        var balForAdj = (PAMT - coladj).toFixed(2);
        document.getElementById('AVLBALFORADJ').value = balForAdj;
        balForAdj = retFloat(balForAdj);
        return balForAdj;
    }

    function CalculateAdjRow(tablename, rowindex, callfrom) {
        debugger;
        var checkbox = document.getElementById('I_Checked_' + rowindex);
        var AMOUNT = retFloat(document.getElementById("I_AMT_" + rowindex).value);
        var PREAMT = retFloat(document.getElementById("I_PRE_ADJ_AMT_" + rowindex).value);
        var ADJAMT = retFloat(document.getElementById("I_ADJ_AMT_" + rowindex).value);
        //var PAMT = retFloat(document.getElementById("T_PYMT_AMT").value);
        if (AMOUNT == PREAMT) {
            document.getElementById('I_ADJ_AMT_' + rowindex).value = 0;
            checkbox.checked = false; return false;
        }
        var BALADJAMT = CalculateAvlAdjBal(tablename, rowindex);
        if (checkbox.checked == true || callfrom == "I_ADJ_AMT") {
            if (BALADJAMT == 0 || (ADJAMT == 0 && callfrom == "I_ADJ_AMT")) checkbox.checked = false; else checkbox.checked = true;
            if (BALADJAMT >= ADJAMT && AMOUNT >= (PREAMT + ADJAMT) && callfrom == "I_ADJ_AMT") {
                document.getElementById('I_BAL_AMT_' + rowindex).value = (AMOUNT - PREAMT - ADJAMT).toFixed(2);
            }
            else if (BALADJAMT >= AMOUNT && AMOUNT >= (PREAMT + ADJAMT) && callfrom == "I_Checked") {
                document.getElementById('I_ADJ_AMT_' + rowindex).value = (AMOUNT - PREAMT).toFixed(2);
                document.getElementById('I_BAL_AMT_' + rowindex).value = (0).toFixed(2);
            }
            else if (BALADJAMT <= AMOUNT && AMOUNT >= (PREAMT + ADJAMT) && callfrom == "I_Checked") {
                document.getElementById('I_ADJ_AMT_' + rowindex).value = (BALADJAMT).toFixed(2);
                document.getElementById('I_BAL_AMT_' + rowindex).value = (AMOUNT - BALADJAMT).toFixed(2);
            }
            else if (BALADJAMT >= ADJAMT && AMOUNT < (PREAMT + ADJAMT) && callfrom == "I_ADJ_AMT") {
                document.getElementById('I_ADJ_AMT_' + rowindex).value = (AMOUNT - PREAMT).toFixed(2);
                document.getElementById('I_BAL_AMT_' + rowindex).value = (0).toFixed(2);
            }
            else if (BALADJAMT <= ADJAMT && callfrom == "I_ADJ_AMT") {
                document.getElementById('I_ADJ_AMT_' + rowindex).value = BALADJAMT;
                document.getElementById('I_BAL_AMT_' + rowindex).value = (AMOUNT - PREAMT - BALADJAMT).toFixed(2);
            }
            //else if (BALADJAMT >= (AMOUNT - PREAMT)) {
            //    document.getElementById('I_ADJ_AMT_' + rowindex).value = (AMOUNT - PREAMT).toFixed(2);
            //    document.getElementById('I_BAL_AMT_' + rowindex).value = 0;
            //}
            //else {
            //    document.getElementById('I_ADJ_AMT_' + rowindex).value = BALADJAMT.toFixed(2);
            //    document.getElementById('I_BAL_AMT_' + rowindex).value = (AMOUNT - PREAMT - BALADJAMT).toFixed(2);//(AMOUNT - PREAMT - BALADJAMT);
            //}
        }
        else {
            document.getElementById("I_ADJ_AMT_" + rowindex).value = "0.00";
            document.getElementById("I_BAL_AMT_" + rowindex).value = (AMOUNT - PREAMT).toFixed(2);
        }
        CalculateAvlAdjBal(tablename, -1);
    }
</script>
<script>
    function SalesmanPerChk() {
        debugger;
        var DefaultAction = $("#DefaultAction").val();
        if (DefaultAction == "V") return true;
        var GridRow = $("#_T_SALE_POS_SALESMAN_GRID > tbody > tr").length;
        var T_PER = 0;
        for (var j = 0; j <= GridRow - 1; j++) {
            T_PER += retFloat($("#S_PER_" + j).val());
            if (T_PER > 100) { msgWarning("Total of Percentage(%) Should be 100 !!"); $("#S_PER_" + j).val(""); $("#S_PER_" + j).focus(); return false; }
        }
        CalculateTotal();
    }
</script>
<script>
    function AddRowPYMT(ID) {
        debugger;
        var DefaultAction = $("#DefaultAction").val();
        if (DefaultAction == "V") return true;
        var TAG = ""; var COUNT = document.getElementById(ID).value; if (COUNT != "") { COUNT = parseInt(COUNT); } else { COUNT = parseInt(0); } if (COUNT > 0) { TAG = "Y"; }
        $.ajax({
            type: 'POST',
            url: $("#UrlAddRowPYMT").val(),//"@Url.Action("AddRowPYMT", PageControllerName)",
            beforesend: $("#WaitingMode").show(),
            data: $('form').serialize() + "&COUNT=" + COUNT + "&TAG=" + TAG,
            success: function (result) {
                $("#WaitingMode").hide();
                $("#partialdivPayment").animate({ marginTop: '-10px' }, 50);
                $("#partialdivPayment").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeleteRowPYMT() {
        var DefaultAction = $("#DefaultAction").val();
        if (DefaultAction == "V") return true;
        $.ajax({
            type: 'POST',
            url: $("#UrlDeleteRowPYMT").val(),//"@Url.Action("DeleteRowPYMT", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivPayment").animate({ marginTop: '0px' }, 50);
                $("#partialdivPayment").html(result);
                CalculateTotal();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function CalculateTotal() {
        var T_PYMT_AMT = 0;
        var GridRow = $("#_T_SALE_PAYMENT > tbody > tr").length;
        for (var i = 0; i <= GridRow - 1; i++) {
            T_PYMT_AMT += retFloat($("#P_AMT_" + i).val());
        }
        $("#T_PYMT_AMT").val(T_PYMT_AMT.toFixed(2));
        var TOT_ADJ = retFloat(document.getElementById('TOT_ADJ').value);
        var balForAdj = (T_PYMT_AMT - TOT_ADJ).toFixed(2);
        document.getElementById('AVLBALFORADJ').value = balForAdj;
    }
</script>
<script>
    function SelectRetailCode(id,RETDEBSLCD) {
        debugger;
        if ("@Model.DefaultAction" != "V") {
            debugger;
            if (id == "") {
                ClearAllTextBoxes("RTDEBCD,RTDEBNM,MOBILE,ADDR,TAXGRPCD");
            }
            else {
                var RETDEBSLCD = $("#RETDEBSLCD").val();
                $.ajax({
                    type: 'POST',
                    beforesend: $("#WaitingMode").show(),
                    url: "@Url.Action("GetRefRetailDetails", PageControllerName)",
                    data: "&val=" + id + "&RETDEBSLCD=" + RETDEBSLCD,
                    success: function (result) {
                        var MSG = result.indexOf('#helpDIV');
                        //if (MSG >= 0) {
                        //    ClearAllTextBoxes("RTDEBCD,RTDEBNM,MOBILE,ADDR,TAXGRPCD");
                        //    $('#SearchFldValue').val("RTDEBCD");
                        //    $('#helpDIV').html(result);
                        //    $('#ReferanceFieldID').val("RTDEBCD/RTDEBNM/MOBILE/ADDR/TAXGRPCD");
                        //    $('#ReferanceColumn').val("1/0/");
                        //    $('#helpDIV_Header').html("Sub Code Details");
                        //}
                       /// else {
                            var MSG = result.indexOf(String.fromCharCode(181));
                            if (MSG >= 0) {
                                $("#RTDEBCD").val(returncolvalue(result, "RTDEBCD"));
                                $("#RTDEBNM").val(returncolvalue(result, "RTDEBNM"));
                                $("#MOBILE").val(returncolvalue(result, "MOBILE"));
                                $("#ADDR").val(returncolvalue(result, "ADDR"));
                                $("#TAXGRPCD").val(returncolvalue(result, "TAXGRPCD"));
                                var rtdebcd=returncolvalue(result, "RTDEBCD");
                                if (rtdebcd != "" && RETDEBSLCD != "") {
                                    UpDateAdjustment(RETDEBSLCD, rtdebcd);
                                }

                            }
                            else {
                                $('#helpDIV').html("");
                                msgInfo("" + result + " !");
                                ClearAllTextBoxes("RTDEBCD,RTDEBNM,MOBILE,ADDR,TAXGRPCD");
                                message_value = "RTDEBCD";
                            }
                        //}
                        $("#WaitingMode").hide();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $("#WaitingMode").hide();
                        msgError(XMLHttpRequest.responseText);
                        $("body span h1").remove(); $("#msgbody_error style").remove();
                    }
                });
            }
        }

    }

    function UpDateAdjustment(RETDEBSLCD, rtdebcd) {
        debugger;
        var DefaultAction = $("#DefaultAction").val();
        if (DefaultAction == "V") return true;
        $.ajax({
            type: 'POST',
            url: "@Url.Action("UpDateAdjustment", PageControllerName)",
            beforesend: $("#WaitingMode").show(),
            data: $('form').serialize() + "&SLCD=" + RETDEBSLCD + "&rtdebcd=" + rtdebcd,
            success: function (result) {
                $("#WaitingMode").hide();
                $("#partialdivMain").animate({ marginTop: '-10px' }, 50);
                $("#partialdivMain").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
@using (Html.BeginForm())
{
    if (Model.DefaultView == true)
    {
        @Html.HiddenFor(a => Model.maxdate)
        @Html.HiddenFor(a => Model.mindate)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" id="btnSave" value="@Url.Action("SAVE", PageControllerName)" />
        <input type="hidden" id="srhpnl" value="@Url.Action("SearchPannelData", PageControllerName)" />
        <input type="hidden" id="urlcancelrecord" value="@Url.Action("cancelRecords", PageControllerName)" />
        <input type="hidden" id="partylinkcd" value="O" />
        <input type="hidden" id="salesmanlinkcd" value="E" />
        <input type="hidden" id="trnsportlinkcd" value="T" />
        <input type="hidden" id="UrlAddRowPYMT" value="@Url.Action("AddRowPYMT", PageControllerName)" />
        <input type="hidden" id="UrlAddRow" value="@Url.Action("AddRow", PageControllerName)" />
        <input type="hidden" id="UrlDeleteRowSlsman" value="@Url.Action("DeleteRow", PageControllerName)" />
        <input type="hidden" id="UrlDeleteRowPYMT" value="@Url.Action("DeleteRowPYMT", PageControllerName)" />

        @Html.HiddenFor(s => s.DefaultAction)
        @Html.HiddenFor(a => a.T_TXNPYMT_HDR.AUTONO, new { id = "AUTONO" })
        @Html.HiddenFor(a => a.T_CNTRL_HDR.MNTHCD)
        @Html.HiddenFor(a => a.T_CNTRL_HDR.EMD_NO)
        @Html.HiddenFor(a => a.T_CNTRL_HDR.DOCNO)
        @Html.HiddenFor(model => model.Audit_REM, new { id = "Audit_REM" })
<div class="form-horizontal">
            @if (Model.DefaultAction == "I_")
            {
                @Html.Partial("_FilteredSearch")
            }
            <div class="row">
                <div class="col-md-5" style="margin-top: 6px;">
                    <div class="editor-label">
                        @Html.Label("", "Document Code")
                        <b style="color:Red;">*</b>
                    </div>
                </div>
                <div class="col-md-7">
                    <div class="editor-field">
                        @if (Model.DefaultAction == "A")
                        {
                            @Html.DropDownListFor(model => model.T_CNTRL_HDR.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", @onchange = "ChangeDoctype();" })
                        }
                        else
                        {
                            @Html.DropDownListFor(model => model.T_CNTRL_HDR.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", style = "pointer-events:none;background-color:#eee" })
                        }
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="editor-label" style="margin-top: 6px;">
                        @Html.Label("", "Document Date")
                        <b style="color:Red;">*</b>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.T_CNTRL_HDR.DOCDT, new { htmlAttributes = new { @class = "form-control", id = "DOCDT", onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy", maxlength = 10 } })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="editor-label" style="margin-top: 6px;">
                        @Html.Label("", "Document No.")
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.T_CNTRL_HDR.DOCONLYNO, new { htmlAttributes = new { @class = "form-control", id = "DOCONLYNO", @placeholder = "Doc. No.", maxlength = 6, @readonly = "readonly" } })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-5">
                    <div class="editor-label" style="margin-top: 6px;">
                        @Html.Label("", "Retail")
                        <b style="color:Red;">*</b>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="editor-field">
                        @*@Html.EditorFor(model => model.T_TXNPYMT_HDR.RTDEBCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "RTDEBCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetRefRetailDetails", PageControllerName) + "','Retail Details','RTDEBCD','RTDEBCD=RTDEBCD=1/RTDEBNM=RTDEBNM=0','RETDEBSLCD')", onblur = "GetHelpBlur('" + @Url.Action("GetRefRetailDetails", PageControllerName) + "','Retail Details','RTDEBCD','RTDEBCD=RTDEBCD=1/RTDEBNM=RTDEBNM=0/MOBILE=MOBILE/ADDR=ADDR/TAXGRPCD=TAXGRPCD','RETDEBSLCD');", @placeholder = "Code", maxlength = 8 } })
                        <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetRefRetailDetails", PageControllerName)','Retail Details','RTDEBCD','RTDEBCD=RTDEBCD=1/RTDEBNM=RTDEBNM=0','RETDEBSLCD')" />*@

                        @Html.EditorFor(model => model.T_TXNPYMT_HDR.RTDEBCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "RTDEBCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetRefRetailDetails", PageControllerName) + "','Retail Details','RTDEBCD','RTDEBCD=RTDEBCD=1/RTDEBNM=RTDEBNM=0','RETDEBSLCD')", onblur = "SelectRetailCode(this.value,'RETDEBSLCD');", @placeholder = "Code", maxlength = 8 } })
                        <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetRefRetailDetails", PageControllerName)','Retail Details','RTDEBCD','RTDEBCD=RTDEBCD=1/RTDEBNM=RTDEBNM=0','RETDEBSLCD')" />
                       
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.RTDEBNM, new { htmlAttributes = new { @class = "form-control", id = "RTDEBNM", maxlength = 15, @title = @Model.ADDR, @placeholder = "Ref Retail Name", @TabIndex = -1, @readonly = "readonly" } })
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.MOBILE, new { htmlAttributes = new { @class = "form-control", id = "MOBILE", maxlength = 10, @title = "Only for View", @placeholder = "Mobile No.", @readonly = "readonly" } })
                        @Html.HiddenFor(model => model.ADDR, new { @class = "form-control", id = "ADDR", maxlength = 15 })
                        @Html.HiddenFor(model => model.RETDEBSLCD, new { @class = "form-control", id = "RETDEBSLCD", maxlength = 15 })
                        @*@Html.HiddenFor(model => model.EFFDT, new { @class = "form-control", id = "EFFDT", maxlength = 10 })*@
                    </div>
                </div>

                @*<div class="col-md-8">
                        <div class="editor-field">

                        </div>
                    </div>*@
                @*<div class="col-md-4">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXNOTH.TAXGRPCD, new { htmlAttributes = new { @class = "form-control", id = "TAXGRPCD", @title = "Tax Group Code", @placeholder = "Tax Group Code", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>*@

            </div>
            <div class="row">
                <div class="col-md-5">
                    <div class="editor-label" style="margin-top: 6px;">
                        @Html.Label("", "Name")
                        @*<b style="color:Red;">*</b>*@
                    </div>
                </div>
                <div class="col-md-7">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.NM, new { htmlAttributes = new { @class = "form-control", id = "NM", maxlength = 15, @placeholder = "Name", onblur = "" } })@*GetInvoice1()*@
                    </div>
                </div>
                <div class="col-md-5">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.MOBILE, new { htmlAttributes = new { @class = "form-control", id = "MOBNO", @onkeypress = "return event.charCode > 47 && event.charCode < 58;", @placeholder = "Mobile No.", maxlength = 10 } })
                    </div>
                </div>
                <div class="col-md-5" style="width: auto;">
                    <div class="editor-label" style="margin-top: 6px;">
                        @Html.Label("", "Inclusive Rate")
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="editor-field" style="margin-top: 6px;">
                        @Html.CheckBoxFor(model => model.INC_RATE, new { htmlAttributes = new { @class = "form-control", id = "INC_RATE" } })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-5">
                    <div class="editor-label" style="margin-top: 6px;">
                        @Html.Label("", "Curr. Amt.")
                    </div>
                </div>
                <div class="col-md-7">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.CUROSAMT, new { htmlAttributes = new { @class = "form-control", id = "CUROSAMT", maxlength = 15, @readonly = "readonly" } })
                    </div>
                </div>
            </div>
            <div class="row" style="margin-top:5px;">
                <ul class="nav nav-tabs">
                    <li id="Payment_LI" class="active"><a data-toggle="tab" href="#Payment" accesskey="T">Payment(T)</a></li>
                    <li id="Main_LI4" class=""><a data-toggle="tab" href="#Adjustment" accesskey="M">Adjustment(M)</a></li>
                    <li id="Remarks_LI4" class=""><a data-toggle="tab" href="#Remarks" accesskey="R">Remarks(R)</a></li>
                    <li id="Documents_LI4" class=""><a data-toggle="tab" href="#Documents" accesskey="U">Documents(U)</a></li>
                </ul>
                <div id="popup" class="row" style="margin-top: 11px;top:15%;left:2%;right:2%;position:absolute;width:750px;">
                </div>
                <div class="tab-content">
                    <div id="Payment" class="tab-pane fade in active" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;width:fit-content;">
                            <div id="partialdivSalesman" style="margin-top:0px;">
                                @Html.Partial("_T_SALE_PYMT_SALESMAN")
                            </div>
                        </div>
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;width:fit-content;">
                            <div id="partialdivPayment" style="margin-top:0px;">
                                @Html.Partial("_T_SALE_PYMT_PAYMENT")
                            </div>
                        </div>
                    </div>
                    <div id="Adjustment" class="tab-pane fade " style="margin-top: 10px;margin-left: 11px;">
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;width:fit-content;">
                            <div id="partialdivMain">
                                @Html.Partial("_T_SALE_PYMT_Adjustment")
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Available bal for Adj.")
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.AVLBALFORADJ, new { htmlAttributes = new { @class = "form-control", id = "AVLBALFORADJ", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Remarks" class="tab-pane fade">
                        <div class="row">
                            <div>
                                <div id="partialdivRemarks">
                                    @Html.Partial("_TRANSACTIONREMARKS")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Documents" class="tab-pane fade" style="margin-top: 10px;">
                        <div class="row" style="background-color:#c4b9b9;border:5px groove;width:fit-content;">
                            <div>
                                <div id="partialdivDocument" style="margin-top:0px;">
                                    @Html.Partial("_UPLOADDOCUMENTS")
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    }
    else
    {
        @ViewBag.ErrorMessage
    }

    <div class="container">
        <div id="helpDIV">

        </div>
    </div>
}
