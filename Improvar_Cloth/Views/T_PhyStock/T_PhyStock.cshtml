@model Improvar.ViewModels.TransactionPhyStockEntry
@{
    string PageControllerName = "T_PhyStock";
    ViewBag.Title = "Physical Stock";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<style>
    .TextAreaRemarks {
        height: 190px;
    }
</style>
<script src="~/Scripts/jquery.min.js"></script>
<link rel="stylesheet" href="~/Content/jquery.stickytable.css">
@*<script src="~/Scripts/Sale.js?Ver=@System.DateTime.Now"></script>*@
<script type="text/javascript">
    $("#WaitingMode").show();
    $(document).ready(function () {
        if ("@Model.DefaultAction" == "V" || "@Model.DefaultAction" == "D") {
            modeView();
            $("#check_nav").hide();
        }
        else if ("@Model.DefaultAction" == "E") {

        }
        else if ("@Model.DefaultAction" == "A") {
            $('form :input:enabled:visible:not([readonly]):first').focus();
        }
        $("#WaitingMode").hide();

    });

</script>
<script>
    @{
        string mldauto = "";
        if (@Model.T_CNTRL_HDR != null)
        {
            if (@Model.T_CNTRL_HDR.AUTONO != null)
            {
                mldauto = Model.T_CNTRL_HDR.AUTONO.ToString();
                if (Model.T_CNTRL_HDR.CANCEL == "Y")
                {
                    ViewBag.formname = ViewBag.formname + "   " + "(Record Cancelled) <span style='font-size: small;'>" + Model.T_CNTRL_HDR.CANC_REM + "</span>";
                    //ViewBag.formname = ViewBag.formname + "   " + "(Record Cancelled)";
                }
            }
        }
        else
        {
            mldauto = "";
        }
    }
    function ModifyLogDetails() {
        if ("@Model.DefaultAction" == "V") {
            ModifyLogDtl('@mldauto');
        }
    }
</script>
<script>
    function requiredFieldValidator() {
        if (!emptyFieldCheck("Please Select / Enter Document Date", "DOCDT")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Godown", "GOCD")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Price Code", "PRCCD")) { return false; }
        return true;
    }
</script>
<script>
    $(function () {
        if ("@Model.DefaultAction" != "V") {
            $("#DOCDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate', minDate: '@Model.mindate' });
        }
        $("#POPUPEFFDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true });
    });
</script>
<script>
    function AddDOCrow() {
        if ("@Model.DefaultAction" == "V") return true;
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddDOCRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '-10px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeleteDOCrow() {
        if ("@Model.DefaultAction" == "V") return true;
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteDOCRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '0px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function pageprinting() {
        var ty = $("#DOCCD").val();
        $.ajax({
            type: 'get',
            url: "@Url.Action("Print", PageControllerName)",
            data: "DOCNO=" + $("#DOCNO").val() + "&DOC_CD=" + $("#DOCCD").val() + "&DOCDT=" + $("#DOCDT").val(),
            success: function (result) {
                window.open("@Url.Action("Rep_OrdPrint", "Rep_OrdPrint", new { US = Model.UNQSNO_ENCRYPTED })", "_blank")
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function Barcodeprinting() {
        debugger;
        var AUTONO = $("#AUTONO").val();
        var DOCDT = $("#DOCDT").val();
        window.open("@Url.Action("Rep_BarcodePrint", "Rep_BarcodePrint")?US=" + '@Model.UNQSNO_ENCRYPTED' + "&autono=" + AUTONO + "&docdt=" + DOCDT + "&callfrm=PHYSTK", "_blank")
    }
</script>
<script>

    function DeleteRow() {
        if ("@Model.DefaultAction" == "V") return true;
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivBarCodeTab").animate({ marginTop: '0px' }, 50);
                $("#partialdivBarCodeTab").html(result);
                CalculateTotal_Barno_();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function FillBarcodeArea_(str, Table, i) {
        debugger;
        if ("@Model.DefaultAction" == "V") return true;
        var MENU_PARA = $("#MENU_PARA").val();
        var MNTNLISTPRICE = $("#MNTNLISTPRICE").val();
        if (Table == "COPYLROW") {
            if (event.key != "F8") {
                return true;
            }
            else {
                i = $("#_T_PhyStock_GRID > tbody > tr").length - 1;
                $("#Barnohelpopen").val("N");
            }
        }
        if (str != "") {
            $("#T_BARCODE").val(returncolvalue(str, "BARNO"));
            $("#Last_BARCODE").val(returncolvalue(str, "BARNO"));
            $("#MTRLJOBCD").val(returncolvalue(str, "MTRLJOBCD"));
            $("#ITCD").val(returncolvalue(str, "ITCD"));
            $("#ITSTYLE").val(returncolvalue(str, "STYLENO") + "" + returncolvalue(str, "ITNM"));
            $("#STYLENO").val(returncolvalue(str, "STYLENO"));
            $("#Last_STYLENO").val(returncolvalue(str, "STYLENO"));
            $("#STKTYPE").val(returncolvalue(str, "STKTYPE"));
            $("#PARTCD").val(returncolvalue(str, "PARTCD"));
            $("#QNTY").val(returncolvalue(str, "BALQNTY"));
            $("#NOS").val(returncolvalue(str, "BALNOS"));
            $("#CUTLENGTH").val(returncolvalue(str, "CUTLENGTH"));
            var RATE = returncolvalue(str, "RATE");
            $("#RATE").val(RATE);
            $("#SHADE").val(returncolvalue(str, "SHADE"));
            $("#ITREM").val(returncolvalue(str, "ITREM"));
            $("#LOCABIN").val(returncolvalue(str, "LOCABIN"));
            if (retStr(returncolvalue(str, "uomcd")) == "PCS") {
                $("#QNTY").val(1.000);
                $("#NOS").val(1);
            }
        }
        else {
            var FieldidStarting = "";
            FieldidStarting = "#B_";
            $("#SLNO").val($(FieldidStarting + "SLNO_" + i).val());
            if (Table != "COPYLROW") {
                // $("#TXNSLNO").val($(FieldidStarting + "TXNSLNO_" + i).val());
            }
            if (Table != "COPYLROW") {
                $("#QNTY").val($(FieldidStarting + "QNTY_" + i).val());
                $("#NOS").val($(FieldidStarting + "NOS_" + i).val());
                $("#CUTLENGTH").val($(FieldidStarting + "CUTLENGTH_" + i).val());
            }
            $("#T_BARCODE").val($(FieldidStarting + "BARNO_" + i).val());
            $("#Last_BARCODE").val($(FieldidStarting + "BARNO_" + i).val());
            $("#MTRLJOBCD").val($(FieldidStarting + "MTRLJOBCD_" + i).val());
            $("#ITCD").val($(FieldidStarting + "ITCD_" + i).val());
            $("#ITSTYLE").val($(FieldidStarting + "ITSTYLE_" + i).val().trim());
            $("#STYLENO").val($(FieldidStarting + "STYLENO_" + i).val());
            $("#Last_STYLENO").val($(FieldidStarting + "STYLENO_" + i).val());
            $("#STKTYPE").val($(FieldidStarting + "STKTYPE_" + i).val());
            $("#PARTCD").val($(FieldidStarting + "PARTCD_" + i).val());
            $("#RATE").val($(FieldidStarting + "RATE_" + i).val());
            $("#SHADE").val($(FieldidStarting + "SHADE_" + i).val());
            $("#ITREM").val($(FieldidStarting + "ITREM_" + i).val());
            $("#LOCABIN").val($(FieldidStarting + "LOCABIN_" + i).val());

        }
        if (Table == "_T_PhyStock_GRID") {
            $("#AddRow_Barcode").hide();
            $("#UpdateRow_Barcode").prop("value", "Update Row [" + $(FieldidStarting + "SLNO_" + i).val() + "] (Alt+W)");
            $("#UpdateRow_Barcode").show();
        }

        var ModuleCode = $("#ModuleCode").val();
        if (event.key == "F8") {
            if (ModuleCode.indexOf("SALESCLOTH") != -1) {
                $("#CUTLENGTH").focus();
            }
            else {
                $("#T_BARCODE").focus();

            }

        }
        else if (str != "") {
            if (ModuleCode.indexOf("SALESCLOTH") != -1) {

                $("#CUTLENGTH").focus();

            }
        }

    }
</script>
<script>
    function AddBarCodeGrid_() {
        debugger;
        if ("@Model.DefaultAction" == "V") return true;
        var ModuleCode = $("#ModuleCode").val();
        var MENU_PARA = $("#MENU_PARA").val();
        var MNTNPART = $("#MNTNPART").val();
        var MNTNSHADE = $("#MNTNSHADE").val();
        if ($("#T_BARCODE").val() == "") {
            msgInfo("Please Select/Enter Bar No.!");
            message_value = "T_BARCODE";
            return false;
        }
        if ($("#QNTY").val() == "0") {
            msgInfo("Quantity should not be zero(0) !");
            message_value = "QNTY";
            return false;
        }
        var BARCODE = $("#T_BARCODE").val();
        var QNTY = $("#QNTY").val();
        var ITCD = $("#ITCD").val();
        var ITSTYLE = $("#ITSTYLE").val();
        var MTRLJOBCD = $("#MTRLJOBCD").val();
        var MTRLJOBNM = $("#MTRLJOBNM").val();
        var MTBARCODE = $("#MTBARCODE").val();
        var STYLENO = $("#STYLENO").val();
        var STKTYPE = $("#STKTYPE").val();
        var PARTCD = "";
        if (MNTNPART == "Y") {
            PARTCD = $("#PARTCD").val();
        }
        var NOS = $("#NOS").val();
        var RATE = $("#RATE").val();
        var CUTLENGTH = $("#CUTLENGTH").val();
        SHADE = $("#SHADE").val();
        if (MNTNSHADE == "Y") {
            SHADE = $("#SHADE").val();
        }
        var BALENO = $("#BALENO").val();
        var BALEYR = $("#BALEYR").val();
        var LOCABIN = $("#LOCABIN").val();
        var ITREM = $("#ITREM").val();
        var MERGEINDTL = document.getElementById("MERGEINDTL").checked;
        var slno = "";
        if (MERGEINDTL == true) {
            var GridRowMain = $("#_T_PhyStock_GRID > tbody > tr").length;
            for (j = 0; j <= GridRowMain - 1; j++) {
                if (BARCODE == $("#B_BARNO_" + j).val() && retFloat(CUTLENGTH).toFixed(2) == retFloat($("#B_CUTLENGTH_" + j).val()).toFixed(2) && retFloat(RATE).toFixed(2) == retFloat($("#B_RATE_" + j).val()).toFixed(2)) {
                    slno = "B_SLNO_" + j;

                }
            }
        }
        if (slno != "") {
            UpdateBarCodeRow_(slno, 'Y');
        }
        else {
            var rowindex = $("#_T_PhyStock_GRID > tbody > tr").length;
            var SLNO = 1;
            if (retInt(rowindex) != 0) {
                var LASTROWINDEX = retInt(rowindex) - 1;
                var LASTSLNO = $("#B_SLNO_" + LASTROWINDEX).val();
                SLNO = retInt(LASTSLNO) + 1;
            }
            var tr = "";
            tr += ' <tr style="font-size:12px; font-weight:bold;">';
            tr += '    <td class="sticky-cell">';
            tr += '        <input tabindex="-1" data-val="true" data-val-required="The Checked field is required." id="B_Checked_' + rowindex + '" name="TPHYSTK[' + rowindex + '].Checked" type="checkbox" value="true"><input name="TPHYSTK[' + rowindex + '].Checked" type="hidden" value="false">';
            tr += '        <input data-val="true" data-val-length="The field BALENO must be a string with a maximum length of 30." data-val-length-max="30" id="B_BALENO_' + rowindex + '" name="TPHYSTK[' + rowindex + '].BALENO" type="hidden" value="' + BALENO + '">';
            tr += '        <input data-val="true" data-val-length="The field BALEYR must be a string with a maximum length of 4." data-val-length-max="4" id="B_BALEYR_' + rowindex + '" name="TPHYSTK[' + rowindex + '].BALEYR" type="hidden" value="' + BALEYR + '">';
            tr += '        <input data-val="true" data-val-length="The field LOCABIN must be a string with a maximum length of 10." data-val-length-max="10" id="B_LOCABIN_' + rowindex + '" name="TPHYSTK[' + rowindex + '].LOCABIN" type="hidden" value="' + LOCABIN + '">';
            tr += '        <input data-val="true" data-val-length="The field MTRLJOBCD must be a string with a maximum length of 10." data-val-length-max="10" id="B_MTRLJOBCD_' + rowindex + '" name="TPHYSTK[' + rowindex + '].MTRLJOBCD" type="hidden" value="' + MTRLJOBCD + '">';
            tr += '        <input data-val="true" data-val-length="The field ITCD must be a string with a maximum length of 10." data-val-length-max="10" id="B_ITCD_' + rowindex + '" name="TPHYSTK[' + rowindex + '].ITCD" type="hidden" value="' + ITCD + '">';
            tr += '        <input data-val="true" data-val-length="The field STYLENO must be a string with a maximum length of 10." data-val-length-max="10" id="B_STYLENO_' + rowindex + '" name="TPHYSTK[' + rowindex + '].STYLENO" type="hidden" value="' + STYLENO + '">';
            if (MNTNPART == "Y") {
                tr += '        <input data-val="true" data-val-length="The field PARTCD must be a string with a maximum length of 4." data-val-length-max="4" id="B_PARTCD_' + rowindex + '" name="TPHYSTK[' + rowindex + '].PARTCD" type="hidden" value="' + PARTCD + '">';
            }

            tr += '    </td>';
            tr += '    <td class="sticky-cell" style="left:17px;" title="' + SLNO + '">';
            tr += '        <input tabindex="-1" class=" atextBoxFor " data-val="true" data-val-number="The field SLNO must be a number." data-val-required="The SLNO field is required." id="B_SLNO_' + rowindex + '" maxlength="2" name="TPHYSTK[' + rowindex + '].SLNO" readonly="readonly" style="text-align:center;" type="text" value="' + SLNO + '">';
            tr += '    </td>';
            tr += ' <td class="" title="' + BARCODE + '">';
            tr += '  <input class=" atextBoxFor " id="B_BARNO_' + rowindex + '" maxlength="25" name="TPHYSTK[' + rowindex + '].BARNO" readonly="readonly" type="text" value="' + BARCODE + '">';
            tr += '  </td>';
            tr += '    <td class="" title="' + ITSTYLE + '">';
            tr += '    <input tabindex="-1" class=" atextBoxFor " id="B_ITSTYLE_' + rowindex + '" name="TPHYSTK[' + rowindex + '].ITSTYLE" readonly="readonly" type="text" value="' + ITSTYLE + '">';
            tr += '   </td> ';
            if (MNTNSHADE == "Y") {
                tr += '    <td class="" title="' + SHADE + '">';
                tr += '        <input tabindex="-1" class=" atextBoxFor " data-val="true" data-val-length="The field SHADE must be a string with a maximum length of 15." data-val-length-max="15" id="B_SHADE_' + rowindex + '" name="TPHYSTK[' + rowindex + '].SHADE" readonly="readonly" type="text" value="' + SHADE + '">';
                tr += '    </td>';
            }
            //else {
            //    tr += '        <input id="B_SHADE_' + rowindex + '" name="TPHYSTK[' + rowindex + '].SHADE" type="hidden" value="' + SHADE + '">';
            //}
            tr += '    <td class="" title="' + CUTLENGTH + '">';
            tr += '        <input class=" atextBoxFor text-box single-line" data-val="true" data-val-number="The field CUTLENGTH must be a number." id="B_CUTLENGTH_' + rowindex + '" maxlength="6" name="TPHYSTK[' + rowindex + '].CUTLENGTH" onkeypress="return numericOnly(this,2);" style="text-align: right;" type="text" onchange="CalculateBargridQnty_(\'_T_PhyStock_GRID\', ' + rowindex + ');" value="' + CUTLENGTH + '">';
            tr += '    </td>';
            tr += '    <td class="" title="' + NOS + '">';
            tr += '        <input class=" atextBoxFor text-box single-line" data-val="true" data-val-number="The field NOS must be a number." id="B_NOS_' + rowindex + '" maxlength="12" name="TPHYSTK[' + rowindex + '].NOS" onkeypress="return numericOnly(this,0);" style="text-align: right;" type="text" onchange="CalculateBargridQnty_(\'_T_PhyStock_GRID\', ' + rowindex + ');" value="' + NOS + '">';
            tr += '    </td>';
            tr += '    <td class="" title="' + QNTY + '">';
            tr += '        <input class=" atextBoxFor text-box single-line" data-val="true" data-val-number="The field QNTY must be a number." id="B_QNTY_' + rowindex + '" maxlength="12" name="TPHYSTK[' + rowindex + '].QNTY" onkeypress="return numericOnly(this,3);" style="text-align: right;" type="text" onblur="CalculateBargridQnty_(\'_T_PhyStock_GRID\', ' + rowindex + ');" value="' + QNTY + '">';
            tr += '    </td>';
            tr += '    <td class="" title="' + RATE + '">';
            tr += '        <input tabindex="-1" class=" atextBoxFor text-box single-line" data-val="true" data-val-number="The field RATE must be a number." id="B_RATE_' + rowindex + '" maxlength="14" name="TPHYSTK[' + rowindex + '].RATE" onkeypress="return numericOnly(this,3);" style="text-align: right;" type="text"   value="' + RATE + '" >';
            tr += '    </td>';
            tr += '    <td class="" title="' + STKTYPE + '">';
            tr += '        <input tabindex="-1" class=" atextBoxFor " data-val="true" data-val-length="The field STKTYPE must be a string with a maximum length of 1." data-val-length-max="1" id="B_STKTYPE_' + rowindex + '" name="TPHYSTK[' + rowindex + '].STKTYPE" readonly="readonly" type="text" value="' + STKTYPE + '">';
            tr += '     </td>';
            tr += '    <td class="">';
            tr += ' <input class=" atextBoxFor " data-target="#ZoomTextBoxModal" data-toggle="modal" data-val="true" data-val-length="The field ITREM must be a string with a maximum length of 100." data-val-length-max="100" id="B_ITREM_' + rowindex + '" maxlength="100" name="TPHYSTK[' + rowindex + '].ITREM" onclick="OpenZoomTextBoxModal(this.id)" type="text" value="' + ITREM + '">';
            tr += '    </td>';
            tr += '        <td class="sticky-cell-opposite">';
            tr += '            <button type="button" class="atextBoxFor btn-info" onclick="FillBarcodeArea_(\'\', \'_T_PhyStock_GRID\', ' + rowindex + ');" title="CLICK HERE TO EDIT BARCODEDATA"><span class="glyphicon glyphicon-pencil"></span></button>';
            tr += '        </td>';
            tr += ' </tr>';

            $("#_T_PhyStock_GRID tbody").append(tr);
            CalculateTotal_Barno_();

            ClearBarcodeArea_();
            $("#T_BARCODE").focus();
        }




    }

    function UpdateBarCodeRow_(SLNOIde, Mergerow) {
        debugger;
        if ("@Model.DefaultAction" == "V") return true;
        var MENU_PARA = $("#MENU_PARA").val();
        var MNTNLISTPRICE = $("#MNTNLISTPRICE").val();

        if ($("#QNTY").val() == "0") {
            msgInfo("Quantity should not be zero(0) !");
            message_value = "QNTY";
            return false;
        }


        var FLAGMTR = $("#FLAGMTR").val();
        var QNTY = $("#QNTY").val();

        var SLNO = $("#" + SLNOIde).val();
        var GridRowMain = $("#_T_PhyStock_GRID > tbody > tr").length;
        for (j = 0; j <= GridRowMain - 1; j++) {
            if ($("#B_SLNO_" + j).val() == SLNO) {
                var tqnty = retFloat($("#QNTY").val());
                var tnos = retFloat($("#NOS").val());
                var tcutlength = retFloat($("#CUTLENGTH").val());
                if (Mergerow == "Y") {
                    tqnty += retFloat($("#B_QNTY_" + j).val());
                    tnos += retFloat($("#B_NOS_" + j).val());
                    tcutlength += retFloat($("#B_CUTLENGTH_" + j).val());
                }

                $("#B_BARNO_" + j).val($("#T_BARCODE").val());
                $("#B_MTRLJOBCD_" + j).val($("#MTRLJOBCD").val());
                $("#B_ITCD_" + j).val($("#ITCD").val());
                $("#B_ITSTYLE_" + j).val($("#ITSTYLE").val().trim());
                $("#B_STYLENO_" + j).val($("#STYLENO").val());
                $("#B_STKTYPE_" + j).val($("#STKTYPE").val());
                $("#B_PARTCD_" + j).val($("#PARTCD").val());
                //$("#B_QNTY_" + j).val($("#QNTY").val());
                //$("#B_NOS_" + j).val($("#NOS").val());
                $("#B_CUTLENGTH_" + j).val($("#CUTLENGTH").val());
                $("#B_QNTY_" + j).val(tqnty);
                $("#B_NOS_" + j).val(tnos);
                //$("#B_CUTLENGTH_" + j).val(tcutlength);
                $("#B_RATE_" + j).val($("#RATE").val());
                $("#B_SHADE_" + j).val($("#SHADE").val());
                $("#B_ITREM_" + j).val($("#ITREM").val())
                $("#B_LOCABIN_" + j).val($("#LOCABIN").val());

            }

        }
        CalculateTotal_Barno_();
        ClearBarcodeArea_();
        $("#AddRow_Barcode").show();
        $("#UpdateRow_Barcode").hide();
        $("#T_BARCODE").focus();
    }

</script>
<script>
    function CalculateBargridQnty_(tableid, index) {
        debugger;
        if ("@Model.DefaultAction" == "V") return true;
        var CUTLENGTHID = "", NOSID = "", QNTY = "";
        if (tableid == "_T_PhyStock_GRID") {
            CUTLENGTHID = "B_CUTLENGTH_" + index;
            NOSID = "B_NOS_" + index;
            QNTYID = "B_QNTY_" + index;
        }
        else {
            CUTLENGTHID = "CUTLENGTH";
            NOSID = "NOS";
            QNTYID = "QNTY";
        }
        if (retFloat($("#" + CUTLENGTHID).val()) != 0 && retFloat($("#" + NOSID).val()) != 0) {
            var qnty = retFloat($("#" + CUTLENGTHID).val()) * retFloat($("#" + NOSID).val());
            $("#" + QNTYID).val(retFloat(qnty));
        }
        if (tableid == "_T_PhyStock_GRID") {
            CalculateTotal_Barno_();

        }
    }

    function ClearBarcodeArea_(TAG) {
        if ("@Model.DefaultAction" == "V") return true;
        var MENU_PARA = $("#MENU_PARA").val();
        ClearAllTextBoxes("T_BARCODE,SHADE,ITCD,STYLENO,STKTYPE,PARTCD,PARTNM,PRTBARCODE,QNTY,NOS,CUTLENGTH,RATE,SHADE,LOCABIN,MTRLJOBCD,MTRLJOBNM,MTBARCODE,ITREM,ITSTYLE,Last_BARCODE,Last_STYLENO");

        $("#STKTYPE").val("F");
        if (TAG == "Y") {
            $("#AddRow_Barcode").show();
            $("#UpdateRow_Barcode").hide();
            $("#T_BARCODE").focus();

        }

    }
</script>
<script>
    function CalculateTotal_Barno_() {
        debugger;
        if ("@Model.DefaultAction" == "V") return true;
        var MENU_PARA = $("#MENU_PARA").val();
        var T_QNTY = 0, T_NOS = 0;
        var GridRow = $("#_T_PhyStock_GRID > tbody > tr").length;
        for (var i = 0; i <= GridRow - 1; i++) {
            var QNTY = $("#B_QNTY_" + i).val();
            if (QNTY != "") { T_QNTY = T_QNTY + parseFloat(QNTY); } else { T_QNTY = T_QNTY + parseFloat(0); }
            var NOS = $("#B_NOS_" + i).val();
            if (NOS != "") { T_NOS = T_NOS + parseFloat(NOS); } else { T_NOS = T_NOS + parseFloat(0); }
        }
        $("#B_T_QNTY").val(parseFloat(T_QNTY).toFixed(2));
        $("#B_T_NOS").val(parseFloat(T_NOS).toFixed(0));

    }
</script>
<script>
    function DocumentDateChng(fld) {
        debugger;
        if ("@Model.DefaultAction" == "V") return true;
        DocumentDateCHK(fld);
        var chk = DocumentDateCHK(fld);
        if (chk == false) return true;
        var value = docdtmodify_check();
        if (value == "true") {
            $.ajax({
                type: 'post',
                url: "@Url.Action("DocumentDateChng", PageControllerName)",
                beforesend: $("#WaitingMode").show(),
                data: $('form').serialize() + "&DOCDT=" + $("#DOCDT").val(),
                success: function (result) {
                    var res = result.split("^^^^^^^^^^^^~~~~~~^^^^^^^^^^");
                    var MSG = res[0].indexOf(String.fromCharCode(181));
                    if (MSG >= 0) {
                        $("#MNTNPART").val(returncolvalue(res[0], "MNTNPART"));
                        $("#MNTNSHADE").val(returncolvalue(res[0], "MNTNSHADE"));
                        $("#partialdivBarCodeTab").html(res[1]);
                        $("#WaitingMode").hide();
                    }
                    else {
                        $("#WaitingMode").hide();
                        msgInfo(res[0]);
                        message_value = "DOCDT";
                        return false;
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }

    }
    function docdtmodify_check() {
        debugger;
        if ("@Model.DefaultAction" == "V") return true;
        var DOCDT = $("#DOCDT").val();
        var Last_DOCDT = $("#Last_DOCDT").val();
        if (Last_DOCDT != DOCDT) {
            $("#Last_DOCDT").val(DOCDT);
            return "true";
        }
        else {
            return "false";
        }
    }
</script>
<script>
    function GetBarnoDetails(id, HelpFrom) {
        debugger;
        if ("@Model.DefaultAction" == "V") return true;
        var MENU_PARA = $("#MENU_PARA").val();
        if (id == "") {
            ClearBarcodeArea_();
            $("#AddRow_Barcode").show();
            $("#UpdateRow_Barcode").hide();

        }
        else {
            if (!emptyFieldCheck("Please Select / Enter Document Date", "DOCDT")) { return false; }
            //if ($("#TAXGRPCD").val() == "") { $("#BARCODE").val(""); msgInfo("TaxGrp. Code not available.Please Select / Enter another Party Code to get TaxGrp. Code"); message_value = "SLCD"; return false; }
            if ($("#PRCCD").val() == "") { $("#T_BARCODE").val(""); msgInfo("Price Code not available.Please Select / Enter another Party Code to get Price Code"); message_value = "SLCD"; return false; }
            if ($("#GOCD").val() == "") { $("#GOCD").val(""); msgInfo("Godown not available.Please Select / Enter Godown"); message_value = "GOCD"; return false; }
            var MTRLJOBCD = $("#MTRLJOBCD").val();
            var PARTCD = $("#PARTCD").val();
            var docdt = $("#DOCDT").val();
            var taxgrpcd = $("#TAXGRPCD").val();
            var gocd = $("#GOCD").val();
            var prccd = $("#PRCCD").val();
            var allmtrljobcd = $("#ALLMTRLJOBCD").val();
            var BARCODE = $("#T_BARCODE").val();
            var AUTONO = $("#AUTONO").val();
            var SLCD = $("#SLCD").val();
            var code = MTRLJOBCD + String.fromCharCode(181) + PARTCD + String.fromCharCode(181) + docdt + String.fromCharCode(181) + taxgrpcd + String.fromCharCode(181) + gocd + String.fromCharCode(181) + prccd + String.fromCharCode(181) + allmtrljobcd + String.fromCharCode(181) + HelpFrom + String.fromCharCode(181) + BARCODE + String.fromCharCode(181) + AUTONO + String.fromCharCode(181) + SLCD;

            var hlpfieldid = "", hlpfieldindex = "", ReferanceFieldID = "", ReferanceFieldIndex = "";
            if (HelpFrom == "Bar") {
                hlpfieldid = "T_BARCODE";
                hlpfieldindex = "0";
                ReferanceFieldID = "/STYLENO";
                ReferanceFieldIndex = "/3";
            }
            else {
                hlpfieldid = "STYLENO";
                hlpfieldindex = "3";
                ReferanceFieldID = "/T_BARCODE";
                ReferanceFieldIndex = "/0";
            }
            if ($("#Barnohelpopen").val() == "Y") {
                $.ajax({
                    type: 'POST',
                    beforesend: $("#WaitingMode").show(),
                    url: "@Url.Action("GetBarCodeDetails", PageControllerName)",
                    data: "&val=" + id + "&Code=" + code,
                    success: function (result) {
                        var MSG = result.indexOf('#helpDIV');
                        if (MSG >= 0) {
                            ClearBarcodeArea_();
                            $('#SearchFldValue').val(hlpfieldid);
                            $('#helpDIV').html(result);
                            $('#ReferanceFieldID').val(hlpfieldid + ReferanceFieldID + '/PARTCD/MTRLJOBCD');
                            $('#ReferanceColumn').val(hlpfieldindex + ReferanceFieldIndex + '/5/2');
                            $('#helpDIV_Header').html('Barno Details');
                        }
                        else {
                            var MSG = result.indexOf(String.fromCharCode(181));
                            if (MSG >= 0) {
                                if (!$('#PRCCD').is('[readonly]')) {
                                    $("#PRCCD").attr("readonly", "readonly");
                                    $('#PRCCD_HELP').hide();
                                }
                                var value1 = modify_check_stylebarno();
                                if (value1 == "true") {
                                    FillBarcodeArea_(result);

                                    if (document.getElementById("AUTOADDROW").checked == true) {
                                        AddBarCodeGrid_();
                                    }
                                }
                                else {
                                    $("#PRTBARCODE").val(returncolvalue(result, "PRTBARCODE"));
                                }

                            }
                            else {
                                $('#helpDIV').html("");
                                msgInfo("" + result + " !");
                                ClearBarcodeArea_();
                                message_value = hlpfieldid;
                            }
                        }
                        $("#WaitingMode").hide();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $("#WaitingMode").hide();
                        msgError(XMLHttpRequest.responseText);
                        $("body span h1").remove(); $("#msgbody_error style").remove();
                    }
                });
            }
            else {
                $("#Barnohelpopen").val("Y");
            }
        }
    }
    function modify_check_stylebarno() {
        debugger;
        if ("@Model.DefaultAction" == "V") return true;
        var BARCODE = $("#T_BARCODE").val();
        var Last_BARCODE = $("#Last_BARCODE").val();
        var STYLENO = $("#STYLENO").val();
        var Last_STYLENO = $("#Last_STYLENO").val();

        if (Last_BARCODE != BARCODE || STYLENO != Last_STYLENO) {
            $("#Last_BARCODE").val(BARCODE);
            $("#Last_STYLENO").val(STYLENO);
            return "true";
        }
        else {
            return "false";
        }
    }
</script>
<script>
    function PriceOpen() {
        $('.PopUp_Backround').show();
        $("#popupPrice").show();
        $('#popupPrice input').attr("readonly", false);
        $("#POPUPPRCCD_HELP").show();
        $("#POPUPINCDECPER").val($("#DOCAMT").val());
        //$("#RPPERMANUAL").val($("#DOCAMT").val());
        //$("#WPPERMANUAL").val($("#DOCAMT").val());
    }
    function PriceClose() {
        ClearAllTextBoxes("POPUPPRCCD,POPUPPRCNM,POPUPEFFDT,POPUPINCDECPER");
        $("#popupPrice").hide();
        $('.PopUp_Backround').fadeOut();
    }
    function SavePrice() {
        debugger;
        if (!emptyFieldCheck("Enter Effective Date", "POPUPEFFDT")) { return false; }
        if (!emptyFieldCheck("Enter Price Code", "POPUPPRCCD")) { return false; }
        //if ($("#RPPERMANUAL").val() == "" && $("#WPPERMANUAL").val() == "") return true;
        $.ajax({
            type: 'post',
            beforesend: $("#WaitingMode").show(),
            url: "@Url.Action("UpdatePrice", "T_PhyStock")",
            data: $('form').serialize(),
            success: function (result) {
                $("#WaitingMode").hide();
                if (result == "1") {
                    msgSuccess1("Save Successfully !");
                }
                else {
                    msgInfo(result);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function pageprinting() {
        debugger;
        var ty = $("#DOCCD").val();
        $.ajax({
            type: 'POST',
            url: "@Url.Action("Print", PageControllerName)",
            data: $('form').serialize() + "&DOCNO=" + $("#DOCONLYNO").val() + "&DOC_CD=" + $("#DOCCD").val() + "&DOCDT=" + $("#DOCDT").val(),
            success: function (result) {
                window.open("@Url.Action("PhyStockPrint", "PhyStockPrint", new { US = Model.UNQSNO_ENCRYPTED })", "_blank")
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
@using (Html.BeginForm())
{
    if (Model.DefaultView == true)
    {
        @Html.HiddenFor(a => Model.maxdate)
        @Html.HiddenFor(a => Model.mindate)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" id="btnSave" value="@Url.Action("SAVE", PageControllerName)" />
        <input type="hidden" id="srhpnl" value="@Url.Action("SearchPannelData", PageControllerName)" />
        <input type="hidden" id="urlcancelrecord" value="@Url.Action("cancelRecords", PageControllerName)" />
        <input type="hidden" id="UrlBarnoDetails" value="@Url.Action("GetBarCodeDetails", PageControllerName)" />
        <input type="hidden" id="partylinkcd" value="T" />
        <input type="hidden" id="Barnohelpopen" value="Y" />
        @Html.HiddenFor(s => s.DefaultAction)
        @Html.HiddenFor(a => a.T_PHYSTK_HDR.AUTONO, new { id = "AUTONO" })
        @*@Html.HiddenFor(a => a.T_CNTRL_HDR.DOCONLYNO)*@
        @Html.HiddenFor(a => a.T_CNTRL_HDR.MNTHCD)
        @Html.HiddenFor(a => a.T_CNTRL_HDR.EMD_NO)
        @Html.HiddenFor(a => a.M_SYSCNFG.MNTNPART, new { id = "MNTNPART" })
        @Html.HiddenFor(a => a.M_SYSCNFG.MNTNSHADE, new { id = "MNTNSHADE" })
        @Html.HiddenFor(a => a.TAXGRPCD, new { id = "TAXGRPCD" })
        @Html.HiddenFor(a => a.MTRLJOBCD, new { id = "MTRLJOBCD" })
        @Html.HiddenFor(a => a.ALLMTRLJOBCD, new { id = "ALLMTRLJOBCD" })
        @Html.HiddenFor(model => model.Audit_REM, new { id = "Audit_REM" })
 <input type="hidden" id="ModuleCode" value="@CommVar.ModuleCode()" />
        <input type="hidden" id="Defaultbar" value="Bar" />
        <input type="hidden" id="Defaultstyle" value="Style" />
        <div class="form-horizontal">
            @if (Model.DefaultAction == "V")
            {
                @Html.Partial("_FilteredSearch")
            }
            <div class="row" style="margin-top: 5px;">
                <div class="row">
                    <div class="col-md-5" style="margin-top: 6px;">
                        <div class="editor-label">
                            @Html.Label("", "Document Code")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="editor-field">
                            @if (Model.DefaultAction == "A")
                    {
                            @Html.DropDownListFor(model => model.T_CNTRL_HDR.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", @onchange = "ChangeDoctype();" })
                            }
                            else
                            {
                            @Html.DropDownListFor(model => model.T_CNTRL_HDR.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", style = "pointer-events:none;background-color:#eee" })
                            }
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Document Date")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_CNTRL_HDR.DOCDT, new { htmlAttributes = new { @class = "form-control", id = "DOCDT", onchange = "DocumentDateChng(this);", onblur = "DocumentDateChng(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy", maxlength = 10 } })
                            @Html.HiddenFor(model => Model.Last_DOCDT, new { @class = "form-control", id = "Last_DOCDT" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Document No.")
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_CNTRL_HDR.DOCONLYNO, new { htmlAttributes = new { @class = "form-control", id = "DOCONLYNO", @placeholder = "Doc. No.", maxlength = 6, @readonly = "readonly" } })
                        </div>
                    </div>
                    @if (Model.DefaultAction == "V")
                    {
                    <div class="col-md-3">
                        <input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;" id="Print_Barcode" value="Print Barcode" title="Click to Print Barcode" onclick="Barcodeprinting()" />
                    </div>
                    }
                </div>
                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Godown")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_PHYSTK_HDR.GOCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "GOCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetGodownDetails", PageControllerName) + "','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetGodownDetails", PageControllerName) + "','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0');", @placeholder = "Code", maxlength = 6 } })
                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetGodownDetails", PageControllerName)','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0')" />
                            @*@Html.HiddenFor(model => model.GONM, new { id = "GONM" })*@
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.GONM, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @title = "Godown Name", @placeholder = "Godown Name", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Remarks")
                        </div>
                    </div>
                    <div class="col-md-10">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_PHYSTK_HDR.TREM, new { htmlAttributes = new { @class = "form-control", id = "TREM", @placeholder = "Remarks", maxlength = 100 } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Price Code")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="editor-field">
                            @*@Html.EditorFor(model => model.PRCCD, new { htmlAttributes = new { @class = "form-control", id = "PRCCD", @TabIndex = -1, @title = "Only for View", @placeholder = "Code", @readonly = "readonly" } })*@
                            @Html.EditorFor(model => model.T_PHYSTK_HDR.PRCCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "PRCCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetPriceDetails", PageControllerName) + "','Price Details','PRCCD','PRCCD=PRCCD=1/PRCNM=PRCNM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetPriceDetails", PageControllerName) + "','Price Details','PRCCD','PRCCD=PRCCD=1/PRCNM=PRCNM=0');", @placeholder = "Code", maxlength = 4 } })
                            <img src="~/Image/search.png" width="20px" height="20px" id="PRCCD_HELP" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetPriceDetails", PageControllerName)','Price Details','PRCCD','PRCCD=PRCCD =1/PRCNM =PRCNM =0')" />

                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.PRCNM, new { htmlAttributes = new { @class = "form-control", id = "PRCNM", @TabIndex = -1, @title = "Price List Name", @placeholder = "Price List Name", @readonly = "readonly" } })
                        </div>
                    </div>
                    @*<div class="col-md-7" style="width:auto;">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Price Increase/Decrease (%)")
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_CNTRL_HDR.DOCAMT, new { htmlAttributes = new { @class = "form-control", id = "DOCAMT", @onkeypress = "return numericOnly(this,2);", maxlength = 12, @title = "Price Increase Decrease in %", @placeholder = "%" } })
                        </div>
                    </div>*@
                    @if (Model.DefaultAction == "V")
                    {
                        <div class="col-md-6">
                            <input type="button" class="btn btn-success" style="margin-top: 2px;padding: 2px 7px 1px 7px;" id="Edit_Price" value="Update Price in Master" title="Click to Update Price in Master" onclick="PriceOpen()" />
                        </div>
                    }
                    else
                    {
                        <div class="col-md-2" style="width:auto;">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Auto Row Add in Grid")
                            </div>
                        </div>
                        <div class="col-md-1" style="margin-right: -41px;">
                            <div class="editor-field" style="margin-top:6px;">
                                @Html.CheckBoxFor(model => model.AUTOADDROW, new { id = "AUTOADDROW" })
                            </div>
                        </div>
                        <div class="col-md-1" style="width:auto;">
                            <div class="editor-field" style="margin-top: 6px;">
                                @Html.Label("", "Merge Same Item in Detail")
                            </div>
                        </div>
                            <div class="DivMergeBarItem col-md-1" style="width:auto;margin-top:6px;">
                                @Html.CheckBoxFor(model => model.MERGEINDTL, new { id = "MERGEINDTL", @TabIndex = -1 })
                            </div>
                    }
                </div>
            </div>
            <div class="row" style="margin-top:5px;">
                <ul class="nav nav-tabs">
                    <li id="Main_LI4" class="active"><a data-toggle="tab" href="#Main" accesskey="M">Main(M)</a></li>
                    <li id="Remarks_LI4" class=""><a data-toggle="tab" href="#Remarks" accesskey="R">Remarks(R)</a></li>
                    <li id="Documents_LI4" class=""><a data-toggle="tab" href="#Documents" accesskey="U">Documents(U)</a></li>
                </ul>
                <div id="popup" class="row" style="margin-top: 11px;top:15%;left:2%;right:2%;position:absolute;">
                </div>
                <div class="tab-content">
                    <div id="Main" class="tab-pane fade in active" style="margin-top: 10px;margin-left: 11px;">

                        @if (Model.DefaultAction != "V")
                    {   <div class="row">
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Bar No")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="editor-field">

                                    @*@Html.EditorFor(model => model.BARCODE, new { htmlAttributes = new { @class = "form-control textbox_image", id = "T_BARCODE", onkeydown = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','T_BARCODE','T_BARCODE=BARNO=0/MTRLJOBCD=MTRLJOBCD=2/PARTCD=PARTCD=5/STYLENO=STYLENO=3/ITCD=itcd/ITSTYLE=itstyle/SHADE=shade/RATE=rate/STKTYPE=stktype/LOCABIN=locabin/QNTY=BALQNTY/NOS=BALNOS/CUTLENGTH=CUTLENGTH','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD/Defaultbar/T_BARCODE'),FillBarcodeArea_('', 'COPYLROW');", onblur = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','T_BARCODE','T_BARCODE=BARNO=0/MTRLJOBCD=MTRLJOBCD=2/PARTCD=PARTCD=5/STYLENO=STYLENO=3/ITCD=itcd/ITSTYLE=itstyle/SHADE=shade/RATE=rate/STKTYPE=stktype/LOCABIN=locabin/QNTY=BALQNTY/NOS=BALNOS/CUTLENGTH=CUTLENGTH','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD/Defaultbar/T_BARCODE')", @placeholder = "Bar Code", maxlength = 25 } })
                                        <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetBarCodeDetails", PageControllerName)','Bar Code Details','T_BARCODE','T_BARCODE=BARNO=0/MTRLJOBCD=MTRLJOBCD=2/PARTCD=PARTCD=5/STYLENO=STYLENO=3/ITCD=itcd/ITSTYLE=itstyle/SHADE=shade/RATE=rate/STKTYPE=stktype/LOCABIN=locabin/QNTY=BALQNTY/NOS=BALNOS/CUTLENGTH=CUTLENGTH','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD/Defaultbar/T_BARCODE')" />*@
                                    @Html.EditorFor(model => model.BARCODE, new { htmlAttributes = new { @class = "form-control textbox_image", id = "T_BARCODE", onkeydown = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','T_BARCODE','T_BARCODE=BARNO=0/MTRLJOBCD=MTRLJOBCD=2/PARTCD=PARTCD=5/STYLENO=STYLENO=3/ITCD=itcd/ITSTYLE=itstyle/SHADE=shade/RATE=rate/STKTYPE=stktype/LOCABIN=locabin/QNTY=BALQNTY/NOS=BALNOS/CUTLENGTH=CUTLENGTH','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD/Defaultbar/T_BARCODE'),FillBarcodeArea_('', 'COPYLROW');", onblur = "GetBarnoDetails(this.value,Defaultbar.value)", @placeholder = "Bar Code", maxlength = 25 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetBarCodeDetails", PageControllerName)','Bar Code Details','T_BARCODE','T_BARCODE=BARNO=0/MTRLJOBCD=MTRLJOBCD=2/PARTCD=PARTCD=5/STYLENO=STYLENO=3/ITCD=itcd/ITSTYLE=itstyle/SHADE=shade/RATE=rate/STKTYPE=stktype/LOCABIN=locabin/QNTY=BALQNTY/NOS=BALNOS/CUTLENGTH=CUTLENGTH','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD/Defaultbar/T_BARCODE')" />
                                    @Html.HiddenFor(model => model.Last_BARCODE, new { id = "Last_BARCODE" })
                                </div>
                            </div>
                            @*<div class="col-md-4">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.ITCD, new { htmlAttributes = new { @class = "form-control", id = "ITCD", @title = "Item Code", @placeholder = "Item Code", @readonly = "readonly", @TabIndex = -1 } })

                                    </div>
                                </div>*@
                            <div class="col-md-8">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.ITNM, new { htmlAttributes = new { @class = "form-control", id = "ITSTYLE", @title = "Item Name", @placeholder = "Item Name", @readonly = "readonly", @TabIndex = -1 } })

                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Design No.")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="editor-field">

                                    @*@Html.EditorFor(model => model.STYLENO, new { htmlAttributes = new { @class = "form-control textbox_image", id = "STYLENO", onkeydown = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','STYLENO','STYLENO=STYLENO=3/PARTCD=PARTCD=5/T_BARCODE=BARNO=0/ITCD=itcd/ITSTYLE=itstyle/SHADE=shade/RATE=rate','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD/Defaultstyle/T_BARCODE')", onblur = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','STYLENO','STYLENO=STYLENO=3/PARTCD=PARTCD=5/T_BARCODE=BARNO=0/ITCD=itcd/ITSTYLE=itstyle/SHADE=shade/RATE=rate','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD/Defaultstyle/T_BARCODE');", @placeholder = "Design No", maxlength = 25 } })
                                        <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetBarCodeDetails", PageControllerName)','Bar Code Details','STYLENO','STYLENO=STYLENO=3/PARTCD=PARTCD=5/T_BARCODE=BARNO=0/ITCD=itcd/ITSTYLE=itstyle/SHADE=shade/RATE=rate','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD/Defaultstyle/T_BARCODE')" />*@
                                    @Html.EditorFor(model => model.STYLENO, new { htmlAttributes = new { @class = "form-control textbox_image", id = "STYLENO", onkeydown = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','STYLENO','STYLENO=STYLENO=3/PARTCD=PARTCD=5/T_BARCODE=BARNO=0/ITCD=itcd/ITSTYLE=itstyle/SHADE=shade/RATE=rate','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD/Defaultstyle/T_BARCODE')", onblur = "GetBarnoDetails(this.value,Defaultstyle.value,'BLUR');", @placeholder = "Design No", maxlength = 25, @TabIndex = -1 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetBarCodeDetails", PageControllerName)','Bar Code Details','STYLENO','STYLENO=STYLENO=3/PARTCD=PARTCD=5/T_BARCODE=BARNO=0/ITCD=itcd/ITSTYLE=itstyle/SHADE=shade/RATE=rate','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD/Defaultstyle/T_BARCODE')" />
                                    @Html.HiddenFor(model => model.Last_STYLENO, new { id = "Last_STYLENO" })
                                </div>
                            </div>
                            @if (Model.M_SYSCNFG.MNTNSHADE == "Y")
                            {
                                <div class="col-md-1">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.SHADE, new { htmlAttributes = new { @class = "form-control", id = "SHADE", maxlength = 15, @title = "Shade", @placeholder = "Shade" } })
                                    </div>
                                </div>
                            }
                            @if (Model.M_SYSCNFG.MNTNPART == "Y")
                            {
                                <div class="col-md-1">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.PARTCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "PARTCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetPartDetails", PageControllerName) + "','Part Details','PARTCD','PARTCD=PARTCD=1/PARTNM=PARTNM=0/PRTBARCODE=PRTBARCODE')", onblur = "GetHelpBlur('" + @Url.Action("GetPartDetails", PageControllerName) + "','Part Details','PARTCD','PARTCD=PARTCD=1/PARTNM=PARTNM=0/PRTBARCODE=PRTBARCODE');", @placeholder = "Part Code", maxlength = 4, @title = "Part Code" } })
                                        <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetPartDetails", PageControllerName)','Part Details','PARTCD','PARTCD=PARTCD=1/PARTNM=PARTNM=0/PRTBARCODE=PRTBARCODE')" />
                                        @Html.HiddenFor(model => model.PARTNM, new { id = "PARTNM" })
                                        @Html.HiddenFor(model => model.PRTBARCODE, new { id = "PRTBARCODE" })
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="row">

                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Cut Length")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.CUTLENGTH, new { htmlAttributes = new { @class = "form-control", id = "CUTLENGTH", @onkeypress = "return numericOnly(this,3);", maxlength = 12, @placeholder = "Length", @title = "Length", @onchange = "CalculateBargridQnty_();" } })
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.NOS, new { htmlAttributes = new { @class = "form-control", id = "NOS", @onkeypress = "return numericOnly(this,3);", maxlength = 12, @placeholder = "Nos", @title = "Nos", @onchange = "CalculateBargridQnty_();" } })
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.QNTY, new { htmlAttributes = new { @class = "form-control", id = "QNTY", @onkeypress = "return numericOnly(this,3);", maxlength = 12, @placeholder = "Quantity", @title = "Quantity", @onblur = "CalculateBargridQnty_();" } })
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.RATE, new { htmlAttributes = new { @class = "form-control", id = "RATE", @onkeypress = "return numericOnly(this,2);", maxlength = 14, @title = "Rate", @placeholder = "Rate" } })
                                </div>
                            </div>
                            @Html.HiddenFor(model => model.BALENO, new { id = "BALENO" })
                            @Html.HiddenFor(model => model.BALEYR, new { id = "BALEYR" })
                            @Html.HiddenFor(model => model.SLNO, new { id = "SLNO" })

                        </div>
                        <div class="row">
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Stock Type")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.STKTYPE, new SelectList(Model.DropDown_list_StkType, "Value", "Text", Model.STKTYPE), new { @class = "form-control", id = "STKTYPE", @title = "Stock Type" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">

                                    @Html.EditorFor(model => model.LOCABIN, new { htmlAttributes = new { @class = "form-control textbox_image", id = "LOCABIN", onkeydown = "GetHelpBlur('" + @Url.Action("GetLocationBinDetails", PageControllerName) + "','Location Bin Details','LOCABIN','LOCABIN=LOCABIN=2')", onblur = "GetHelpBlur('" + @Url.Action("GetLocationBinDetails", PageControllerName) + "','SLocation Binize Details','LOCABIN','LOCABIN=LOCABIN=2');", @placeholder = "Location Bin", maxlength = 10, @title = "Location Bin" } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetLocationBinDetails", PageControllerName)','Location Bin Details','LOCABIN','LOCABIN=LOCABIN=2')" />

                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Remarks")
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.ITREM, new { htmlAttributes = new { @class = "form-control", id = "ITREM", maxlength = 100, @placeholder = "Remarks" } })
                                </div>
                            </div>
                            <div class="col-md-1" style="width:auto;">
                                @*<input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;" id="AddRow_Barcode" accesskey="A" value="Add Row(A)" title="Click to Fill Data in Product Details" onclick="Add_BarCodeRow()" />*@
                                <input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;" id="AddRow_Barcode" accesskey="A" value="Add Row(Alt+A)" title="Click to Fill Data in Barcode Details" onclick="AddBarCodeGrid_()" />
                                <input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;display:none;" id="UpdateRow_Barcode" accesskey="W" value="Update Row(Alt+W)" title="Click to Update Data in Barcode Details" onclick="UpdateBarCodeRow_('SLNO')" />
                                <input type="button" class="btn btn-danger" style="margin-top: 2px;padding: 2px 7px 1px 7px;" id="Clear_Barcode" accesskey="Z" value="Clear(Alt+Z)" title="Click to Clear" onclick="ClearBarcodeArea_('Y')" />

                            </div>
                        </div>

                        @*<div class="col-lg-1">
                                <div class="editor-field" style="margin-top:5px;width:auto;height:60px; overflow:auto;border:5px groove;overflow-x: hidden;">
                                    <table id="exampleLT" border="1" style="width: auto;">
                                        @for (int i = 0; i < Model.DropDown_list_MTRLJOBCD.Count; i++)
                                        {
                                            <tr>
                                                <td align="center">
                                                    @Html.CheckBoxFor(model => model.DropDown_list_MTRLJOBCD[i].Checked, new { id = "MaterialJobChk_" + i, onclick = "GetAllMtrljobcd();", @TabIndex = -1 })
                                                </td>
                                                <td align="center">
                                                    @{ string STRC = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD.ToString();}
                                                    @Html.DisplayFor(model => STRC)
                                                    @Html.HiddenFor(model => model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD, new { id = "MaterialJobCode_" + i })
                                                </td>
                                                <td align="center">
                                                    @{ string STRC1 = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBNM.ToString();}
                                                    @Html.DisplayFor(model => STRC1)
                                                </td>
                                            </tr>
                                                        }
                                    </table>
                                </div>
                                @Html.HiddenFor(model => model.ALLMTRLJOBCD, new { id = "ALLMTRLJOBCD" })
                            </div>*@


                        }
                        <div class="row">
                            <div class="col-md-3" style="width:auto;">
                            </div>
                        </div>
                        <div style="margin-top:4px;background-color:#c4b9b9;border:5px groove;width: fit-content;">
                            <div id="partialdivBarCodeTab">
                                @Html.Partial("_T_PhyStock_BarTab")
                            </div>
                        </div>
                        @if (Model.DefaultAction != "V")
                        {
                            <div>
                                <div class="row">
                                    <p class="text-info">Press <b>F8</b> in Bar Code/Design No (Bar code area) to copy last row of Bar Code Grid. </p>
                                </div>
                            </div>
                        }

                        @*<div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;width:fit-content;">

                                <div>
                                    <div id="partialdivMain" style="margin-top:0px;">
                                        @Html.Partial("_T_PhyStock_Main")
                                    </div>
                                </div>
                            </div>*@
                    </div>
                    <div id="Remarks" class="tab-pane fade">
                        <div class="row">
                            <div>
                                <div id="partialdivRemarks">
                                    @Html.Partial("_TRANSACTIONREMARKS")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Documents" class="tab-pane fade" style="margin-top: 10px;">
                        <div class="row" style="background-color:#c4b9b9;border:5px groove;width:fit-content;">
                            <div>
                                <div id="partialdivDocument" style="margin-top:0px;">
                                    @Html.Partial("_UPLOADDOCUMENTS")
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="PopUp_Backround">
                    <div id="popupPrice" class="row" style="margin-top: 11px;top:15%;left:25%;right:8%;position:absolute;display:none;">
                        @Html.Partial("_T_PhyStock_UpdatePrice")
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        @ViewBag.ErrorMessage
    }

    <div class="container">
        <div id="helpDIV">

        </div>
    </div>
}
