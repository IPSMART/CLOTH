@model Improvar.ViewModels.TransactionPhyStockEntry
@{
    string PageControllerName = "T_PhyStock";
    ViewBag.Title = "Physical Stock";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<style>
    .TextAreaRemarks {
        height: 190px;
    }
</style>
<script src="~/Scripts/jquery.min.js"></script>

<link rel="stylesheet" href="~/Content/jquery.stickytable.css">
<script src="~/Scripts/Sale.js?Ver=@System.DateTime.Now"></script>
<script type="text/javascript">
    $("#WaitingMode").show();
    $(document).ready(function () {
        if ("@Model.DefaultAction" == "V" || "@Model.DefaultAction" == "D") {
            modeView();
            $(".sl_bom_grid").prop("disabled", false);
        }
        else if ("@Model.DefaultAction" == "E") {

        }
        else if ("@Model.DefaultAction" == "A") {
            $('form :input:enabled:visible:not([readonly]):first').focus();
        }
        $("#WaitingMode").hide();

    });

</script>
<script>
    @{
        string mldauto = "";
        if (@Model.T_CNTRL_HDR != null)
        {
            if (@Model.T_CNTRL_HDR.AUTONO != null)
            {
                mldauto = Model.T_CNTRL_HDR.AUTONO.ToString();
                if (Model.T_CNTRL_HDR.CANCEL == "Y")
                {
                    ViewBag.formname = ViewBag.formname + "   " + "(Record Cancelled)";
                }
            }
        }
        else
        {
            mldauto = "";
        }
    }
    function ModifyLogDetails() {
        if ("@Model.DefaultAction" == "V") {
            ModifyLogDtl('@mldauto');
        }
    }
</script>
<script>
    function requiredFieldValidator() {
        if (!emptyFieldCheck("Please Select / Enter Document Date", "DOCDT")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Party", "MUTSLCD")) { return false; }
        return true;
    }
</script>
<script>
    $(function () {
        if ("@Model.DefaultAction" != "V") {
            $("#DOCDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate', minDate: '@Model.mindate' });
            $("#LRDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate' });
        }
    });
</script>
<script>
    function GetPendingData() {
        debugger;
        if ("@Model.DefaultAction" != "V") {
            if (!emptyFieldCheck("Please Select / Enter Document Date", "DOCDT")) { return false; }
            var docdt = $("#DOCDT").val();
            $.ajax({
                type: 'POST',
                url: "@Url.Action("GetPendingData", PageControllerName)",
                data: "&DOCDT=" + docdt,
                success: function (result) {
                    if (result == 0) { return msgWarning("Record not Found! Please enter valid Document date."); }
                    $("#popup").animate({ marginTop: '-10px' }, 50);
                    $("#popup").html(result);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }

</script>
<script>
    function AddDOCrow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddDOCRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '-10px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeleteDOCrow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteDOCRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '0px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function pageprinting() {
        var ty = $("#DOCCD").val();
        $.ajax({
            type: 'get',
            url: "@Url.Action("Print", PageControllerName)",
            data: "DOCNO=" + $("#DOCNO").val() + "&DOC_CD=" + $("#DOCCD").val() + "&DOCDT=" + $("#DOCDT").val(),
            success: function (result) {
                window.open("@Url.Action("Rep_OrdPrint", "Rep_OrdPrint", new { US = Model.UNQSNO_ENCRYPTED })", "_blank")
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>

    function DeleteRow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivMain").animate({ marginTop: '0px' }, 50);
                $("#partialdivMain").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function AddBarCodeGrid_() {
        debugger;
        var DefaultAction = $("#DefaultAction").val();
        var ModuleCode = $("#ModuleCode").val();
        if (DefaultAction == "V") return true;
        var MENU_PARA = $("#MENU_PARA").val();
        var MNTNPART = $("#MNTNPART").val();

        var MNTNSHADE = $("#MNTNSHADE").val();
      
        if ($("#MTRLJOBCD").val() == "") {
            msgInfo("Please enter Material Job Code !");
            message_value = "MTRLJOBCD";
            return false;
        }
      
        if ($("#QNTY").val() == "0") {
            msgInfo("Quantity should not be zero(0) !");
            message_value = "QNTY";
            return false;
        }
       
        var QNTY = $("#QNTY").val();

        var BARCODE = $("#BARCODE").val();
        var MTRLJOBCD = $("#MTRLJOBCD").val();
        var MTRLJOBNM = $("#MTRLJOBNM").val();
        var MTBARCODE = $("#MTBARCODE").val();
        var STYLENO = $("#STYLENO").val();
        var STKTYPE = $("#STKTYPE").val();
        var PARTCD = $("#PARTCD").val();
        var NOS = $("#NOS").val();
        var RATE = $("#RATE").val();
        var CUTLENGTH = $("#CUTLENGTH").val();     
        var SHADE = $("#SHADE").val();
        var BALENO = $("#BALENO").val();
        var BALEYR = $("#BALEYR").val();
        var LOCABIN = $("#LOCABIN").val();
  
        var rowindex = $("#_T_SALE_PRODUCT_GRID > tbody > tr").length;
        var SLNO = 1;
        if (retInt(rowindex) != 0) {
            var LASTROWINDEX = retInt(rowindex) - 1;
            var LASTSLNO = $("#B_SLNO_" + LASTROWINDEX).val();
            SLNO = retInt(LASTSLNO) + 1;
        }
      
      
        var tr = "";
        tr += ' <tr style="font-size:12px; font-weight:bold;">';
        tr += '    <td class="sticky-cell">';
        tr += '        <input tabindex="-1" data-val="true" data-val-required="The Checked field is required." id="B_Checked_' + rowindex + '" name="TPHYSTK[' + rowindex + '].Checked" type="checkbox" value="true"><input name="TPHYSTK[' + rowindex + '].Checked" type="hidden" value="false">';
        tr += '        <input data-val="true" data-val-length="The field BALENO must be a string with a maximum length of 30." data-val-length-max="30" id="B_BALENO_' + rowindex + '" name="TPHYSTK[' + rowindex + '].BALENO" type="hidden" value="' + BALENO + '">';
        tr += '        <input data-val="true" data-val-length="The field BALEYR must be a string with a maximum length of 4." data-val-length-max="4" id="B_BALEYR_' + rowindex + '" name="TPHYSTK[' + rowindex + '].BALEYR" type="hidden" value="' + BALEYR + '">';
        tr += '        <input data-val="true" data-val-length="The field LOCABIN must be a string with a maximum length of 10." data-val-length-max="10" id="B_LOCABIN_' + rowindex + '" name="TPHYSTK[' + rowindex + '].LOCABIN" type="hidden" value="' + LOCABIN + '">';
        tr += '        <input data-val="true" data-val-length="The field MTRLJOBCD must be a string with a maximum length of 10." data-val-length-max="10" id="B_MTRLJOBCD_' + rowindex + '" name="TPHYSTK[' + rowindex + '].MTRLJOBCD" type="hidden" value="' + MTRLJOBCD + '">';
        if (MNTNPART == "Y")
        {
            tr += '        <input data-val="true" data-val-length="The field PARTCD must be a string with a maximum length of 4." data-val-length-max="4" id="B_PARTCD_' + rowindex + '" name="TPHYSTK[' + rowindex + '].PARTCD" type="hidden" value="' + PARTCD + '">';
        }
     
        tr += '    </td>';
        tr += '    <td class="sticky-cell" style="left:17px;" title="' + SLNO + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " data-val="true" data-val-number="The field SLNO must be a number." data-val-required="The SLNO field is required." id="B_SLNO_' + rowindex + '" maxlength="2" name="TPHYSTK[' + rowindex + '].SLNO" readonly="readonly" style="text-align:center;" type="text" value="' + SLNO + '">';
        tr += '    </td>';
        tr += ' <td class="" title="' + BARCODE + '">';
        tr += '  <input class=" atextBoxFor " id="B_BARNO_' + rowindex + '" maxlength="25" name="TPHYSTK[' + rowindex + '].BARNO" readonly="readonly" type="text" value="' + BARCODE + '">';
        tr += '  </td>';
        tr += '    <td class="" title="' + STYLENO + '">';
        tr += '    <input tabindex="-1" class=" atextBoxFor " id="B_STYLENO_' + rowindex + '" name="TPHYSTK[' + rowindex + '].STYLENO" readonly="readonly" type="text" value="' + STYLENO + '">';
        tr += '   </td> ';
        if (MNTNSHADE == "Y") {
            tr += '    <td class="" title="' + SHADE + '">';
            tr += '        <input tabindex="-1" class=" atextBoxFor " data-val="true" data-val-length="The field SHADE must be a string with a maximum length of 15." data-val-length-max="15" id="B_SHADE_' + rowindex + '" name="TPHYSTK[' + rowindex + '].SHADE" readonly="readonly" type="text" value="' + SHADE + '">';
            tr += '    </td>';
        }
        else {
            tr += '        <input id="B_SHADE_' + rowindex + '" name="TPHYSTK[' + rowindex + '].SHADE" type="hidden" value="' + SHADE + '">';
        }
        tr += '    <td class="" title="' + CUTLENGTH + '">';
        tr += '        <input class=" atextBoxFor text-box single-line" data-val="true" data-val-number="The field CUTLENGTH must be a number." id="B_CUTLENGTH_' + rowindex + '" maxlength="6" name="TPHYSTK[' + rowindex + '].CUTLENGTH" onkeypress="return numericOnly(this,2);" style="text-align: right;" type="text" onchange="CalculateBargridQnty(\'_T_SALE_PRODUCT_GRID\', ' + rowindex + ');" value="' + CUTLENGTH + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + NOS + '">';
        tr += '        <input class=" atextBoxFor text-box single-line" data-val="true" data-val-number="The field NOS must be a number." id="B_NOS_' + rowindex + '" maxlength="12" name="TPHYSTK[' + rowindex + '].NOS" onkeypress="return numericOnly(this,3);" style="text-align: right;" type="text" onchange="CalculateBargridQnty(\'_T_SALE_PRODUCT_GRID\', ' + rowindex + ');" value="' + NOS + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + QNTY + '">';
        tr += '        <input class=" atextBoxFor text-box single-line" data-val="true" data-val-number="The field QNTY must be a number." id="B_QNTY_' + rowindex + '" maxlength="12" name="TPHYSTK[' + rowindex + '].QNTY" onkeypress="return numericOnly(this,3);" style="text-align: right;" type="text" onblur="CalculateBargridQnty(\'_T_SALE_PRODUCT_GRID\', ' + rowindex + ');" value="' + QNTY + '">';
        tr += '    </td>';
        tr += '    <td class="" title="' + RATE + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor text-box single-line" data-val="true" data-val-number="The field RATE must be a number." id="B_RATE_' + rowindex + '" maxlength="14" name="TPHYSTK[' + rowindex + '].RATE" onkeypress="return numericOnly(this,2);" style="text-align: right;" type="text" readonly="readonly" value="' + RATE + '" >';
        tr += '    </td>';
        tr += '    <td class="" title="' + STKTYPE + '">';
        tr += '        <input tabindex="-1" class=" atextBoxFor " data-val="true" data-val-length="The field STKTYPE must be a string with a maximum length of 1." data-val-length-max="1" id="B_STKTYPE_' + rowindex + '" name="TPHYSTK[' + rowindex + '].STKTYPE" readonly="readonly" type="text" value="' + STKTYPE + '">';
        tr += '     </td>';
        tr += '        <td class="sticky-cell-opposite">';
        tr += '            <button type="button" class="atextBoxFor btn-info" onclick="FillBarcodeArea(\'\', \'_T_SALE_PRODUCT_GRID\', ' + rowindex + ');" title="CLICK HERE TO EDIT BARCODEDATA"><span class="glyphicon glyphicon-pencil"></span></button>';
        tr += '        </td>';
        tr += ' </tr>';

        $("#_T_PhyStock_GRID tbody").append(tr);
        CalculateTotal_Barno();

        ClearBarcodeArea();
        $("#BARCODE").focus();
        //$("#bardatachng").val("Y");
    }

</script>
<script>
    function CalculateBargridQnty_(tableid, index) {
        debugger;
        var CUTLENGTHID = "", NOSID = "", QNTY = "";
        if (tableid == "_T_PhyStock_GRID") {
            CUTLENGTHID = "B_CUTLENGTH_" + index;
            NOSID = "B_NOS_" + index;
            QNTYID = "B_QNTY_" + index;
        }
        else {
            CUTLENGTHID = "CUTLENGTH";
            NOSID = "NOS";
            QNTYID = "QNTY";
        }
        if (retFloat($("#" + CUTLENGTHID).val()) != 0 && retFloat($("#" + NOSID).val()) != 0) {
            var qnty = retFloat($("#" + CUTLENGTHID).val()) * retFloat($("#" + NOSID).val());
            $("#" + QNTYID).val(retFloat(qnty));
        }
        if (tableid == "_T_PhyStock_GRID") {
            CalculateTotal_Barno();
            HasChangeBarSale()
        }
    }

    function ClearBarcodeArea_(TAG) {
        var DefaultAction = $("#DefaultAction").val();
        var MENU_PARA = $("#MENU_PARA").val();
        if (DefaultAction == "V") return true;
        ClearAllTextBoxes("BARCODE,SHADE,ITCD,STYLENO,STKTYPE,PARTCD,PARTNM,PRTBARCODE,QNTY,NOS,CUTLENGTH,RATE,SHADE,LOCABIN,MTRLJOBCD,MTRLJOBNM,MTBARCODE");
        if (MENU_PARA == "PB" || MENU_PARA == "OP") {
            ClearAllTextBoxes("BALENO,OURDESIGN,PDESIGN,WPPRICEGEN,RPPRICEGEN");
        }
        if (MENU_PARA == "SBPCK" || MENU_PARA == "SB" || MENU_PARA == "PB" || MENU_PARA == "OP") {
            ClearAllTextBoxes("ORDDOCNO,ORDDOCDT,ORDAUTONO,ORDSLNO");
        }
        $("#STKTYPE").val("F");
        if (TAG == "Y") {
            $("#AddRow_Barcode").show();
            $("#UpdateRow_Barcode").hide();
             $("#BARCODE").focus();
           
        }
      
    }
</script>
<script></script>


@using (Html.BeginForm())
{
    if (Model.DefaultView == true)
    {
        @Html.HiddenFor(a => Model.maxdate)
        @Html.HiddenFor(a => Model.mindate)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" id="btnSave" value="@Url.Action(" SAVE", PageControllerName)" />
        <input type="hidden" id="srhpnl" value="@Url.Action(" SearchPannelData", PageControllerName)" />
        <input type="hidden" id="urlcancelrecord" value="@Url.Action(" cancelRecords", PageControllerName)" />
        <input type="hidden" id="UrlBarnoDetails" value="@Url.Action("GetBarCodeDetails", PageControllerName)" />
        <input type="hidden" id="partylinkcd" value="T" />
        @Html.HiddenFor(s => s.DefaultAction)
        @Html.HiddenFor(a => a.T_PHYSTK_HDR.AUTONO, new { id = "AUTONO" })
        @*@Html.HiddenFor(a => a.T_CNTRL_HDR.DOCONLYNO)*@
        @Html.HiddenFor(a => a.T_CNTRL_HDR.MNTHCD)
        @Html.HiddenFor(a => a.T_CNTRL_HDR.EMD_NO)
        @Html.HiddenFor(a => a.TAXGRPCD, new { id = "TAXGRPCD" })
        
        <input type="hidden" id="Defaultbar" value="Bar" />
        <div class="form-horizontal">
            @if (Model.DefaultAction == "V")
            {
                @Html.Partial("_FilteredSearch")
            }
            <div class="row" style="margin-top: 5px;">
                <div class="row">
                    <div class="col-md-5" style="margin-top: 6px;">
                        <div class="editor-label">
                            @Html.Label("", "Document Code")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="editor-field">
                            @if (Model.DefaultAction == "A")
                    {
                                @Html.DropDownListFor(model => model.T_CNTRL_HDR.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", @onchange = "ChangeDoctype();" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.T_CNTRL_HDR.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", style = "pointer-events:none;background-color:#eee" })
                            }
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Document Date")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_CNTRL_HDR.DOCDT, new { htmlAttributes = new { @class = "form-control", id = "DOCDT", onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy", maxlength = 10 } })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Document No.")
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_CNTRL_HDR.DOCONLYNO, new { htmlAttributes = new { @class = "form-control", id = "DOCONLYNO", @placeholder = "Doc. No.", maxlength = 6, @readonly = "readonly" } })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Godown")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="editor-field">
                           @Html.EditorFor(model => model.T_PHYSTK_HDR.GOCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "GOCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetGodownDetails", PageControllerName) + "','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetGodownDetails", PageControllerName) + "','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0');", @placeholder = "Code", maxlength = 6 } })
                        <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetGodownDetails", PageControllerName)','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0')" />
                            @*@Html.HiddenFor(model => model.GONM, new { id = "GONM" })*@
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.GONM, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @title = "Godown Name", @placeholder = "Godown Name", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Remarks")
                        </div>
                    </div>
                    <div class="col-md-10">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_PHYSTK_HDR.TREM, new { htmlAttributes = new { @class = "form-control", id = "TREM", @placeholder = "Remarks", maxlength = 100 } })
                        </div>
                    </div>
                    @*@if (Model.DefaultAction != "V")
                        {

                        <div class="col-md-7">
                            <div class="editor-field" style="margin-top: 2px;">
                                <input type="button" class="btn btn-primary" style="padding:2px;" value="Get Pending Data " onclick="GetPendingData()" />
                            </div>
                        </div>
                        }*@
                </div>
                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Price Code")
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.PRCCD, new { htmlAttributes = new { @class = "form-control", id = "PRCCD", @TabIndex = -1, @title = "Only for View", @placeholder = "Code", @readonly = "readonly" } })

                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.PRCNM, new { htmlAttributes = new { @class = "form-control", id = "PRCNM", @TabIndex = -1, @title = "Price List Name", @placeholder = "Price List Name", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="margin-top:5px;">
                <ul class="nav nav-tabs">
                    <li id="Main_LI4" class="active"><a data-toggle="tab" href="#Main" accesskey="M">Main(M)</a></li>
                    <li id="Remarks_LI4" class=""><a data-toggle="tab" href="#Remarks" accesskey="R">Remarks(R)</a></li>
                    <li id="Documents_LI4" class=""><a data-toggle="tab" href="#Documents" accesskey="U">Documents(U)</a></li>
                </ul>
                <div id="popup" class="row" style="margin-top: 11px;top:15%;left:2%;right:2%;position:absolute;">
                </div>
                <div class="tab-content">
                    <div id="Main" class="tab-pane fade in active" style="margin-top: 10px;margin-left: 11px;">

                        @if (Model.DefaultAction != "V")
                    {   <div class="row">
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Bar No")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="editor-field">
                                  
                                    @Html.EditorFor(model => model.BARCODE, new { htmlAttributes = new { @class = "form-control textbox_image", id = "T_BARCODE", onkeydown = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','T_BARCODE','T_BARCODE=BARNO=0/MTRLJOBCD=MTRLJOBCD=2/PARTCD=PARTCD=8/M_STYLENO=STYLENO=3','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD/Defaultbar/T_BARCODE')", onblur = "GetBarnoDetails('T_BARCODE',Defaultbar.value);", @placeholder = "Bar Code", maxlength = 25 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetBarCodeDetails", PageControllerName)','Bar Code Details','T_BARCODE','T_BARCODE=BARNO=0/MTRLJOBCD=MTRLJOBCD=2/PARTCD=PARTCD=8/M_STYLENO=STYLENO=3','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD/Defaultbar/T_BARCODE')" />

                                    @if (Model.M_SYSCNFG.MNTNSHADE != "Y")
                                    {
                                        @Html.HiddenFor(model => model.SHADE, new { id = "SHADE" })
                                    }

                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.ITCD, new { htmlAttributes = new { @class = "form-control", id = "ITCD", @title = "Item Code", @placeholder = "Item Code", @readonly = "readonly", @TabIndex = -1 } })

                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.ITNM, new { htmlAttributes = new { @class = "form-control", id = "ITNM", @title = "Item Name", @placeholder = "Item Name", @readonly = "readonly", @TabIndex = -1 } })

                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.MTRLJOBCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "MTRLJOBCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetMaterialJobDetails", PageControllerName) + "','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0/MTBARCODE=MTBARCODE')", onblur = "GetHelpBlur('" + @Url.Action("GetMaterialJobDetails", PageControllerName) + "','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0/MTBARCODE=MTBARCODE');GetAllMtrljobcd();", @placeholder = "Material Job Code", maxlength = 2, @title = "Material Job Code" } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetMaterialJobDetails", PageControllerName)','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0/MTBARCODE=MTBARCODE')" />
                                    @Html.HiddenFor(model => model.MTRLJOBNM, new { id = "MTRLJOBNM" })
                                    @Html.HiddenFor(model => model.MTBARCODE, new { id = "MTBARCODE" })
                                </div>
                            </div>
                        </div>
                            <div class="row">
                                <div class="col-md-2">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Design No.")
                                        <b style="color:Red;">*</b>
                                    </div>
                                </div>
                                <div class="col-md-7">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.STYLENO, new { htmlAttributes = new { @class = "form-control textbox_image", id = "STYLENO", onkeydown = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','STYLENO','STYLENO=STYLENO=3/PARTCD=PARTCD=8/BARCODE=BARNO=0','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD/Defaultstyle/BARCODE')", onblur = "GetBarnoDetails(this.value,Defaultstyle.value);", @placeholder = "Design No", maxlength = 25 } })
                                        <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action(" GetBarCodeDetails", PageControllerName)','Bar Code Details','STYLENO','STYLENO=STYLENO =3/PARTCD =PARTCD =8/BARCODE =BARNO =0','MTRLJOBCD/PARTCD/DOCDT/TAXGRPCD/GOCD/PRCCD/ALLMTRLJOBCD/Defaultstyle/BARCODE')" />
                                    </div>
                                </div>
                                @if (Model.M_SYSCNFG.MNTNPART == "Y")
                                {
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.PARTCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "PARTCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetPartDetails", PageControllerName) + "','Part Details','PARTCD','PARTCD=PARTCD=1/PARTNM=PARTNM=0/PRTBARCODE=PRTBARCODE')", onblur = "GetHelpBlur('" + @Url.Action("GetPartDetails", PageControllerName) + "','Part Details','PARTCD','PARTCD=PARTCD=1/PARTNM=PARTNM=0/PRTBARCODE=PRTBARCODE');", @placeholder = "Part Code", maxlength = 4, @title = "Part Code" } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetPartDetails", PageControllerName)','Part Details','PARTCD','PARTCD=PARTCD=1/PARTNM=PARTNM=0/PRTBARCODE=PRTBARCODE')" />
                                            @Html.HiddenFor(model => model.PARTNM, new { id = "PARTNM" })
                                            @Html.HiddenFor(model => model.PRTBARCODE, new { id = "PRTBARCODE" })
                                        </div>
                                    </div>
                                }
                            </div>
                                <div class="row">

                                    <div class="col-md-2">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "Cut Length")
                                            <b style="color:Red;">*</b>
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.CUTLENGTH, new { htmlAttributes = new { @class = "form-control", id = "CUTLENGTH", @onkeypress = "return numericOnly(this,3);", maxlength = 12, @placeholder = "Length", @title = "Length", @onchange = "CalculateBargridQnty();" } })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.NOS, new { htmlAttributes = new { @class = "form-control", id = "NOS", @onkeypress = "return numericOnly(this,3);", maxlength = 12, @placeholder = "Nos", @title = "Nos", @onchange = "CalculateBargridQnty();" } })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.QNTY, new { htmlAttributes = new { @class = "form-control", id = "QNTY", @onkeypress = "return numericOnly(this,3);", maxlength = 12, @placeholder = "Quantity", @title = "Quantity", @onblur = "CalculateBargridQnty();" } })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.RATE, new { htmlAttributes = new { @class = "form-control", id = "RATE", @onkeypress = "return numericOnly(this,2);", maxlength = 14, @title = "Rate", @placeholder = "Rate", @readonly = "readonly", @TabIndex = -1 } })
                                        </div>
                                    </div>
                                    @Html.HiddenFor(model => model.BALENO, new { id = "BALENO" })
                                    @Html.HiddenFor(model => model.BALEYR, new { id = "BALEYR" })

                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.DropDownListFor(model => model.STKTYPE, new SelectList(Model.DropDown_list_StkType, "Value", "Text", Model.STKTYPE), new { @class = "form-control", id = "STKTYPE", @title = "Stock Type" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.LOCABIN, new { htmlAttributes = new { @class = "form-control textbox_image", id = "LOCABIN", onkeydown = "GetHelpBlur('" + @Url.Action("GetLocationBinDetails", PageControllerName) + "','Location Bin Details','LOCABIN','LOCABIN=LOCABIN=2')", onblur = "GetHelpBlur('" + @Url.Action("GetLocationBinDetails", PageControllerName) + "','SLocation Binize Details','LOCABIN','LOCABIN=LOCABIN=2');", @placeholder = "Location Bin", maxlength = 10, @title = "Location Bin" } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetLocationBinDetails", PageControllerName)','Location Bin Details','LOCABIN','LOCABIN=LOCABIN=2')" />

                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "Remarks")
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.ITREM, new { htmlAttributes = new { @class = "form-control", id = "ITREM", maxlength = 100, @placeholder = "Remarks" } })
                                        </div>
                                    </div>
                                    <div class="col-md-1" style="width:auto;">
                                        @*<input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;" id="AddRow_Barcode" accesskey="A" value="Add Row(A)" title="Click to Fill Data in Product Details" onclick="Add_BarCodeRow()" />*@
                                        <input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;" id="AddRow_Barcode" accesskey="A" value="Add Row(Alt+A)" title="Click to Fill Data in Barcode Details" onclick="AddBarCodeGrid_()" />
                                        <input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;display:none;" id="UpdateRow_Barcode" accesskey="W" value="Update Row(Alt+W)" title="Click to Update Data in Barcode Details" onclick="UpdateBarCodeRow()" />
                                        <input type="button" class="btn btn-danger" style="margin-top: 2px;padding: 2px 7px 1px 7px;" id="Clear_Barcode" accesskey="Z" value="Clear(Alt+Z)" title="Click to Clear" onclick="ClearBarcodeArea_('Y')" />

                                    </div>
                                </div>
                              
                                @*<div class="col-lg-1">
                                    <div class="editor-field" style="margin-top:5px;width:auto;height:60px; overflow:auto;border:5px groove;overflow-x: hidden;">
                                        <table id="exampleLT" border="1" style="width: auto;">
                                            @for (int i = 0; i < Model.DropDown_list_MTRLJOBCD.Count; i++)
                                            {
                                                <tr>
                                                    <td align="center">
                                                        @Html.CheckBoxFor(model => model.DropDown_list_MTRLJOBCD[i].Checked, new { id = "MaterialJobChk_" + i, onclick = "GetAllMtrljobcd();", @TabIndex = -1 })
                                                    </td>
                                                    <td align="center">
                                                        @{ string STRC = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD.ToString();}
                                                        @Html.DisplayFor(model => STRC)
                                                        @Html.HiddenFor(model => model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD, new { id = "MaterialJobCode_" + i })
                                                    </td>
                                                    <td align="center">
                                                        @{ string STRC1 = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBNM.ToString();}
                                                        @Html.DisplayFor(model => STRC1)
                                                    </td>
                                                </tr>
                                                            }
                                        </table>
                                    </div>
                                    @Html.HiddenFor(model => model.ALLMTRLJOBCD, new { id = "ALLMTRLJOBCD" })
                                </div>*@
                               

                                }
                                <div class="row">
                                    <div class="col-md-3" style="width:auto;">
                                    </div>
                                </div>
                                <div style="margin-top:4px;background-color:#c4b9b9;border:5px groove;">
                                    <div id="partialdivBarCodeTab">
                                        @Html.Partial("_T_PhyStock_BarTab")
                                    </div>
                                </div>


                                @*<div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;width:fit-content;">

                                        <div>
                                            <div id="partialdivMain" style="margin-top:0px;">
                                                @Html.Partial("_T_PhyStock_Main")
                                            </div>
                                        </div>
                                    </div>*@
                            </div>
                    <div id="Remarks" class="tab-pane fade">
                        <div class="row">
                            <div>
                                <div id="partialdivRemarks">
                                    @Html.Partial("_TRANSACTIONREMARKS")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Documents" class="tab-pane fade" style="margin-top: 10px;">
                        <div class="row" style="background-color:#c4b9b9;border:5px groove;width:fit-content;">
                            <div>
                                <div id="partialdivDocument" style="margin-top:0px;">
                                    @Html.Partial("_UPLOADDOCUMENTS")
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    }
    else
    {
        @ViewBag.ErrorMessage
    }

    <div class="container">
        <div id="helpDIV">

        </div>
    </div>
}
