@model Improvar.ViewModels.TransactionOutRecProcess
@{
    string PageControllerName = "T_OUTRECPROCESS";
    ViewBag.Title = "Receive for Processing";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@{
    switch (Model.MENU_PARA)
    {
        case "DY":
            ViewBag.Title = "Receive for Dyer"; break;
        case "PR":
            ViewBag.Title = "Receive for Printing"; break;
        case "ST":
            ViewBag.Title = "Receive for Stiching"; break;
        case "EM":
            ViewBag.Title = "Receive for Embroidery"; break;
        case "JW":
            ViewBag.Title = "Receive for Other Jobs"; break;
        case "DYU":
            ViewBag.Title = "Return from Dyer w/o Job"; break;
        case "PRU":
            ViewBag.Title = "Return from Printer w/o Job"; break;
        case "STU":
            ViewBag.Title = "Return from Sticher w/o Job"; break;
        case "EMU":
            ViewBag.Title = "Return from Embroider w/o Job"; break;
        case "JWU":
            ViewBag.Title = "Return from Other w/o Job"; break;
        default: ViewBag.Title = ""; break;
    }
}
<style>
    .TextAreaRemarks {
        height: 190px;
    }
</style>
<script src="~/Scripts/Sale.js"></script>
<script src="~/Scripts/jquery.min.js"></script>
<script type="text/javascript">
    $("#WaitingMode").show();
    $(document).ready(function () {
        if ("@Model.DefaultAction" == "V" || "@Model.DefaultAction" == "D") {
            modeView();
        }
        else if ("@Model.DefaultAction" == "E") {

        }
        else if ("@Model.DefaultAction" == "A") {
            $('form :input:enabled:visible:not([readonly]):first').focus();
        }
        $("#WaitingMode").hide();
    });
</script>
<script>
    @{
        string mldauto = "";
        if (@Model.T_CNTRL_HDR != null)
        {
            if (@Model.T_CNTRL_HDR.AUTONO != null)
            {
                mldauto = Model.T_CNTRL_HDR.AUTONO.ToString();
                if (Model.T_CNTRL_HDR.CANCEL == "Y")
                {
                    ViewBag.formname = ViewBag.formname + "   " + "(Record Cancelled)";
                }
            }
        }
        else
        {
            mldauto = "";
        }
    }
    function ModifyLogDetails() {
        if ("@Model.DefaultAction" == "V") {
            ModifyLogDtl('@mldauto');
        }
    }
</script>
<script>
    function requiredFieldValidator() {
        if (!emptyFieldCheck("Please Select / Enter Document Date", "DOCDT")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Party", "SLCD")) { return false; }
        //if (!emptyFieldCheck("Please Select / Enter Price List", "PRCCD")) { return false; }
        //if (!emptyFieldCheck("Please Select / Enter Agent", "AGSLCD")) { return false; }
        //if (!emptyFieldCheck("Please Select / Enter SalesMen", "CRSLCD")) { return false; }
        return true;
    }
</script>
<script>
    $(function () {
        if ("@Model.DefaultAction" != "V") {
            $("#DOCDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate', minDate: '@Model.mindate' });
            $("#PREFDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate' });
        }
    });
</script>
<script>
    @*function GetPartyDetails(id) {
        var DefaultAction = $("#DefaultAction").val();
        if (DefaultAction == "V") return true;
        debugger;
        if (id == "") {
            ClearAllTextBoxes("SLCD,SLNM,SLAREA,GSTNO,TAXGRPCD,PRCCD,DUEDAYS,TCSPER,TDSLIMIT,TDSCALCON,AMT,TCSAPPL,TDSROUNDCAL,TCSCODE,TCSNM");
        }
        else {
            var code = $("#slcd_tag").val() + String.fromCharCode(181) + $("#DOCDT").val();
            var AUTONO = $("#AUTONO").val();
            var TDSCODE = $("#TDSCODE").val();
            $.ajax({
                type: 'POST',
                beforesend: $("#WaitingMode").show(),
                url: "@Url.Action("GetPartyDetails", PageControllerName)",
                data: "&val=" + id + "&Code=" + code + "&Autono=" + AUTONO + "&linktdscode=" + TDSCODE,
                success: function (result) {
                    var MSG = result.indexOf('#helpDIV');
                    if (MSG >= 0) {
                        ClearAllTextBoxes("SLCD,SLNM,SLAREA,GSTNO,TAXGRPCD,PRCCD,DUEDAYS,TCSPER,TDSLIMIT,TDSCALCON,AMT,TCSAPPL,TDSROUNDCAL,TCSCODE,TCSNM");
                        $('#SearchFldValue').val("SLCD");
                        $('#helpDIV').html(result);
                        $('#ReferanceFieldID').val("SLCD/SLNM/SLAREA/GSTNO");
                        $('#ReferanceColumn').val("1/0/3/2");
                        $('#helpDIV_Header').html("Party Details");
                    }
                    else {
                        var MSG = result.indexOf(String.fromCharCode(181));
                        if (MSG >= 0) {
                            $("#SLCD").val(returncolvalue(result, "slcd"));
                            $("#SLNM").val(returncolvalue(result, "slnm"));
                            $("#SLAREA").val(returncolvalue(result, "slarea"));
                            $("#GSTNO").val(returncolvalue(result, "gstno"));
                            $("#TAXGRPCD").val(returncolvalue(result, "TAXGRPCD"));
                            $("#PRCCD").val(returncolvalue(result, "PRCCD"));
                            $("#DUEDAYS").val(returncolvalue(result, "crdays"));

                            //tcs
                            $("#TDSCODE").val(returncolvalue(result, "TCSCODE"));
                            $("#TDSNM").val(returncolvalue(result, "TCSNM"));
                            $("#TCSPER").val(returncolvalue(result, "TCSPER"));
                            $("#TDSLIMIT").val(returncolvalue(result, "TDSLIMIT"));
                            $("#TDSCALCON").val(returncolvalue(result, "TDSCALCON"));
                            $("#AMT").val(returncolvalue(result, "AMT"));
                            $("#TCSAPPL").val(returncolvalue(result, "TCSAPPL"));
                            $("#TDSROUNDCAL").val(returncolvalue(result, "TDSROUNDCAL"));
                            //BillAmountCalculate();//fill value of tcson
                            //
                        }
                        else {
                            $('#helpDIV').html("");
                            msgInfo("" + result + " !");
                            ClearAllTextBoxes("SLCD,SLNM,SLAREA,GSTNO,TAXGRPCD,PRCCD,DUEDAYS,TCSPER,TDSLIMIT,TDSCALCON,AMT,TCSAPPL,TDSROUNDCAL,TCSCODE,TCSNM");
                            message_value = "SLCD";
                        }
                    }
                    $("#WaitingMode").hide();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }

    }*@
    function SelectTDSCode(id, TDSHD, TDSNM, TDSPER) {
        if (id == "") {
            $("#" + TDSHD.id).val("");
            $("#" + TDSNM.id).val("");
            $("#" + TDSPER.id).val("");
        }
        else {
            if (!emptyFieldCheck("Enter Document Date", "DOCDT")) { return false; }
            if (!emptyFieldCheck("Enter Supplier Code", "SLCD")) { return false; }
            var PARTY = document.getElementById("SLCD").value;
            var DOCDT = document.getElementById("DOCDT").value;
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetTDSDetails", PageControllerName)",
                data:
                    {
                        val: id,
                        PARTY: PARTY,
                        TAG: DOCDT
                    },
                success: function (result) {
                    var MSG = result.indexOf(String.fromCharCode(181));
                    if (MSG >= 0) {
                        document.getElementById(TDSHD.id).value = returncolvalue(result, "TDSCODE");
                        document.getElementById(TDSNM.id).value = returncolvalue(result, "TDSNM");
                        var CMPNONCMP = returncolvalue(result, "CMPNONCMP");
                        if (CMPNONCMP == "C") {
                            document.getElementById(TDSPER.id).value = returncolvalue(result, "TDSPER");
                        } else {
                            document.getElementById(TDSPER.id).value = returncolvalue(result, "TDSPERNONCMP");
                        }
                    }
                    else {
                        $("#" + TDSHD.id).val("");
                        $("#" + TDSNM.id).val("");
                        $("#" + TDSPER.id).val("");
                        msgInfo(result);
                        message_value = TDSHD.id;
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
</script>
<script>
    function PendingProgramme() {
        if (!emptyFieldCheck("Please Select / Enter Party", "DOCDT")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Party", "SLCD")) { return false; }
        var DOCDT = $("#DOCDT").val();
        var SLCD = $("#SLCD").val();
        var JOBCD = $("#JOBCD").val();
        var AUTONO = $("#AUTONO").val();
        $.ajax({
            type: 'POST',
            url: "@Url.Action("GetPendingProgramme", PageControllerName)",
            data: { docdt: DOCDT, jobcd: JOBCD, slcd: SLCD, autono: AUTONO },
            success: function (result) {
                if (result == "1") {
                    document.getElementById("PendProgramme").disabled = true;
                    $("#SLCD").attr('readonly', 'readonly');
                    $('#PARTY_HELP').hide("");
                    $("#SLCD").removeAttr("onblur");

                    $("li").removeClass("active").addClass("");
                    $(".nav-tabs li:nth-child(2)").addClass('active');
                    //below set the  child sequence
                    $(".tab-content div").removeClass("active");
                    $(".tab-content div:nth-child(2)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
                    $("#BARCODE").focus();
                }
                else {
                    msgInfo(result);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function GetBarnoDetails(id) {
        debugger;
        if (id == "") {
            ClearAllTextBoxes("PROGAUTOSLNO,BARCODE");
        }
        else {
            var progautoslno = $("#PROGAUTOSLNO").val();
            $.ajax({
                type: 'POST',
                beforesend: $("#WaitingMode").show(),
                url: "@Url.Action("GetBarCodeDetails", PageControllerName)",
                data: $('form').serialize() + "&val=" + id + "&Code=" + progautoslno,
                success: function (result) {
                    var MSG = result.indexOf('id="_T_OUTRECPROCESS_Programme_GRID"');
                    if (MSG >= 0) {
                        ClearAllTextBoxes("PROGAUTOSLNO,BARCODE");
                        $("#partialdivProgramme").html(result);
                    }
                    else {
                        var MSG = result.indexOf('#helpDIV');
                        if (MSG >= 0) {
                            if (keyType != "mousedown") {
                                ClearAllTextBoxes("PROGAUTOSLNO,BARCODE");
                            }
                            $('#SearchFldValue').val(hlpfield);
                            $('#helpDIV').html(result);
                            $('#ReferanceFieldID').val(fldIdseq);
                            $('#ReferanceColumn').val(hpnlIndexseq);
                            $('#helpDIV_Header').html(caption);
                        }
                        else {
                            $('#helpDIV').html("");
                            msgInfo("" + result + " !");
                            ClearAllTextBoxes("PROGAUTOSLNO,BARCODE");
                            message_value = "BARCODE";
                        }
                    }
                    $("#WaitingMode").hide();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }

    }
</script>
<script>
    @*function Fill_BarCodeData() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("FillBarCodeData", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                //$("#partialdivBarCodeTab").animate({ marginTop: '-10px' }, 50);
                $("#partialdivBarCodeTab").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function Fill_DetailData() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("FillDetailData", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                //$("#partialdivBarCodeTab").animate({ marginTop: '-10px' }, 50);
                $("#partialdivDetail").html(result);
                $("li").removeClass("active").addClass("");
                $(".nav-tabs li:nth-child(3)").addClass('active');
                //below set the  child sequence
                $(".tab-content div").removeClass("active");
                $(".tab-content div:nth-child(3)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }*@

    @*function Fill_QtyRequirementData() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("FillQtyRequirementData", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                //$("#partialdivBarCodeTab").animate({ marginTop: '-10px' }, 50);
                $("#partialdivQtyRequirement").html(result);
                $("li").removeClass("active").addClass("");
                $(".nav-tabs li:nth-child(2)").addClass('active');
                //below set the  child sequence
                $(".tab-content div").removeClass("active");
                $(".tab-content div:nth-child(2)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }*@
</script>

@*<script>
        function CalculateQNTY(i) {
            if ("@Model.DefaultAction" != "V") {
                var NOS_ = document.getElementById('P_NOS_' + i).value;
                if (NOS_ == "") { NOS_ = parseFloat(0) } else { NOS_ = parseFloat(NOS_) }
                var CUTLENGTH_ = document.getElementById('P_CUTLENGTH_' + i).value;
                if (CUTLENGTH_ == "") { CUTLENGTH_ = parseFloat(0) } else { CUTLENGTH_ = parseFloat(CUTLENGTH_) }
                if (NOS_ > 0 && CUTLENGTH_ > 0) {
                    var qnty = (parseFloat(NOS_) * parseFloat(CUTLENGTH_));
                    document.getElementById('P_QNTY_' + i).value = parseFloat(qnty).toFixed(2);
                }

            } CalculateTotal();
        }

        function CalculateTotal() {
            debugger;
            var T_NOS = 0; var T_QNTY = 0; var T_QNTYDAM = 0; var T_STD_AMT = 0; var T_DIS_AMT = 0; var T_GROSS_AMT = 0; var T_IGST_AMT = 0; var T_CGST_AMT = 0;
            var T_SGST_AMT = 0; var T_CESS_AMT = 0; var T_DUTY_AMT = 0; var T_OTHER_AMT = 0; var T_NET_AMT = 0;
            var GridRow = $("#_T_OUTRECPROCESS_Programme_GRID > tbody > tr").length;
            for (var i = 0; i <= GridRow - 1; i++) {
                var NOS = document.getElementById("P_NOS_" + i).value;
                if (NOS != "") { T_NOS = T_NOS + parseFloat(NOS); } else { T_NOS = T_NOS + parseFloat(0); }

                var QNTY = document.getElementById("P_QNTY_" + i).value;
                if (QNTY != "") { T_QNTY = T_QNTY + parseFloat(QNTY); }
                else { T_QNTY = T_QNTY + parseFloat(0); }


            }
            document.getElementById("P_T_NOS").value = parseFloat(T_NOS).toFixed(0);
            document.getElementById("P_T_QNTY").value = parseFloat(T_QNTY).toFixed(6);


        }

        //function CalculateTotalProgBomQnty() {
        //    var T_BOMQNTY = 0; var T_EXTRAQNTY = 0;
        //    var GridRow = $("#__T_OUTRECPROCESS_QtyRequirement_GRID > tbody > tr").length;
        //    for (var i = 0; i <= GridRow - 1; i++) {

        //        var BOMQNTY = document.getElementById("Q_BOMQNTY_" + i).value;
        //        if (BOMQNTY == "") { BOMQNTY = parseFloat(0) } else { BOMQNTY = parseFloat(BOMQNTY) }
        //        if (BOMQNTY != "") { T_BOMQNTY = T_BOMQNTY + parseFloat(BOMQNTY); }
        //        else { T_BOMQNTY = T_BOMQNTY + parseFloat(0); }

        //        var EXTRAQNTY = document.getElementById("Q_EXTRAQNTY_" + i).value;
        //        if (EXTRAQNTY == "") { EXTRAQNTY = parseFloat(0) } else { EXTRAQNTY = parseFloat(EXTRAQNTY) }
        //        if (EXTRAQNTY != "") { T_EXTRAQNTY = T_EXTRAQNTY + parseFloat(EXTRAQNTY); }
        //        else { T_EXTRAQNTY = T_EXTRAQNTY + parseFloat(0); }


        //    } document.getElementById("T_BOMQNTY").value = parseFloat(T_BOMQNTY).toFixed(6);
        //    document.getElementById("T_EXTRAQNTY").value = parseFloat(T_EXTRAQNTY).toFixed(6);
        //}


    </script>*@

@*<script>
        function AddrowQTY(ID) {
            var TAG = ""; var COUNT = document.getElementById(ID).value; if (COUNT != "") { COUNT = parseInt(COUNT); } else { COUNT = parseInt(0); } if (COUNT > 0) { TAG = "Y"; }
            $.ajax({
                type: 'POST',
                url: "@Url.Action("AddRowQTY", PageControllerName)",
                beforesend: $("#WaitingMode").show(),
                data: $('form').serialize() + "&COUNT=" + COUNT + "&TAG=" + TAG,
                success: function (result) {
                    $("#WaitingMode").hide();
                    $("#partialdivQtyRequirement").animate({ marginTop: '-10px' }, 50);
                    $("#partialdivQtyRequirement").html(result);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }

        function DeleteRowQTY() {
            $.ajax({
                type: 'POST',
                url: "@Url.Action("DeleteRowQTY", PageControllerName)",
                data: $('form').serialize(),
                success: function (result) {
                    $("#partialdivQtyRequirement").animate({ marginTop: '0px' }, 50);
                    $("#partialdivQtyRequirement").html(result);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    </script>*@
@*<script>
        function RepeatAboveRow_TPROGBOM(i) {
            debugger;
            i = parseInt(i);
            if (event.key == "F7") {
                var GridRow = $("#_T_OUTRECPROCESS_Programme_GRID > tbody > tr").length;
                for (var J = 0; J <= GridRow - 1; J++) {
                    var slno = $("#P_SLNO_" + J).val();
                    if (parseInt(slno) == i) {
                        $("#Q_ITGRPCD_" + i).val($("#P_ITGRPCD_" + J).val());
                        $("#Q_ITGRPNM_" + i).val($("#P_ITGRPNM_" + J).val());
                        $("#Q_ITCD_" + i).val($("#P_ITCD_" + J).val());
                        $("#Q_ITNM_" + i).val($("#P_ITNM_" + J).val());
                        $("#Q_COLRCD_" + i).val($("#P_COLRCD_" + J).val());
                        $("#Q_SIZECD_" + i).val($("#P_SIZECD_" + J).val());
                    }
                }
            }
            if (event.key == "F8" && i > 0) {
                $.ajax({
                    type: 'POST',
                    url: "@Url.Action("RepeatAboveRow", PageControllerName)",
                    beforesend: $("#WaitingMode").show(),
                    data: $('form').serialize() + "&RowIndex=" + i,
                    success: function (result) {
                        $("#WaitingMode").hide();
                        $("#partialdivQtyRequirement").animate({ marginTop: '-10px' }, 50);
                        $("#partialdivQtyRequirement").html(result);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $("#WaitingMode").hide();
                        msgError(XMLHttpRequest.responseText);
                        $("body span h1").remove(); $("#msgbody_error style").remove();
                    }
                });

            }
        }
    </script>*@
<script>
    @*function Addrow(ID) {
        var TAG = ""; var COUNT = document.getElementById(ID).value; if (COUNT != "") { COUNT = parseInt(COUNT); } else { COUNT = parseInt(0); } if (COUNT > 0) { TAG = "Y"; }
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddRow", PageControllerName)",
            beforesend: $("#WaitingMode").show(),
            data: $('form').serialize() + "&COUNT=" + COUNT + "&TAG=" + TAG,
            success: function (result) {
                $("#WaitingMode").hide();
                $("#partialdivProgramme").animate({ marginTop: '-10px' }, 50);
                $("#partialdivProgramme").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }*@

    function DeleteRow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivProgramme").animate({ marginTop: '0px' }, 50);
                $("#partialdivProgramme").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function AddDOCrow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddDOCRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '-10px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeleteDOCrow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteDOCRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '0px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function pageprinting() {
        var ty = $("#DOCCD").val();
        $.ajax({
            type: 'get',
            url: "@Url.Action("Print", PageControllerName)",
            data: "DOCNO=" + $("#DOCNO").val() + "&DOC_CD=" + $("#DOCCD").val() + "&DOCDT=" + $("#DOCDT").val(),
            success: function (result) {
                window.open("@Url.Action("Rep_OrdPrint", "Rep_OrdPrint", new { US = Model.UNQSNO_ENCRYPTED })", "_blank")
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>

@using (Html.BeginForm())
{
    if (Model.DefaultView == true)
    {
        @Html.HiddenFor(a => Model.maxdate)
        @Html.HiddenFor(a => Model.mindate)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" id="btnSave" value="@Url.Action("SAVE", PageControllerName)" />
        <input type="hidden" id="srhpnl" value="@Url.Action("SearchPannelData", PageControllerName)" />
        <input type="hidden" id="UrlBarnoDetails" value="@Url.Action("GetBarCodeDetails", PageControllerName)" />
        <input type="hidden" id="UrlAddBarCodeRow" value="@Url.Action("FillBarCodeData", PageControllerName)" />
        <input type="hidden" id="UrlFillDetailData" value="@Url.Action("FillDetailData", PageControllerName)" />
        <input type="hidden" id="UrlDeleteRow" value="@Url.Action("DeleteRowBarno", PageControllerName)" />
        <input type="hidden" id="UrlAddDOCRow" value="@Url.Action("AddDOCRow", PageControllerName)" />
        <input type="hidden" id="UrlDeleteDOCRow" value="@Url.Action("DeleteDOCRow", PageControllerName)" />
        <input type="hidden" id="partylinkcd" value="D" />
        <input type="hidden" id="agentlinkcd" value="A" />
        <input type="hidden" id="courierlinkcd" value="U" />
        <input type="hidden" id="trnsportlinkcd" value="T" />
        <input type="hidden" id="itgrptype" value="'A','C','L','P','Y'" />
        @Html.HiddenFor(s => s.DefaultAction)
        @Html.HiddenFor(a => a.T_TXN.AUTONO, new { id = "AUTONO" })
        @Html.HiddenFor(a => a.T_TXN.DOCNO)
        @Html.HiddenFor(a => a.T_CNTRL_HDR.MNTHCD)
        @Html.HiddenFor(a => a.T_CNTRL_HDR.EMD_NO)
        <div class="form-horizontal">
            @if (Model.DefaultAction == "V")
            {
                @Html.Partial("_FilteredSearch")
            }
            <div class="row" style="margin-top: 5px;">
                <div class="row">
                    <div class="col-md-5" style="margin-top: 6px;">
                        <div class="editor-label">
                            @Html.Label("", "Document Code")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="editor-field">
                            @if (Model.DefaultAction == "A")
                            {
                                @Html.DropDownListFor(model => model.T_TXN.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", @onchange = "ChangeDoctype();" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.T_TXN.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", style = "pointer-events:none;background-color:#eee" })
                            }
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Document Date")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.DOCDT, new { htmlAttributes = new { @class = "form-control", id = "DOCDT", onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy", maxlength = 10 } })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Document No.")
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.DOCNO, new { htmlAttributes = new { @class = "form-control", id = "DOCNO", @placeholder = "Doc. No.", maxlength = 6, @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Job")
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.JOBCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "JOBCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetJobDetails", PageControllerName) + "','Job Details','JOBCD','JOBCD=jobcd=1/JOBNM=jobnm=0')", onblur = "GetHelpBlur('" + @Url.Action("GetJobDetails", PageControllerName) + "','Job Details','JOBCD','JOBCD=jobcd=1/JOBNM=jobnm=0');", @placeholder = "Job Code", maxlength = 2 } })
                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetJobDetails", PageControllerName)','Job Details','JOBCD','JOBCD=jobcd=1/JOBNM=jobnm=0')" />
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.JOBNM, new { htmlAttributes = new { @class = "form-control", id = "JOBNM", maxlength = 45, @title = "Only for View", @placeholder = "Job Name", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Party Code")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.SLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetPartyDetails", PageControllerName) + "','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=slarea=3/GSTNO=gstno=2/TAXGRPCD=TAXGRPCD/PRCCD=PRCCD/DUEDAYS=crdays','DOCDT')", onblur = "GetHelpBlur('" + @Url.Action("GetPartyDetails", PageControllerName) + "','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=slarea=3/GSTNO=gstno=2/TAXGRPCD=TAXGRPCD/PRCCD=PRCCD/DUEDAYS=crdays','DOCDT');", @placeholder = "Code", maxlength = 8 } })
                            <img src="~/Image/search.png" id="PARTY_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetPartyDetails", PageControllerName)','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=slarea=3/GSTNO=gstno=2/TAXGRPCD=TAXGRPCD/PRCCD=PRCCD/DUEDAYS=crdays','DOCDT')" />
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.SLNM, new { htmlAttributes = new { @class = "form-control", id = "SLNM", maxlength = 45, @title = "Only for View", @placeholder = "Party Name", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.DISTRICT, new { htmlAttributes = new { @class = "form-control", id = "DISTRICT", @title = "Only for View", @placeholder = "District", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.GSTNO, new { htmlAttributes = new { @class = "form-control", id = "GSTNO", @title = "Only for View", @placeholder = "GST No.", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXNOTH.TAXGRPCD, new { htmlAttributes = new { @class = "form-control", id = "TAXGRPCD", @title = "Tax Group Code", @placeholder = "Tax Group Code", @readonly = "readonly", tabindex = "-1" } })
                            @Html.HiddenFor(model => Model.T_TXNOTH.PRCCD, new { htmlAttributes = new { @class = "form-control", id = "PRCCD" } })


                        </div>
                    </div>
                    <div class="col-md-1" style="width:auto;">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Due Days")
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.DUEDAYS, new { htmlAttributes = new { @class = "form-control", id = "DUEDAYS", maxlength = 3, @placeholder = "Due Days" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-field" style="margin-top: 6px;">
                            @Html.Label("", "Party Bill No")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-10">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.PREFNO, new { htmlAttributes = new { @class = "form-control", id = "PREFNO", maxlength = 16, @placeholder = "PREFNO" } })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-field" style="margin-top: 6px;">
                            @Html.Label("", "Party Bill Date")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.PREFDT, new { htmlAttributes = new { @class = "form-control", id = "PREFDT", onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy", maxlength = 10 } })
                        </div>
                    </div>
                    @if (Model.DefaultAction != "V")
                    {
                        <div class="col-md-8">
                            <input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;" id="PendProgramme" value="Get Pending Programme" title="Click to Get Pending Programme" onclick="PendingProgramme()" />
                        </div>
                    }

                </div>
            </div>
            <div class="row" style="margin-top:5px;">
                <ul class="nav nav-tabs">
                    <li id="Main_LI4" class="active"><a data-toggle="tab" href="#Main" accesskey="M">Main(M)</a></li>
                    <li id="Programme_LI" class=""><a data-toggle="tab" href="#Programme" accesskey="P">Programme(P)</a></li>
                    <li id="Receive_LI" class=""><a data-toggle="tab" href="#Receive" accesskey="V">Receive(V)</a></li>
                    <li id="Detail_LI" class=""><a data-toggle="tab" href="#DetailTab" accesskey="D">Detail(D)</a></li>
                    <li id="Amounts_LI" class=""><a data-toggle="tab" href="#FreightOthers" onclick="OpenAmount();" accesskey="F">Freight & Others(F)</a></li>
                    <li id="Transport_LI" class=""><a data-toggle="tab" href="#Transport" accesskey="T">Transport(T)</a></li>
                    <li id="Remarks_LI" class=""><a data-toggle="tab" href="#Remarks" accesskey="R">Remarks(R)</a></li>
                    <li id="Documents_LI" class=""><a data-toggle="tab" href="#Documents" accesskey="U">Documents(U)</a></li>
                </ul>
                <div class="tab-content">
                    <div id="Main" class="tab-pane fade in active" style="margin-top: 5px;">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Godown")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXN.GOCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "GOCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetGodownDetails", PageControllerName) + "','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetGodownDetails", PageControllerName) + "','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0');", @placeholder = "Code", maxlength = 6 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetGodownDetails", PageControllerName)','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0')" />
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.GONM, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @title = "Godown Name", @placeholder = "Godown Name", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Mtrl Job Code")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.MTRLJOBCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "MTRLJOBCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetMaterialJobDetails", PageControllerName) + "','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0/MTBARCODE=MTBARCODE')", onblur = "GetHelpBlur('" + @Url.Action("GetMaterialJobDetails", PageControllerName) + "','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0/MTBARCODE=MTBARCODE');GetAllMtrljobcd();", @placeholder = "Code", maxlength = 2 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetMaterialJobDetails", PageControllerName)','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0/MTBARCODE=MTBARCODE')" />
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.MTRLJOBNM, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @title = "Mtrl Job Name", @placeholder = "Mtrl Job Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5" style="margin-top: 6px;">
                                <div class="editor-label">
                                    @Html.Label("", "Barcode")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.T_TXN.BARGENTYPE, new SelectList(Model.BARGEN_TYPE, "Value", "Text"), new { @class = "form-control", id = "BARGENTYPE", onchange = "changeBARGENTYPE()" })
                                </div>
                            </div>

                        </div>


                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Total Taxable")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TOTTAXVAL, new { htmlAttributes = new { @class = "form-control", id = "TOTTAXVAL", @style = "text-align: right;", @TabIndex = -1, @placeholder = "Taxable Value", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Total Qnty")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TOTQNTY, new { htmlAttributes = new { @class = "form-control", id = "TOTQNTY", @style = "text-align: right;", @TabIndex = -1, @placeholder = "Quantity", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Total Nos.")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TOTNOS, new { htmlAttributes = new { @class = "form-control", id = "TOTNOS", @style = "text-align: right;", @TabIndex = -1, @placeholder = "Qnty Nos", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Reverse Charge")
                                </div>
                            </div>
                            <div class="col-md-7" style="width:auto;">
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => Model.T_TXN.REVCHRG, new SelectList(Model.Reverse_Charge, "Value", "Text", Model.T_TXN.REVCHRG), "No", new { @class = "form-control", id = "REVCHRG", onchange = "ReverceCharges();" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Rounded off")
                                </div>
                            </div>
                            <div class="col-md-1" style="margin-right: -41px;">
                                <div class="editor-field" style="margin-top:6px;">
                                    @Html.CheckBoxFor(model => model.RoundOff, new { id = "RoundOff", onclick = "BillAmountCalculate();" })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXN.ROAMT, new { htmlAttributes = new { @class = "form-control", id = "ROAMT", maxlength = 6, @TabIndex = -1, @placeholder = "Rounded off", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="col-md-1" style="width:auto;">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Bill Amount")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXN.BLAMT, new { htmlAttributes = new { @class = "form-control", id = "BLAMT", maxlength = 14, @TabIndex = -1, @placeholder = "Bill Amount", @readonly = "readonly", @style = "font-weight:bold;font-size:15px;text-align:right" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Net Payable")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.NETAMT, new { htmlAttributes = new { @class = "form-control", id = "NETAMT", @TabIndex = -1, @placeholder = "Bill Amount", @readonly = "readonly", @style = "font-weight:bold;font-size:15px;text-align:right" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "TDS Head")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.TDSHD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "TDSHD", onkeyup = "GetHelp('" + @Url.Action("GetTDSDetails", PageControllerName) + "','TDSHD/TDSNM/TDSPER','1/0/2','TDS Details','TDSHD',DOCDT.value)", onblur = "SelectTDSCode(this.value,TDSHD,TDSNM,TDSPER);", @placeholder = "Code", maxlength = 3 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onclick="GetHelp('@Url.Action("GetTDSDetails", PageControllerName)','TDSHD/TDSNM/TDSPER','1/0/2','TDS Details','TDSHD',DOCDT.value)" />
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TDSNM, new { htmlAttributes = new { @class = "form-control", id = "TDSNM", @placeholder = "TDS Name", @TabIndex = -1, @readonly = "readonly", @title = "Only for View" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "TDS On")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field" style="margin-top:6px;">
                                    @Html.EditorFor(model => model.T_TXNOTH.TDSON, new { htmlAttributes = new { @class = "form-control", id = "TDSON", onblur = "TDSAMTCAL();", @placeholder = "TDS On", maxlength = 15, @onkeypress = "return numericOnly(this,2);" } })
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "TDS %")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field" style="margin-top:6px;">
                                    @Html.EditorFor(model => model.T_TXNOTH.TDSPER, new { htmlAttributes = new { @class = "form-control", id = "TDSPER", onblur = "TDSAMTCAL();", @placeholder = "TDS Per", maxlength = 10, @onkeypress = "return numericOnly(this,2);" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "TDS Amount")
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.TDSAMT, new { htmlAttributes = new { @class = "form-control", id = "TDSAMT", @placeholder = "TDS Amount", maxlength = 15, @onkeypress = "return numericOnly(this,2);", @TabIndex = -1, @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Programme" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row">

                            <div class="col-md-3">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Bar Code No")
                                    <b style="color:Red;">*</b>
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.BARCODE, new { htmlAttributes = new { @class = "form-control textbox_image", id = "BARCODE", onkeydown = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','BARCODE','BARCODE=BARNO=3/PROGAUTOSLNO=PROGAUTOSLNO=9','PROGAUTOSLNO')", onblur = "GetBarnoDetails(this.value);", @placeholder = "Bar Code", maxlength = 25 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetBarCodeDetails", PageControllerName)','Bar Code Details','BARCODE','BARCODE=BARNO=3/PROGAUTOSLNO=PROGAUTOSLNO=9','PROGAUTOSLNO')" />
                                    @Html.HiddenFor(model => model.PROGAUTOSLNO, new { id = "PROGAUTOSLNO" })
                                </div>
                            </div>
                        </div>

                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                            <div>
                                <div id="partialdivProgramme" style="margin-top:0px;">
                                    @Html.Partial("_T_OUTRECPROCESS_Programme")
                                </div>
                            </div>
                        </div>

                    </div>
                    <div id="Receive" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;width:fit-content">
                            <div>
                                <div id="partialdivDetail" style="margin-top:0px;">
                                    @Html.Partial("_T_OUTRECPROCESS_Receive")
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-1" style="width:auto;">
                                <input type="button" class="btn btn-info" style="margin-top: 2px;padding: 2px 7px 1px 7px;" name="FillDetail" id="FillDetail" accesskey="K" value="Finalise Detail Data(Alt+K)" title="Click to Finalise Data in Details Tab" onclick="Fill_DetailData()" />
                            </div>
                        </div>
                    </div>

                    <div id="DetailTab" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                            <div>
                                <div id="partialdivDetail" style="margin-top:0px;">
                                    @Html.Partial("_T_OUTRECPROCESS_Detail")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="FreightOthers" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                            <div>
                                <div id="partialdivAmounts" style="margin-top:0px;">
                                    @Html.Partial("_T_OUTRECPROCESS_Amount")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Transport" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Transporter")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.TRANSLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "TRANSLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Transporter Details','TRANSLCD','TRANSLCD=slcd=1/TRANSLNM=slnm=0','trnsportlinkcd')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Transporter Details','TRANSLCD','TRANSLCD=slcd=1/TRANSLNM=slnm=0','trnsportlinkcd');", @placeholder = "Code", maxlength = 8 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Transporter Details','TRANSLCD','TRANSLCD=slcd=1/TRANSLNM=slnm=0','trnsportlinkcd')" />
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.TRANSLNM, new { htmlAttributes = new { @class = "form-control", id = "TRANSLNM", maxlength = 45, @TabIndex = -1, @placeholder = "Transporter Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Courier")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.CRSLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "CRSLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Courier Details','CRSLCD','CRSLCD=slcd=1/CRSLNM=slnm=0','courierlinkcd')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Courier Details','CRSLCD','CRSLCD=slcd=1/CRSLNM=slnm=0','courierlinkcd');", @placeholder = "Code", maxlength = 8 } })
                                    <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Courier Details','CRSLCD','CRSLCD=slcd=1/CRSLNM=slnm=0','courierlinkcd')" />
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.CRSLNM, new { htmlAttributes = new { @class = "form-control", id = "CRSLNM", maxlength = 45, @TabIndex = -1, @placeholder = "Courier Name", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Eway Bill Number")
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.EWAYBILLNO, new { htmlAttributes = new { @class = "form-control", id = "EWAYBILLNO", maxlength = 20, @placeholder = "Eway Bill Number" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "LR Number")
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.LRNO, new { htmlAttributes = new { @class = "form-control", id = "LRNO", maxlength = 15, @placeholder = "LR Number" } })
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "LR Date")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.LRDT, new { htmlAttributes = new { @class = "form-control", id = "LRDT", maxlength = 10, onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Vechicle Number")
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.LORRYNO, new { htmlAttributes = new { @class = "form-control", id = "LORRYNO", maxlength = 16, @placeholder = "Vechicle Number" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Gross Weight")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.GRWT, new { htmlAttributes = new { @class = "form-control", id = "GRWT", onblur = "CalulateTareWt(GRWT,NTWT,TRWT);", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "Gross Weight" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Net Weight")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.NTWT, new { htmlAttributes = new { @class = "form-control", id = "NTWT", onblur = "CalulateTareWt(GRWT,NTWT,TRWT);", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "Net Weight" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Tare Weight")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNTRANS.TRWT, new { htmlAttributes = new { @class = "form-control", id = "TRWT", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "Tare Weight", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "Cases Nos.")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.CASENOS, new { htmlAttributes = new { @class = "form-control", id = "CASENOS", maxlength = 500, @placeholder = "Cases Nos" } })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="editor-label" style="margin-top: 6px;">
                                    @Html.Label("", "No of Cases")
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.T_TXNOTH.NOOFCASES, new { htmlAttributes = new { @class = "form-control", id = "NOOFCASES", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "No of Cases" } })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Remarks" class="tab-pane fade">
                        <div class="row">
                            <div>
                                <div id="partialdivRemarks">
                                    @Html.Partial("_TRANSACTIONREMARKS")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Documents" class="tab-pane fade" style="margin-top: 10px;">
                        <div class="row" style="background-color:#c4b9b9;border:5px groove;width:fit-content;">
                            <div>
                                <div id="partialdivDocument" style="margin-top:0px;">
                                    @Html.Partial("_UPLOADDOCUMENTS")
                                </div>
                            </div>
                        </div>
                    </div>
                    @*<div id="Amounts" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                            <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                                <div>
                                    <div id="partialdivAmounts" style="margin-top:0px;">
                                        @Html.Partial("_T_SALE_AMOUNT")
                                    </div>
                                </div>
                            </div>
                        </div>*@

                    @*<div id="SalesBillMade" class="tab-pane fade" style="margin-top: 10px;">

                        </div>*@
                </div>

            </div>
        </div>
    }
    else
    {
        @ViewBag.ErrorMessage
    }

    <div class="container">
        <div id="helpDIV">

        </div>
    </div>
}
