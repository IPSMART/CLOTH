@model Improvar.ViewModels.TransactionOutRecProcess
@{
    string PageControllerName = "T_OUTRECPROCESS";
    ViewBag.Title = "Receive for Processing";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@{
    switch (Model.MENU_PARA)
    {
        case "DY":
            ViewBag.Title = "Receive for Dyer"; break;
        case "PR":
            ViewBag.Title = "Receive for Printing"; break;
        case "ST":
            ViewBag.Title = "Receive for Stiching"; break;
        case "EM":
            ViewBag.Title = "Receive for Embroidery"; break;
        case "JW":
            ViewBag.Title = "Receive for Other Jobs"; break;
        case "DYU":
            ViewBag.Title = "Return from Dyer w/o Job"; break;
        case "PRU":
            ViewBag.Title = "Return from Printer w/o Job"; break;
        case "STU":
            ViewBag.Title = "Return from Sticher w/o Job"; break;
        case "EMU":
            ViewBag.Title = "Return from Embroider w/o Job"; break;
        case "JWU":
            ViewBag.Title = "Return from Other w/o Job"; break;
        default: ViewBag.Title = ""; break;
    }
}
<style>
    .TextAreaRemarks {
        height: 190px;
    }
</style>
<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/Cloth.js"></script>
<script type="text/javascript">
    $("#WaitingMode").show();
    $(document).ready(function () {
        if ("@Model.DefaultAction" == "V" || "@Model.DefaultAction" == "D") {
            modeView();
        }
        else if ("@Model.DefaultAction" == "E") {

        }
        else if ("@Model.DefaultAction" == "A") {
            $('form :input:enabled:visible:not([readonly]):first').focus();

            if ('@ViewBag.PENDPROGRAMME' == "Y") {
                document.getElementById("PendProgramme").disabled = true;
                $("#SLCD").attr('readonly', 'readonly');
                $('#PARTY_HELP').hide("");
                $("#SLCD").removeAttr("onblur");

                $("li").removeClass("active").addClass("");
                $(".nav-tabs li:nth-child(2)").addClass('active');
                //below set the  child sequence
                $(".tab-content div").removeClass("active");
                $(".tab-content div:nth-child(2)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
                $("#BARCODE").focus();
            }
        }
        $("#WaitingMode").hide();
    });
</script>
<script>
    @{
        string mldauto = "";
        if (@Model.T_CNTRL_HDR != null)
        {
            if (@Model.T_CNTRL_HDR.AUTONO != null)
            {
                mldauto = Model.T_CNTRL_HDR.AUTONO.ToString();
                if (Model.T_CNTRL_HDR.CANCEL == "Y")
                {
                    ViewBag.formname = ViewBag.formname + "   " + "(Record Cancelled)";
                }
            }
        }
        else
        {
            mldauto = "";
        }
    }
    function ModifyLogDetails() {
        if ("@Model.DefaultAction" == "V") {
            ModifyLogDtl('@mldauto');
        }
    }
</script>
<script>
    function requiredFieldValidator() {
        if (!emptyFieldCheck("Please Select / Enter Document Date", "DOCDT")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Party", "SLCD")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Godown", "GOCD")) { return false; }
        if (!emptyFieldCheck("Please Enter Party Bill No", "PREFNO")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Party Bill Date", "PREFDT")) { return false; }
        //start of finalise
        var GridRow = $("#_T_OUTRECPROCESS_Receive_Grid > tbody > tr").length;
        if ($("#bardatachng").val() == "Y" && GridRow > 0) {
            debugger;
            if (!emptyFieldCheck("Please Select / Enter Job", "JOBCD")) { return false; }
            var GridRow = $("#_T_OUTRECPROCESS_Receive_Grid > tbody > tr").length;
            if (GridRow == 0) {
                $("li").removeClass("active").addClass("");
                $(".nav-tabs li:nth-child(3)").addClass('active');
                //below set the  child sequence
                $(".tab-content div").removeClass("active");
                $(".tab-content div:nth-child(3)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
                msgInfo("Please fill Receive Data");
                return false;
            }
            $.ajax({
                type: 'POST',
                beforesend: $("#WaitingMode").show(),
                url: "@Url.Action("FillDetailData", PageControllerName)",
                data: $('form').serialize(),
                success: function (result) {
                    //$("#partialdivBarCodeTab").animate({ marginTop: '-10px' }, 50);
                    $("#partialdivDetail").html(result);
                    var GridRow = $("#_T_OUTRECPROCESS_Detail_Grid > tbody > tr").length;
                    for (var i = 0; i <= GridRow - 1; i++) {
                        CalculateAmt_Details(i);
                    }
                    $("#bardatachng").val("N");
                    $("#WaitingMode").hide();
                    pageValidation("@Model.DefaultAction");
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
            return false;
        }
            //start of finalise
        else {
            return true;
        }
    }
</script>
<script>
    $(function () {
        if ("@Model.DefaultAction" != "V") {
            $("#DOCDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate', minDate: '@Model.mindate' });
            $("#PREFDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate' });
            $("#LRDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate' });
        }
    });
</script>
<script>
    @*function GetPartyDetails(id) {
        var DefaultAction = $("#DefaultAction").val();
        if (DefaultAction == "V") return true;
        debugger;
        if (id == "") {
            ClearAllTextBoxes("SLCD,SLNM,SLAREA,GSTNO,TAXGRPCD,PRCCD,DUEDAYS,TCSPER,TDSLIMIT,TDSCALCON,AMT,TCSAPPL,TDSROUNDCAL,TCSCODE,TCSNM");
        }
        else {
            var code = $("#slcd_tag").val() + String.fromCharCode(181) + $("#DOCDT").val();
            var AUTONO = $("#AUTONO").val();
            var TDSCODE = $("#TDSCODE").val();
            $.ajax({
                type: 'POST',
                beforesend: $("#WaitingMode").show(),
                url: "@Url.Action("GetPartyDetails", PageControllerName)",
                data: "&val=" + id + "&Code=" + code + "&Autono=" + AUTONO + "&linktdscode=" + TDSCODE,
                success: function (result) {
                    var MSG = result.indexOf('#helpDIV');
                    if (MSG >= 0) {
                        ClearAllTextBoxes("SLCD,SLNM,SLAREA,GSTNO,TAXGRPCD,PRCCD,DUEDAYS,TCSPER,TDSLIMIT,TDSCALCON,AMT,TCSAPPL,TDSROUNDCAL,TCSCODE,TCSNM");
                        $('#SearchFldValue').val("SLCD");
                        $('#helpDIV').html(result);
                        $('#ReferanceFieldID').val("SLCD/SLNM/SLAREA/GSTNO");
                        $('#ReferanceColumn').val("1/0/3/2");
                        $('#helpDIV_Header').html("Party Details");
                    }
                    else {
                        var MSG = result.indexOf(String.fromCharCode(181));
                        if (MSG >= 0) {
                            $("#SLCD").val(returncolvalue(result, "slcd"));
                            $("#SLNM").val(returncolvalue(result, "slnm"));
                            $("#SLAREA").val(returncolvalue(result, "slarea"));
                            $("#GSTNO").val(returncolvalue(result, "gstno"));
                            $("#TAXGRPCD").val(returncolvalue(result, "TAXGRPCD"));
                            $("#PRCCD").val(returncolvalue(result, "PRCCD"));
                            $("#DUEDAYS").val(returncolvalue(result, "crdays"));

                            //tcs
                            $("#TDSCODE").val(returncolvalue(result, "TCSCODE"));
                            $("#TDSNM").val(returncolvalue(result, "TCSNM"));
                            $("#TCSPER").val(returncolvalue(result, "TCSPER"));
                            $("#TDSLIMIT").val(returncolvalue(result, "TDSLIMIT"));
                            $("#TDSCALCON").val(returncolvalue(result, "TDSCALCON"));
                            $("#AMT").val(returncolvalue(result, "AMT"));
                            $("#TCSAPPL").val(returncolvalue(result, "TCSAPPL"));
                            $("#TDSROUNDCAL").val(returncolvalue(result, "TDSROUNDCAL"));
                            //BillAmountCalculate();//fill value of tcson
                            //
                        }
                        else {
                            $('#helpDIV').html("");
                            msgInfo("" + result + " !");
                            ClearAllTextBoxes("SLCD,SLNM,SLAREA,GSTNO,TAXGRPCD,PRCCD,DUEDAYS,TCSPER,TDSLIMIT,TDSCALCON,AMT,TCSAPPL,TDSROUNDCAL,TCSCODE,TCSNM");
                            message_value = "SLCD";
                        }
                    }
                    $("#WaitingMode").hide();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }

    }*@
    function SelectTDSCode(id, TDSHD, TDSNM, TDSPER) {
        if (id == "") {
            $("#" + TDSHD.id).val("");
            $("#" + TDSNM.id).val("");
            $("#" + TDSPER.id).val("");
            $("#TDSROUNDCAL").val("");
            $("#TDSCALCON").val("");
        }
        else {
            if (!emptyFieldCheck("Enter Document Date", "DOCDT")) { return false; }
            if (!emptyFieldCheck("Enter Supplier Code", "SLCD")) { return false; }
            var PARTY = document.getElementById("SLCD").value;
            var DOCDT = document.getElementById("DOCDT").value;
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetTDSDetails", PageControllerName)",
                data:
                    {
                        val: id,
                        Code: DOCDT + String.fromCharCode(181) + PARTY,
                    },
                success: function (result) {
                    var MSG = result.indexOf(String.fromCharCode(181));
                    if (MSG >= 0) {
                        document.getElementById(TDSHD.id).value = returncolvalue(result, "TDSCODE");
                        document.getElementById(TDSNM.id).value = returncolvalue(result, "TDSNM");
                        var CMPNONCMP = returncolvalue(result, "CMPNONCMP");
                        if (CMPNONCMP == "C") {
                            document.getElementById(TDSPER.id).value = returncolvalue(result, "TDSPER");
                        } else {
                            document.getElementById(TDSPER.id).value = returncolvalue(result, "TDSPERNONCMP");
                        }
                        document.getElementById("TDSROUNDCAL").value = returncolvalue(result, "TDSROUNDCAL");
                        document.getElementById("TDSCALCON").value = returncolvalue(result, "TDSCALCON");
                    }
                    else {
                        $("#" + TDSHD.id).val("");
                        $("#" + TDSNM.id).val("");
                        $("#" + TDSPER.id).val("");
                        $("#TDSROUNDCAL").val("");
                        $("#TDSCALCON").val("");
                        msgInfo(result);
                        message_value = TDSHD.id;
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }
</script>
<script>
    function PendingProgramme() {
        if (!emptyFieldCheck("Please Select / Enter Party", "DOCDT")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Party", "SLCD")) { return false; }
        var DOCDT = $("#DOCDT").val();
        var SLCD = $("#SLCD").val();
        var JOBCD = $("#JOBCD").val();
        var AUTONO = $("#AUTONO").val();
        $.ajax({
            type: 'POST',
            url: "@Url.Action("GetPendingProgramme", PageControllerName)",
            data: { docdt: DOCDT, jobcd: JOBCD, slcd: SLCD, autono: AUTONO },
            success: function (result) {
                if (result == "1") {
                    document.getElementById("PendProgramme").disabled = true;
                    $("#SLCD").attr('readonly', 'readonly');
                    $('#PARTY_HELP').hide("");
                    $("#SLCD").removeAttr("onblur");

                    $("li").removeClass("active").addClass("");
                    $(".nav-tabs li:nth-child(2)").addClass('active');
                    //below set the  child sequence
                    $(".tab-content div").removeClass("active");
                    $(".tab-content div:nth-child(2)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
                    $("#BARCODE").focus();
                }
                else {
                    msgInfo(result);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function GetBarnoDetails(id) {
        debugger;
        if (id == "") {
            ClearAllTextBoxes("PROGAUTOSLNO,BARCODE,PROGUNIQNO");
        }
        else {
            var progautoslno = $("#PROGAUTOSLNO").val();
            $.ajax({
                type: 'POST',
                beforesend: $("#WaitingMode").show(),
                url: "@Url.Action("GetBarCodeDetails", PageControllerName)",
                data: $('form').serialize() + "&val=" + id + "&Code=" + progautoslno,
                success: function (result) {
                    var MSG = result.indexOf('id="_T_OUTRECPROCESS_Programme_GRID"');
                    if (MSG >= 0) {
                        ClearAllTextBoxes("PROGAUTOSLNO,BARCODE,PROGUNIQNO");
                        $("#partialdivProgramme").html(result);
                    }
                    else {
                        var MSG = result.indexOf('#helpDIV');
                        if (MSG >= 0) {
                            ClearAllTextBoxes("PROGAUTOSLNO,BARCODE,PROGUNIQNO");
                            $('#SearchFldValue').val("BARCODE");
                            $('#helpDIV').html(result);
                            $('#ReferanceFieldID').val("BARCODE/PROGAUTOSLNO");
                            $('#ReferanceColumn').val("3/9");
                            $('#helpDIV_Header').html("Bar Code Details");
                        }
                        else {
                            $('#helpDIV').html("");
                            msgInfo("" + result + " !");
                            ClearAllTextBoxes("PROGAUTOSLNO,BARCODE,PROGUNIQNO");
                            message_value = "BARCODE";
                        }
                    }
                    $("#WaitingMode").hide();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }

    }

    function FillReceiveTab() {
        var GridRow = $("#_T_OUTRECPROCESS_Programme_GRID > tbody > tr").length;
        if (GridRow == 0) {
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:nth-child(2)").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:nth-child(2)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            msgInfo("Please fill Programme Data");
            message_value = "BARCODE";
            return false;
        }
        $.ajax({
            type: 'POST',
            url: "@Url.Action("FillReceiveData", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivReceive").html(result);
                $("li").removeClass("active").addClass("");
                $(".nav-tabs li:nth-child(3)").addClass('active');
                //below set the  child sequence
                $(".tab-content div").removeClass("active");
                $(".tab-content div:nth-child(3)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function Fill_DetailData() {
        if (!emptyFieldCheck("Please Select / Enter Job", "JOBCD")) { return false; }
        var GridRow = $("#_T_OUTRECPROCESS_Receive_Grid > tbody > tr").length;
        if (GridRow == 0) {
            $("li").removeClass("active").addClass("");
            $(".nav-tabs li:nth-child(3)").addClass('active');
            //below set the  child sequence
            $(".tab-content div").removeClass("active");
            $(".tab-content div:nth-child(3)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            msgInfo("Please fill Receive Data");
            return false;
        }
        $.ajax({
            type: 'POST',
            beforesend: $("#WaitingMode").show(),
            url: "@Url.Action("FillDetailData", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                //$("#partialdivBarCodeTab").animate({ marginTop: '-10px' }, 50);
                $("#partialdivDetail").html(result);
                $("li").removeClass("active").addClass("");
                $(".nav-tabs li:nth-child(4)").addClass('active');
                //below set the  child sequence
                $(".tab-content div").removeClass("active");
                $(".tab-content div:nth-child(4)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
                var GridRow = $("#_T_OUTRECPROCESS_Detail_Grid > tbody > tr").length;
                for (var i = 0; i <= GridRow - 1; i++) {
                    CalculateAmt_Details(i);
                }
                $("#bardatachng").val("N");
                $("#WaitingMode").hide();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });

    }
</script>
<script>
    function ChkQntyNosProgramme(i) {
        var T_NOS = 0; var T_QNTY = 0;
        var PROGAUTOSLNO = $("#P_PROGAUTOSLNO_" + i).val();
        var BALNOS = $("#P_BALNOS_" + i).val();
        if (BALNOS != "") { BALNOS = parseFloat(BALNOS); } else { BALNOS = parseFloat(0); }
        var BALQNTY = $("#P_BALQNTY_" + i).val();
        if (BALQNTY != "") { BALQNTY = parseFloat(BALQNTY); } else { BALQNTY = parseFloat(0); }
        var GridRow = $("#_T_OUTRECPROCESS_Programme_GRID > tbody > tr").length;
        for (var j = 0; j <= GridRow - 1; j++) {

            if ($("#P_PROGAUTOSLNO_" + j).val() == PROGAUTOSLNO) {
                var NOS = document.getElementById("P_NOS_" + j).value;
                if (NOS != "") { T_NOS = T_NOS + parseFloat(NOS); } else { T_NOS = T_NOS + parseFloat(0); }

                var QNTY = document.getElementById("P_QNTY_" + j).value;
                if (QNTY != "") { T_QNTY = T_QNTY + parseFloat(QNTY); } else { T_QNTY = T_QNTY + parseFloat(0); }
            }
        }
        //if (T_NOS > BALNOS) {
        //    msgInfo("total Nos is grater than balance nos..");
        //    message_value = "P_NOS_" + i;
        //    return false;
        //}
        if (T_QNTY > BALQNTY) {
            msgInfo("total Qnty is grater than balance qnty..");
            message_value = "P_QNTY_" + i;
            return false;
        }
        else {

            CalculateTotalProgramme();
        }

    }
    function CalculateTotalProgramme() {
        var T_NOS = 0; var T_QNTY = 0; var T_QNTYDAM = 0; var T_STD_AMT = 0; var T_DIS_AMT = 0; var T_GROSS_AMT = 0; var T_IGST_AMT = 0; var T_CGST_AMT = 0;
        var T_SGST_AMT = 0; var T_CESS_AMT = 0; var T_DUTY_AMT = 0; var T_OTHER_AMT = 0; var T_NET_AMT = 0;
        var T_SHORTQNTY = 0;
        var GridRow = $("#_T_OUTRECPROCESS_Programme_GRID > tbody > tr").length;
        for (var i = 0; i <= GridRow - 1; i++) {
            var NOS = document.getElementById("P_NOS_" + i).value;
            if (NOS != "") { T_NOS = T_NOS + parseFloat(NOS); } else { T_NOS = T_NOS + parseFloat(0); }

            var QNTY = document.getElementById("P_QNTY_" + i).value;
            if (QNTY != "") { T_QNTY = T_QNTY + parseFloat(QNTY); }
            else { T_QNTY = T_QNTY + parseFloat(0); }
            T_SHORTQNTY += retFloat($("#P_SHORTQNTY_" + i).val());

        }
        document.getElementById("P_T_NOS").value = parseFloat(T_NOS).toFixed(0);
        document.getElementById("P_T_QNTY").value = parseFloat(T_QNTY).toFixed(3);
        document.getElementById("P_T_SHORTQNTY").value = parseFloat(T_SHORTQNTY).toFixed(3);
    }
</script>@*Programme calculation*@
<script>
    function CalculateTotal_Barno() {

        var T_QNTY = 0, T_NOS = 0, T_SHORTQNTY = 0;
        var GridRow = $("#_T_OUTRECPROCESS_Receive_Grid > tbody > tr").length;
        for (var i = 0; i <= GridRow - 1; i++) {
            var QNTY = $("#B_QNTY_" + i).val();
            if (QNTY != "") { T_QNTY = T_QNTY + parseFloat(QNTY); } else { T_QNTY = T_QNTY + parseFloat(0); }
            var NOS = $("#B_NOS_" + i).val();
            if (NOS != "") { T_NOS = T_NOS + parseFloat(NOS); } else { T_NOS = T_NOS + parseFloat(0); }
            T_SHORTQNTY += retFloat($("#B_SHORTQNTY_" + i).val());
        }
        $("#B_T_QNTY").val(parseFloat(T_QNTY).toFixed(3));
        $("#B_T_SHORTQNTY").val(parseFloat(T_SHORTQNTY).toFixed(3));
        $("#B_T_NOS").val(parseFloat(T_NOS).toFixed(0));

    }
</script>@*receive calculation*@
<script>
    function UpdateBarCodeRow_FrmDet(i) {
        var TXNSLNO = $("#D_SLNO_" + i).val();
        var ITGRPCD = $("#D_ITGRPCD_" + i).val();
        var ITCD = $("#D_ITCD_" + i).val();
        //fill
        var RATE = $("#D_RATE_" + i).val();
        var DISCTYPE = $("#D_DISCTYPE_" + i).val();
        var DISCRATE = $("#D_DISCRATE_" + i).val();

        var GridRowMain = $("#_T_OUTRECPROCESS_Receive_Grid > tbody > tr").length;
        for (j = 0; j <= GridRowMain - 1; j++) {
            if ($("#B_TXNSLNO_" + j).val() == TXNSLNO && $("#B_ITGRPCD_" + j).val() == ITGRPCD && $("#B_ITCD_" + j).val() == ITCD) {
                $("#B_RATE_" + j).val(RATE);
                $("#B_DISCTYPE_" + j).val(DISCTYPE);
                $("#B_DISCRATE_" + j).val(DISCRATE);
            }
        }

    }
    function CalculateAmt_Details(i) {
        var DefaultAction = $("#DefaultAction").val();
        if (DefaultAction == "V") return true;
        var BLQNTY = $("#D_BLQNTY_" + i).val();
        if (BLQNTY != "") { BLQNTY = parseFloat(BLQNTY); } else { BLQNTY = parseFloat(0); }

        var QNTY = $("#D_QNTY_" + i).val();
        if (QNTY != "") { QNTY = parseFloat(QNTY); } else { QNTY = parseFloat(0); }

        var NOS = $("#D_NOS_" + i).val();
        if (NOS != "") { NOS = parseFloat(NOS); } else { NOS = parseFloat(0); }

        var FLAGMTR = $("#D_FLAGMTR_" + i).val();
        if (FLAGMTR != "") { FLAGMTR = parseFloat(FLAGMTR); } else { FLAGMTR = parseFloat(0); }

        var RATE = $("#D_RATE_" + i).val();
        if (RATE != "") { RATE = parseFloat(RATE); } else { RATE = parseFloat(0); }

        var IGSTPER = $("#D_IGSTPER_" + i).val();
        if (IGSTPER != "") { IGSTPER = parseFloat(IGSTPER); } else { IGSTPER = parseFloat(0); }

        var CGSTPER = $("#D_CGSTPER_" + i).val();
        if (CGSTPER != "") { CGSTPER = parseFloat(CGSTPER); } else { CGSTPER = parseFloat(0); }

        var SGSTPER = $("#D_SGSTPER_" + i).val();
        if (SGSTPER != "") { SGSTPER = parseFloat(SGSTPER); } else { SGSTPER = parseFloat(0); }

        var CESSPER = $("#D_CESSPER_" + i).val();
        if (CESSPER != "") { CESSPER = parseFloat(CESSPER); } else { CESSPER = parseFloat(0); }

        var DISCTYPE = $("#D_DISCTYPE_" + i).val();
        var DISCRATE = $("#D_DISCRATE_" + i).val();
        if (DISCRATE != "") { DISCRATE = parseFloat(DISCRATE); } else { DISCRATE = parseFloat(0); }

        var TDDISCTYPE = $("#D_TDDISCTYPE_" + i).val();
        var TDDISCRATE = $("#D_TDDISCRATE_" + i).val();
        if (TDDISCRATE != "") { TDDISCRATE = parseFloat(TDDISCRATE); } else { TDDISCRATE = parseFloat(0); }

        var SCMDISCTYPE = $("#D_SCMDISCTYPE_" + i).val();
        var SCMDISCRATE = $("#D_SCMDISCRATE_" + i).val();
        if (SCMDISCRATE != "") { SCMDISCRATE = parseFloat(SCMDISCRATE); } else { SCMDISCRATE = parseFloat(0); }


        //AMOUNT CALCULATION
        var amount = 0;
        if (BLQNTY == 0) {
            amount = (parseFloat(QNTY) - parseFloat(FLAGMTR)) * parseFloat(RATE);
        }
        else {
            amount = parseFloat(BLQNTY) * parseFloat(RATE);
        }
        amount = parseFloat(amount).toFixed(2);
        $("#D_AMT_" + i).val(amount);

        //DISCOUNT AMOUNT CALCULATION
        var DISCAMT = 0;
        if (DISCTYPE == "Q") { DISCAMT = DISCRATE * QNTY; }
        else if (DISCTYPE == "N") { DISCAMT = DISCRATE * NOS; }
        else if (DISCTYPE == "P") { DISCAMT = (amount * DISCRATE) / 100; }
        else if (DISCTYPE == "F") { DISCAMT = DISCRATE; }
        else { DISCAMT = 0; }
        DISCAMT = parseFloat(DISCAMT).toFixed(2);
        $("#D_DISCAMT_" + i).val(DISCAMT);

        //TDDISCOUNT AMOUNT CALCULATION
        var TDDISCAMT = 0;
        if (TDDISCTYPE == "Q") { TDDISCAMT = TDDISCRATE * QNTY; }
        else if (TDDISCTYPE == "N") { TDDISCAMT = TDDISCRATE * NOS; }
        else if (TDDISCTYPE == "P") { TDDISCAMT = (amount * TDDISCRATE) / 100; }
        else if (TDDISCTYPE == "F") { TDDISCAMT = TDDISCRATE; }
        else { TDDISCAMT = 0; }
        TDDISCAMT = parseFloat(TDDISCAMT).toFixed(2);
        $("#D_TDDISCAMT_" + i).val(TDDISCAMT);

        //SCMDISCOUNT AMOUNT CALCULATION
        var SCMDISCAMT = 0;
        if (SCMDISCTYPE == "Q") { SCMDISCAMT = SCMDISCRATE * QNTY; }
        else if (SCMDISCTYPE == "N") { SCMDISCAMT = SCMDISCRATE * NOS; }
        else if (SCMDISCTYPE == "P") { SCMDISCAMT = (amount * SCMDISCRATE) / 100; }
        else if (SCMDISCTYPE == "F") { SCMDISCAMT = SCMDISCRATE; }
        else { SCMDISCAMT = 0; }
        SCMDISCAMT = parseFloat(SCMDISCAMT).toFixed(2);
        $("#D_SCMDISCAMT_" + i).val(SCMDISCAMT);

        //TOTAL DISCOUNT AMOUNT CALCULATION
        var TOTDISCAMT = parseFloat(DISCAMT + TDDISCAMT + SCMDISCAMT).toFixed(2);
        $("#D_TOTDISCAMT_" + i).val(TOTDISCAMT);

        //TAXABLE CALCULATION
        var taxbleamt = parseFloat(amount) - parseFloat(TOTDISCAMT);
        taxbleamt = parseFloat(taxbleamt).toFixed(2);
        $("#D_TXBLVAL_" + i).val(taxbleamt);
        //IGST,CGST,SGST,CESS AMOUNT CALCULATION

        var IGST_AMT = 0; var CGST_AMT = 0; var SGST_AMT = 0; var CESS_AMT = 0; var chkAmt = 0;

        //IGST
        if (IGSTPER == 0 || IGSTPER == "") {
            IGSTPER = 0; IGST_AMT = 0;
        }
        else {
            IGST_AMT = parseFloat((taxbleamt * IGSTPER) / 100).toFixed(2);
            chkAmt = $("#D_IGSTAMT_" + i).val();
            if (chkAmt == "") chkAmt = 0;
            if (Math.abs(IGST_AMT - chkAmt) <= 1) IGST_AMT = chkAmt;
        }
        $("#D_IGSTAMT_" + i).val(IGST_AMT);
        //CGST
        if (CGSTPER == "" || CGSTPER == 0) {
            CGSTPER = 0; CGST_AMT = 0;
        }
        else {
            CGST_AMT = parseFloat((taxbleamt * CGSTPER) / 100).toFixed(2);
            chkAmt = $("#D_CGSTAMT_" + i).val();
            if (chkAmt == "") chkAmt = 0;
            if (Math.abs(CGST_AMT - chkAmt) <= 1) CGST_AMT = chkAmt;
        }
        $("#D_CGSTAMT_" + i).val(CGST_AMT);
        //SGST
        if (SGSTPER == "" || SGSTPER == 0) {
            SGSTPER = 0; SGST_AMT = 0;
        }
        else {
            SGST_AMT = parseFloat((taxbleamt * SGSTPER) / 100).toFixed(2);
            chkAmt = $("#D_SGSTAMT_" + i).val();
            if (chkAmt == "") chkAmt = 0;
            if (Math.abs(SGST_AMT - chkAmt) <= 1) SGST_AMT = chkAmt;
        }
        $("#D_SGSTAMT_" + i).val(SGST_AMT);

        //CESS
        if (CESSPER == "" || CESSPER == 0) {
            CESSPER = 0; CESS_AMT = 0;
        }
        else {
            CESS_AMT = parseFloat((taxbleamt * CESSPER) / 100).toFixed(2);
            chkAmt = $("#D_CESSAMT_" + i).val();
            if (chkAmt == "") chkAmt = 0;
            if (Math.abs(CESS_AMT - chkAmt) <= 1) CESS_AMT = chkAmt;
        }
        $("#D_CESSAMT_" + i).val(CESS_AMT);

        var netamt = parseFloat(parseFloat(taxbleamt) + parseFloat(IGST_AMT) + parseFloat(CGST_AMT) + parseFloat(SGST_AMT) + parseFloat(CESS_AMT)).toFixed(2);
        $("#D_NETAMT_" + i).val(netamt);
        CalculateTotal_Details();

    }
    function CalculateTotal_Details() {
        var DefaultAction = $("#DefaultAction").val();
        if (DefaultAction == "V") return true;
        var T_NOS = 0; var T_QNTY = 0; var T_AMT = 0; var T_GROSS_AMT = 0; var T_IGST_AMT = 0; var T_CGST_AMT = 0; var T_SGST_AMT = 0; var T_CESS_AMT = 0; var T_NET_AMT = 0;

        var GridRow = $("#_T_OUTRECPROCESS_Detail_Grid > tbody > tr").length;
        for (var i = 0; i <= GridRow - 1; i++) {
            var NOS = $("#D_NOS_" + i).val();
            if (NOS != "") { T_NOS = T_NOS + parseFloat(NOS); } else { T_NOS = T_NOS + parseFloat(0); }

            var QNTY = $("#D_QNTY_" + i).val();
            if (QNTY != "") { T_QNTY = T_QNTY + parseFloat(QNTY); } else { T_QNTY = T_QNTY + parseFloat(0); }

            var AMT = $("#D_AMT_" + i).val();
            if (AMT != "") { T_AMT = T_AMT + parseFloat(AMT); } else { T_AMT = T_AMT + parseFloat(0); }

            var GROSS_AMT = $("#D_TXBLVAL_" + i).val();
            if (GROSS_AMT != "") { T_GROSS_AMT = T_GROSS_AMT + parseFloat(GROSS_AMT); } else { T_GROSS_AMT = T_GROSS_AMT + parseFloat(0); }

            var IGST_AMT = $("#D_IGSTAMT_" + i).val();
            if (IGST_AMT != "") { T_IGST_AMT = T_IGST_AMT + parseFloat(IGST_AMT); } else { T_IGST_AMT = T_IGST_AMT + parseFloat(0); }

            var CGST_AMT = $("#D_CGSTAMT_" + i).val();
            if (CGST_AMT != "") { T_CGST_AMT = T_CGST_AMT + parseFloat(CGST_AMT); } else { T_CGST_AMT = T_CGST_AMT + parseFloat(0); }

            var SGST_AMT = $("#D_SGSTAMT_" + i).val();
            if (SGST_AMT != "") { T_SGST_AMT = T_SGST_AMT + parseFloat(SGST_AMT); } else { T_SGST_AMT = T_SGST_AMT + parseFloat(0); }

            var CESS_AMT = $("#D_CESSAMT_" + i).val();
            if (CESS_AMT != "") { T_CESS_AMT = T_CESS_AMT + parseFloat(CESS_AMT); } else { T_CESS_AMT = T_CESS_AMT + parseFloat(0); }

            var NET_AMT = $("#D_NETAMT_" + i).val();
            if (NET_AMT != "") { T_NET_AMT = T_NET_AMT + parseFloat(NET_AMT); } else { T_NET_AMT = T_NET_AMT + parseFloat(0); }
        }
        var totaltax = parseFloat(T_IGST_AMT) + parseFloat(T_CGST_AMT) + parseFloat(T_SGST_AMT) + parseFloat(T_CESS_AMT);
        $("#T_NOS").val(parseFloat(T_NOS).toFixed(0));
        $("#T_QNTY").val(parseFloat(T_QNTY).toFixed(2));
        $("#T_AMT").val(parseFloat(T_AMT).toFixed(2));
        $("#T_GROSS_AMT").val(parseFloat(T_GROSS_AMT).toFixed(2));
        $("#T_IGST_AMT").val(parseFloat(T_IGST_AMT).toFixed(2));
        $("#T_CGST_AMT").val(parseFloat(T_CGST_AMT).toFixed(2));
        $("#T_SGST_AMT").val(parseFloat(T_SGST_AMT).toFixed(2));
        $("#T_CESS_AMT").val(parseFloat(T_CESS_AMT).toFixed(2));
        $("#T_NET_AMT").val(parseFloat(T_NET_AMT).toFixed(2));

        //main tab
        //$("#TOTNOS").val(parseFloat(T_NOS).toFixed(2));
        //$("#TOTQNTY").val(parseFloat(T_QNTY).toFixed(2));
        //$("#TOTTAXVAL").val(parseFloat(T_GROSS_AMT).toFixed(2));
        //$("#TOTTAX").val(parseFloat(totaltax).toFixed(2));
        BillAmountCalculate();

    }
    function HasChangeBarSale() {
        var DefaultAction = $("#DefaultAction").val();
        if (DefaultAction == "V") return true;
        $("#bardatachng").val("Y");
    }
</script>@*detailtab calculation*@
<script>
    function AmountCalculation(i) {
        var A_NOS = document.getElementById("T_NOS").value;
        var B_QNTY = document.getElementById("T_QNTY").value;
        var D_GROSS_AMT = document.getElementById("T_GROSS_AMT").value;
        var E_NET_AMT = document.getElementById("T_NET_AMT").value;
        var RT = document.getElementById("AMTRATE_" + i).value;
        var IGST_PER = document.getElementById("AIGSTPER_" + i).value;
        if (IGST_PER == "") { IGST_PER = parseFloat(0); } else { IGST_PER = parseFloat(IGST_PER) }
        var CGST_PER = document.getElementById("ACGSTPER_" + i).value;
        if (CGST_PER == "") { CGST_PER = parseFloat(0); } else { CGST_PER = parseFloat(CGST_PER) }
        var SGST_PER = document.getElementById("ASGSTPER_" + i).value;
        if (SGST_PER == "") { SGST_PER = parseFloat(0); } else { SGST_PER = parseFloat(SGST_PER) }
        var CESS_PER = document.getElementById("ACESSPER_" + i).value;
        if (CESS_PER == "") { CESS_PER = parseFloat(0); } else { CESS_PER = parseFloat(CESS_PER) }
        var DUTY_PER = document.getElementById("ADUTYPER_" + i).value;
        if (DUTY_PER == "") { DUTY_PER = parseFloat(0); } else { DUTY_PER = parseFloat(DUTY_PER) }
        var CALC_TYPE = document.getElementById("CALCTYPE_" + i).value;
        var CALC_FORMULA = document.getElementById("CALCFORMULA_" + i).value;
        if (A_NOS == "") { A_NOS = parseFloat(0); }
        if (B_QNTY == "") { B_QNTY = parseFloat(0); }
        if (D_GROSS_AMT == "") { D_GROSS_AMT = parseFloat(0); }
        if (E_NET_AMT == "") { E_NET_AMT = parseFloat(0); }
        if (RT == "") { RT = parseFloat(0); }
        var AMOUNT = 0;
        if (CALC_TYPE == "F") { AMOUNT = parseFloat(RT); }
        else if (CALC_TYPE == "P") {
            if (CALC_FORMULA == "A") { AMOUNT = parseFloat(A_NOS) * parseFloat(RT); }
            else if (CALC_FORMULA == "B") { AMOUNT = parseFloat(B_QNTY) * parseFloat(RT); }
            else if (CALC_FORMULA == "D") { AMOUNT = parseFloat(D_GROSS_AMT) * parseFloat(RT); }
            else if (CALC_FORMULA == "E") { AMOUNT = parseFloat(E_NET_AMT) * parseFloat(RT); }
        }
        document.getElementById("A_AMT_" + i).value = AMOUNT;
        var IGST_AMT = 0; var CGST_AMT = 0; var SGST_AMT = 0; var CESS_AMT = 0; var DUTY_AMT = 0;

        // IGST CALCULATION
        document.getElementById("AIGSTPER_" + i).value = IGST_PER;
        IGST_AMT = (AMOUNT * IGST_PER) / 100;

        AmountChange(document.getElementById("AIGSTAMT_" + i), document.getElementById("A_AMT_" + i), document.getElementById("AIGSTPER_" + i), document.getElementById("ANETAMT_" + i),
        document.getElementById("ACGSTAMT_" + i), document.getElementById("ASGSTAMT_" + i), document.getElementById("ACESSAMT_" + i), document.getElementById("ADUTYAMT_" + i));
        document.getElementById("AIGSTAMT_" + i).value = parseFloat(IGST_AMT).toFixed(2);
        //END

        // CGST CALCULATION
        document.getElementById("ACGSTPER_" + i).value = CGST_PER;
        CGST_AMT = (AMOUNT * CGST_PER) / 100;
        AmountChange(document.getElementById("ACGSTAMT_" + i), document.getElementById("A_AMT_" + i), document.getElementById("ACGSTPER_" + i), document.getElementById("ANETAMT_" + i),
            document.getElementById("AIGSTAMT_" + i), document.getElementById("ASGSTAMT_" + i), document.getElementById("ACESSAMT_" + i), document.getElementById("ADUTYAMT_" + i));
        document.getElementById("ACGSTAMT_" + i).value = parseFloat(CGST_AMT).toFixed(2);
        //END
        // SGST CALCULATION
        document.getElementById("ASGSTPER_" + i).value = SGST_PER;
        SGST_AMT = (AMOUNT * SGST_PER) / 100;
        AmountChange(document.getElementById("ASGSTAMT_" + i), document.getElementById("A_AMT_" + i), document.getElementById("ASGSTPER_" + i), document.getElementById("ANETAMT_" + i),
            document.getElementById("AIGSTAMT_" + i), document.getElementById("ASGSTAMT_" + i), document.getElementById("ACESSAMT_" + i), document.getElementById("ADUTYAMT_" + i));
        document.getElementById("ASGSTAMT_" + i).value = parseFloat(SGST_AMT).toFixed(2);
        //END
        // CESS CALCULATION
        document.getElementById("ACESSPER_" + i).value = CESS_PER;
        CESS_AMT = (AMOUNT * CESS_PER) / 100;
        AmountChange(document.getElementById("ACESSAMT_" + i), document.getElementById("A_AMT_" + i), document.getElementById("ACESSPER_" + i), document.getElementById("ANETAMT_" + i),
            document.getElementById("AIGSTAMT_" + i), document.getElementById("ASGSTAMT_" + i), document.getElementById("ACESSAMT_" + i), document.getElementById("ADUTYAMT_" + i));
        document.getElementById("ACESSAMT_" + i).value = parseFloat(CESS_AMT).toFixed(2);
        //END
        // DUTY CALCULATION

        document.getElementById("ADUTYPER_" + i).value = DUTY_PER;
        DUTY_AMT = (AMOUNT * DUTY_PER) / 100;
        AmountChange(document.getElementById("ADUTYAMT_" + i), document.getElementById("A_AMT_" + i), document.getElementById("ADUTYPER_" + i), document.getElementById("ANETAMT_" + i),
        document.getElementById("AIGSTAMT_" + i), document.getElementById("ASGSTAMT_" + i), document.getElementById("ACESSAMT_" + i), document.getElementById("ADUTYAMT_" + i));
        document.getElementById("ADUTYAMT_" + i).value = parseFloat(DUTY_AMT).toFixed(2);
        //END

        var NET_AMT = AMOUNT + parseFloat(document.getElementById("AIGSTAMT_" + i).value) + parseFloat(document.getElementById("ACGSTAMT_" + i).value) +
                     parseFloat(document.getElementById("ASGSTAMT_" + i).value) + parseFloat(document.getElementById("ACESSAMT_" + i).value) + parseFloat(document.getElementById("ADUTYAMT_" + i).value);
        document.getElementById("ANETAMT_" + i).value = parseFloat(NET_AMT).toFixed(2);

        //GRID TOTAL CALCULATION
        AmountCalculateTotal();

    }
    function AmountChange(id, AMOUNT, PER, NETAMT, AMT1, AMT2, AMT3, AMT4) {
        var DefaultAction = $("#DefaultAction").val();
        if (DefaultAction == "V") return true;
        var NEW_AMT = document.getElementById(id.id).value;
        var PERCENTAGE = document.getElementById(PER.id).value;
        var AMT = document.getElementById(AMOUNT.id).value;
        var AMT_1 = document.getElementById(AMT1.id).value;
        var AMT_2 = document.getElementById(AMT2.id).value;
        var AMT_3 = document.getElementById(AMT3.id).value;
        var AMT_4 = document.getElementById(AMT4.id).value;
        if (PERCENTAGE != "") {
            var CAL_ABET_AMT = parseFloat(AMT) * parseFloat(PERCENTAGE) / 100;
            var BAL_AMT = Math.abs(parseFloat(NEW_AMT) - parseFloat(CAL_ABET_AMT));
            if (BAL_AMT <= 1) {
                document.getElementById(id.id).value = parseFloat(NEW_AMT).toFixed(2);
                document.getElementById(NETAMT.id).value = parseFloat(parseFloat(NEW_AMT) + parseFloat(AMT) + parseFloat(AMT_1) + parseFloat(AMT_2) + parseFloat(AMT_3) + parseFloat(AMT_4)).toFixed(2);
            }
            else {
                document.getElementById(id.id).value = parseFloat(CAL_ABET_AMT).toFixed(2);
                document.getElementById(NETAMT.id).value = parseFloat(parseFloat(CAL_ABET_AMT) + parseFloat(AMT) + parseFloat(AMT_1) + parseFloat(AMT_2) + parseFloat(AMT_3) + parseFloat(AMT_4)).toFixed(2);
            }
        }
        //GRID TOTAL CALCULATION
        AmountCalculateTotal();

    }
    function AmountCalculateTotal() {
        var T_CURR_AMT = 0; var T_AMT = 0; var T_IGST_AMT = 0; var T_CGST_AMT = 0; var T_SGST_AMT = 0; var T_CESS_AMT = 0; var T_DUTY_AMT = 0; var T_NET_AMT = 0;
        var GridRow = $("#AMOUNT_GRID > tbody > tr").length;
        for (var i = 0; i <= GridRow - 1; i++) {
            var CURR_AMT = document.getElementById("ACURR_AMT_" + i).value;
            if (CURR_AMT != "") { T_CURR_AMT = T_CURR_AMT + parseFloat(CURR_AMT); } else { T_CURR_AMT = T_CURR_AMT + parseFloat(0); }

            var AMT = document.getElementById("A_AMT_" + i).value;
            if (AMT != "") { T_AMT = T_AMT + parseFloat(AMT); } else { T_AMT = T_AMT + parseFloat(0); }

            var IGST_AMT = document.getElementById("AIGSTAMT_" + i).value;
            if (IGST_AMT != "") { T_IGST_AMT = T_IGST_AMT + parseFloat(IGST_AMT); } else { T_IGST_AMT = T_IGST_AMT + parseFloat(0); }

            var CGST_AMT = document.getElementById("ACGSTAMT_" + i).value;
            if (CGST_AMT != "") { T_CGST_AMT = T_CGST_AMT + parseFloat(CGST_AMT); } else { T_CGST_AMT = T_CGST_AMT + parseFloat(0); }

            var SGST_AMT = document.getElementById("ASGSTAMT_" + i).value;
            if (SGST_AMT != "") { T_SGST_AMT = T_SGST_AMT + parseFloat(SGST_AMT); } else { T_SGST_AMT = T_SGST_AMT + parseFloat(0); }

            var CESS_AMT = document.getElementById("ACESSAMT_" + i).value;
            if (CESS_AMT != "") { T_CESS_AMT = T_CESS_AMT + parseFloat(CESS_AMT); } else { T_CESS_AMT = T_CESS_AMT + parseFloat(0); }

            var DUTY_AMT = document.getElementById("ADUTYAMT_" + i).value;
            if (DUTY_AMT != "") { T_DUTY_AMT = T_DUTY_AMT + parseFloat(DUTY_AMT); } else { T_DUTY_AMT = T_DUTY_AMT + parseFloat(0); }

            var NET_AMT = document.getElementById("ANETAMT_" + i).value;
            if (NET_AMT != "") { T_NET_AMT = T_NET_AMT + parseFloat(NET_AMT); } else { T_NET_AMT = T_NET_AMT + parseFloat(0); }

        }
        document.getElementById("A_T_CURR").value = parseFloat(T_CURR_AMT).toFixed(2);
        document.getElementById("A_T_AMOUNT").value = parseFloat(T_AMT).toFixed(2);
        document.getElementById("A_T_IGST").value = parseFloat(T_IGST_AMT).toFixed(2);
        document.getElementById("A_T_CGST").value = parseFloat(T_CGST_AMT).toFixed(2);
        document.getElementById("A_T_SGST").value = parseFloat(T_SGST_AMT).toFixed(2);
        document.getElementById("A_T_CESS").value = parseFloat(T_CESS_AMT).toFixed(2);
        document.getElementById("A_T_DUTY").value = parseFloat(T_DUTY_AMT).toFixed(2);
        document.getElementById("A_T_NET").value = parseFloat(T_NET_AMT).toFixed(2);

        //BILL AMOUNT CALCULATION
        BillAmountCalculate();

    }
</script>@*amount tab calculation*@
<script>
    function CalulateTareWt(GRWT, NTWT, TRWT) {
        var GROSS = document.getElementById(GRWT.id).value;
        if (GROSS == "") {
            GROSS = parseFloat(0);
        }
        var NET = document.getElementById(NTWT.id).value;
        if (NET == "") {
            NET = parseFloat(0);
        }
        var TARE = GROSS - NET;
        document.getElementById(TRWT.id).value = TARE.toFixed(3);

    }
    function TDSAMTCAL(tdson) {
        debugger;
        var ADVAMT = document.getElementById("ADVADJ").value;
        if (ADVAMT == "") { ADVAMT = parseFloat(0); } else { ADVAMT = parseFloat(ADVAMT) }

        var TDS_ON = parseFloat(tdson) - parseFloat(ADVAMT);
        $("#TDSON").val(parseFloat(TDS_ON).toFixed(2));
        var TDS_ROUND = $("#TDSROUNDCAL").val();
        var TDS_PER = $("#TDSPER").val();
        if (TDS_PER == "") { TDS_PER = parseFloat(0); } else { TDS_PER = parseFloat(TDS_PER) }
        if (TDS_ON == "") { TDS_ON = parseFloat(0); } else { TDS_ON = parseFloat(TDS_ON) }
        var tdsamt1 = parseFloat(parseFloat(TDS_ON) * parseFloat(TDS_PER) / 100).toFixed(2);
        var tdsamt2 = tdsamt1.toString().split('.');
        if (tdsamt2[1] > 0) {
            @*if ("@CommVar.ClientCode(Model.UNQSNO)" == "CHEM") {
                tdsamt1 = Math.round(tdsamt1);//==yes
            }
        else {
                tdsamt1 = Math.ceil(tdsamt1);//==nxt
            tdsamt1 = Math.floor(tdsamt1);//==least
        }*@
            if (TDS_ROUND == "Y") {
                tdsamt1 = Math.round(tdsamt1); //==yes
            }
            else
                if (TDS_ROUND == "N") {
                    tdsamt1 = Math.ceil(tdsamt1); //==nxt
                }
                else
                    if (TDS_ROUND == "L") {
                        tdsamt1 = Math.floor(tdsamt1); //==least
                    }
        }
        $("#TDSAMT").val(tdsamt1);
    }
    function BillAmountCalculate() {
        var DefaultAction = $("#DefaultAction").val();
        if (DefaultAction == "V") return true;
        debugger;
        var R_TOTAL_BILL_AMOUNT = 0;
        var TOTAL_ROUND = 0;
        var netamt = 0;
        var ROUND_TAG = document.getElementById("RoundOff").checked;
        var D_TOTALNOS = 0, D_TOTALQNTY = 0, D_TOTALTAXVAL = 0, A_TOTALTAXVAL = 0, D_TOTALIGST = 0, A_TOTALIGST = 0, D_TOTALCGST = 0, A_TOTALCGST = 0, D_TOTALSGST = 0, A_TOTALSGST = 0, D_TOTALNETAMT = 0, A_TOTALNETAMT = 0;
        var T_NOS = $("#T_NOS").val();
        if (T_NOS != "") { D_TOTALNOS = D_TOTALNOS + parseFloat(T_NOS); } else { D_TOTALNOS = D_TOTALNOS + parseFloat(0); }

        var T_QNTY = $("#T_QNTY").val();
        if (T_QNTY != "") { D_TOTALQNTY = D_TOTALQNTY + parseFloat(T_QNTY); } else { D_TOTALQNTY = D_TOTALQNTY + parseFloat(0); }

        var T_GROSS_AMT = $("#T_GROSS_AMT").val();
        if (T_GROSS_AMT != "") { D_TOTALTAXVAL = D_TOTALTAXVAL + parseFloat(T_GROSS_AMT); } else { D_TOTALTAXVAL = D_TOTALTAXVAL + parseFloat(0); }

        var A_T_AMOUNT = $("#A_T_AMOUNT").val();
        if (A_T_AMOUNT != "") { A_TOTALTAXVAL = A_TOTALTAXVAL + parseFloat(A_T_AMOUNT); } else { A_TOTALTAXVAL = A_TOTALTAXVAL + parseFloat(0); }
        //
        var T_IGST_AMT = $("#T_IGST_AMT").val();
        if (T_IGST_AMT != "") { D_TOTALIGST = D_TOTALIGST + parseFloat(T_IGST_AMT); } else { D_TOTALIGST = D_TOTALIGST + parseFloat(0); }

        var A_T_IGST = $("#A_T_IGST").val();
        if (A_T_IGST != "") { A_TOTALIGST = A_TOTALIGST + parseFloat(A_T_IGST); } else { A_TOTALIGST = A_TOTALIGST + parseFloat(0); }

        var T_CGST_AMT = $("#T_CGST_AMT").val();
        if (T_CGST_AMT != "") { D_TOTALCGST = D_TOTALCGST + parseFloat(T_CGST_AMT); } else { D_TOTALCGST = D_TOTALCGST + parseFloat(0); }

        var A_T_CGST = $("#A_T_CGST").val();
        if (A_T_CGST != "") { A_TOTALCGST = A_TOTALCGST + parseFloat(A_T_CGST); } else { A_TOTALCGST = A_TOTALCGST + parseFloat(0); }

        var T_SGST_AMT = $("#T_SGST_AMT").val();
        if (T_SGST_AMT != "") { D_TOTALSGST = D_TOTALSGST + parseFloat(T_SGST_AMT); } else { D_TOTALSGST = D_TOTALSGST + parseFloat(0); }

        var A_T_SGST = $("#A_T_SGST").val();
        if (A_T_SGST != "") { A_TOTALSGST = A_TOTALSGST + parseFloat(A_T_SGST); } else { A_TOTALSGST = A_TOTALSGST + parseFloat(0); }

        var T_NET_AMT = $("#T_NET_AMT").val();
        if (T_NET_AMT != "") { D_TOTALNETAMT = D_TOTALNETAMT + parseFloat(T_NET_AMT); } else { D_TOTALNETAMT = D_TOTALNETAMT + parseFloat(0); }

        var A_T_NET = $("#A_T_NET").val();
        if (A_T_NET != "") { A_TOTALNETAMT = A_TOTALNETAMT + parseFloat(A_T_NET); } else { A_TOTALNETAMT = A_TOTALNETAMT + parseFloat(0); }

        var totaltaxval = 0;
        totaltaxval = parseFloat(parseFloat(D_TOTALTAXVAL) + parseFloat(A_TOTALTAXVAL)).toFixed(2);

        var totaltax = 0;
        totaltax = parseFloat(parseFloat(D_TOTALIGST) + parseFloat(A_TOTALIGST) + parseFloat(D_TOTALCGST) + parseFloat(A_TOTALCGST) + parseFloat(D_TOTALSGST) + parseFloat(A_TOTALSGST)).toFixed(2);

        var totalbillamt = 0;
        totalbillamt = parseFloat(parseFloat(D_TOTALNETAMT) + parseFloat(A_TOTALNETAMT)).toFixed(2);

        $("#TOTNOS").val(parseFloat(D_TOTALNOS).toFixed(0));
        $("#TOTQNTY").val(parseFloat(D_TOTALQNTY).toFixed(2));
        $("#TOTTAXVAL").val(parseFloat(totaltaxval).toFixed(2));
        $("#TOTTAX").val(parseFloat(totaltax).toFixed(2));

        //tds
        var tdscalcon = $("#TDSCALCON").val();
        if (tdscalcon == "B") {
            TDSAMTCAL(totalbillamt);
        }
        else {
            TDSAMTCAL(totaltaxval);
        }
        ////tcs
        //var TCSPER = 0; TCSAMT = 0; TCSON = 0;
        //var MENU_PARA = $("#MENU_PARA").val();
        //if (MENU_PARA != "SR" || MENU_PARA != "PR") {
        //    TCSPER = parseFloat(document.getElementById("TCSPER").value).toFixed(3);
        //    if (TCSPER == "" || TCSPER == "NaN") { TCSPER = parseFloat(0); }
        //    document.getElementById("TCSPER").value = parseFloat(TCSPER).toFixed(3);
        //    if (MENU_PARA == "PB") {
        //        TCSON = $("#TCSON").val();
        //        if (TCSON == "") { TCSON = parseFloat(0); } else { TCSON = parseFloat(TCSON); }
        //    }
        //    else {
        //        GetTCSON(totalbillamt);
        //        TCSON = $("#TCSON").val();
        //        if (TCSON == "") { TCSON = parseFloat(0); } else { TCSON = parseFloat(TCSON) }
        //    }
        //    TCSAMT = parseFloat(parseFloat(TCSON) * parseFloat(TCSPER) / 100);
        //    TCSAMT = CalculateTcsAmt(TCSAMT);
        //    if (MENU_PARA == "PB") {
        //        var NEW_TCSAMT = $("#TCSAMT").val();
        //        if (NEW_TCSAMT == "") { NEW_TCSAMT = parseFloat(0); } else { NEW_TCSAMT = parseFloat(NEW_TCSAMT) }

        //        var TCSON = $("#TCSON").val();
        //        if (TCSON == "") { TCSON = parseFloat(0); } else { TCSON = parseFloat(TCSON) }

        //        var TCSPER = $("#TCSPER").val();
        //        if (TCSPER == "") { TCSPER = parseFloat(0); } else { TCSPER = parseFloat(TCSPER) }

        //        var CAL_TCSAMT = TCSAMT;
        //        var BAL_AMT = Math.abs(parseFloat(NEW_TCSAMT) - parseFloat(CAL_TCSAMT));
        //        if (BAL_AMT <= 1 && NEW_TCSAMT > 0) {
        //            $("#TCSAMT").val(parseFloat(NEW_TCSAMT).toFixed(2));
        //            TCSAMT = NEW_TCSAMT;
        //        }
        //        else {
        //            $("#TCSAMT").val(parseFloat(CAL_TCSAMT).toFixed(2));
        //            TCSAMT = CAL_TCSAMT;
        //        }
        //    }
        //    else {
        //        document.getElementById("TCSAMT").value = parseFloat(TCSAMT).toFixed(2);

        //    }
        //}
        ////
        //totalbillamt = parseFloat(totalbillamt) + parseFloat(TCSAMT);
        var REVCHRG = $("#REVCHRG").val();
        if (REVCHRG == "Y") {
            totalbillamt = parseFloat(totalbillamt) - parseFloat(totaltax);
        }
        var blamt = 0;
        if (ROUND_TAG == true) {
            R_TOTAL_BILL_AMOUNT = Math.round(totalbillamt);
            TOTAL_ROUND = R_TOTAL_BILL_AMOUNT - totalbillamt;
            document.getElementById("BLAMT").value = parseFloat(R_TOTAL_BILL_AMOUNT).toFixed(2);
            document.getElementById("ROAMT").value = parseFloat(TOTAL_ROUND).toFixed(2);
            blamt = parseFloat(R_TOTAL_BILL_AMOUNT).toFixed(2);
        }
        else {
            TOTAL_ROUND = 0;
            document.getElementById("BLAMT").value = parseFloat(totalbillamt).toFixed(2);
            document.getElementById("ROAMT").value = parseFloat(TOTAL_ROUND).toFixed(2);
            blamt = parseFloat(totalbillamt).toFixed(2);
        }
        var tdsamt = $("#TDSAMT").val();
        if (tdsamt != "") { tdsamt = parseFloat(tdsamt); } else { tdsamt = parseFloat(0); }

        var ADVAMT = document.getElementById("ADVADJ").value;
        if (ADVAMT == "") { ADVAMT = parseFloat(0); } else { ADVAMT = parseFloat(ADVAMT) }

        var netamt = parseFloat(blamt) - parseFloat(tdsamt) - parseFloat(ADVAMT);
        $("#NETAMT").val(parseFloat(netamt).toFixed(2));

    }
</script>@*maintab calculation*@
<script>
    function changeBARGENTYPE() {
        debugger;
        var BARGENTYPE = $("#BARGENTYPE").val();
        if (BARGENTYPE == "C") {
            $("#divImageUpload").hide();
        }
        else if (BARGENTYPE == "E") {
            $("#divImageUpload").show();
        }
        return 0;
    }
    function UploadBarnoImage(i) {
        debugger;
        var ImageDesc = $('#ImageDesc').val();
        if (document.getElementById("ImageName").value == "") return;
        var OpenImageModal = $('#OpenImageModal_' + i).html(); var actt = "";
        if (OpenImageModal == "") {
            OpenImageModal = 1; actt = "active"; $("#div_carousel_inner").html('');
        } else {
            OpenImageModal = parseInt(OpenImageModal) + 1;
            actt = "";
        }
        $('#OpenImageModal_' + i).html(OpenImageModal);
        $.ajax({
            type: 'POST',
            url: "@Url.Action("UploadImages", PageControllerName )",
            beforesend: $("#WaitingMode").show(),
            data: "ImageStr=" + $('#ImageStr').val() + "&ImageName=" + $('#ImageName').val() + "&ImageDesc=" + ImageDesc,
            success: function (result) {
                $("#WaitingMode").hide(); var newid = '';
                if ($("#B_BarImages_" + i).val() != "") {
                    newid = $("#B_BarImages_" + i).val() + String.fromCharCode(179) + (result.split('/')[2] + '~' + ImageDesc);
                }
                else {
                    newid = (result.split('/')[2] + '~' + ImageDesc);
                }
                $("#B_BarImages_" + i).val(newid);
                //var htm = '';
                //htm += '<div class="item ' + actt + '">';
                //htm += '    <img src="' + result + '"  alt="Img Not Found" style="width:100%;">';
                //htm += '    <span class="carousel-caption">';
                //htm += '    <p> ' + ImageDesc + ' </p>';
                //htm += '    </span>';
                //htm += '</div>';
                //$("#div_carousel_inner").append(htm);

                //$('.carousel').carousel(); // $("#carousel").carousel();
                //htm += '<div class="col-lg-4" id="' + id + '">';
                //htm += '       <div class="thumbnail">';
                //htm += '           <button type="button" style="position:absolute;top:5px;right:11px;padding:0px 5px;cursor:pointer;border-radius:10px;" class="btn-danger" onclick= deleteBarImages("' + id + '")>X</button>';
                //htm += '           <a href="' + result + '" target="_blank">';
                //htm += '                <img src="' + result + '" alt="" style="width:100%">';
                //htm += '                <div class="caption">';
                //htm += '                   ' + ImageDesc;
                //htm += '          </div>';
                //htm += '      </a>';
                //htm += '  </div>';
                //htm += '</div>';
                //$("#divUploadImage").append(htm);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function deleteBarImages() {
        debugger;
        var ActiveBarRowIndex = $('#ActiveBarRowIndex').val();
        var id = $("#div_carousel_inner div.active").attr('id')
        var arr = $("#B_BarImages_" + ActiveBarRowIndex).val().split(String.fromCharCode(179)); var deleteindex = 0;
        $.each(arr, function (index, value) {
            var divid = (value.split('~')[0]).split('.')[0];
            if (id == divid) {
                deleteindex = index;
            }
        });
        arr.splice(deleteindex, 1);
        $("#" + id).remove();
        var newimg = arr.join(String.fromCharCode(179));
        $("#B_BarImages_" + ActiveBarRowIndex).val(newimg);
        $("#OpenImageModal_" + ActiveBarRowIndex).html(arr.length);

    }
    function T_OUTRECPROCESS_FillImageModal(index) {
        debugger;
        //var OpenImageModal =
        $('#ActiveBarRowIndex').val(index);
        var actt = ""; $("#div_carousel_inner").html('');
        var arr = $("#B_BarImages_" + index).val();
        arr = arr.split(String.fromCharCode(179));
        $.each(arr, function (index, value) {
            var imgname = (value.split('~')[0]);
            var id = (imgname).split('.')[0];
            var ImageDesc = (value.split('~')[1]);
            var htm = ''; if (index == 0) { actt = "active"; } else { actt = ""; }
            htm += '<div id="' + id + '" class="item ' + actt + '">';
            htm += '    <img src="/UploadDocuments/' + imgname + '"  alt="Img Not Found" style="width:100%;">';
            htm += '    <span class="carousel-caption">';
            htm += '    <p> ' + ImageDesc + ' </p>';
            htm += '    </span>';
            htm += '</div>';
            $("#div_carousel_inner").append(htm);
        });
    }
    function fileTypeCheck(id) {
        var fileUpload = $(id).get(0);
        var filesSelected = fileUpload.files;
        if (filesSelected.length > 0) {
            var fileToLoad = filesSelected[0];
            document.getElementById("ImageName").value = fileToLoad.name;
            var fileReader = new FileReader();
            fileReader.onload = function (fileLoadedEvent) {
                document.getElementById("ImageStr").value = fileLoadedEvent.target.result;
            };
            fileReader.readAsDataURL(fileToLoad);
        }
    }
</script>@*bar image*@
<script>
    function UpdateTaxPer() {
        debugger;
        var DefaultAction = $("#DefaultAction").val();
        if (DefaultAction == "V") return true;
        var IGST_PER = 0; var CGST_PER = 0; var SGST_PER = 0; var CESS_PER = 0; var DUTY_PER = 0;
        var GridRowMain = $("#_T_OUTRECPROCESS_Detail_Grid > tbody > tr").length;
        for (i = 0; i <= GridRowMain - 1; i++) {
            var IGST = 0, CGST = 0, SGST = 0, CESS = 0, DUTY = 0;

            IGST = parseFloat($("#D_IGSTPER_" + i).val()).toFixed(2);
            CGST = parseFloat($("#D_CGSTPER_" + i).val()).toFixed(2);
            SGST = parseFloat($("#D_SGSTPER_" + i).val()).toFixed(2);
            CESS = parseFloat($("#D_CESSPER_" + i).val()).toFixed(2);


            if (IGST > IGST_PER) {
                IGST_PER = IGST;
            }
            if (CGST > CGST_PER) {
                CGST_PER = CGST;
            }
            if (SGST > SGST_PER) {
                SGST_PER = SGST;
            }
            if (CESS > CESS_PER) {
                CESS_PER = CESS;
            }
            if (DUTY > DUTY_PER) {
                DUTY_PER = DUTY;
            }
        }
        var GridRowMain = $("#AMOUNT_GRID > tbody > tr").length;
        for (i = 0; i <= GridRowMain - 1; i++) {
            document.getElementById("AIGSTPER_" + i).value = IGST_PER;
            document.getElementById("ACGSTPER_" + i).value = CGST_PER;
            document.getElementById("ASGSTPER_" + i).value = SGST_PER;
            document.getElementById("ACESSPER_" + i).value = CESS_PER;
            document.getElementById("ADUTYPER_" + i).value = DUTY_PER;
        }

    }
</script>
<script>
    function DeleteRow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivProgramme").animate({ marginTop: '0px' }, 50);
                $("#partialdivProgramme").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function AddDOCrow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddDOCRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '-10px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeleteDOCrow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteDOCRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '0px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function pageprinting() {
        var ty = $("#DOCCD").val();
        $.ajax({
            type: 'get',
            url: "@Url.Action("Print", PageControllerName)",
            data: "DOCNO=" + $("#DOCNO").val() + "&DOC_CD=" + $("#DOCCD").val() + "&DOCDT=" + $("#DOCDT").val(),
            success: function (result) {
                window.open("@Url.Action("Rep_OrdPrint", "Rep_OrdPrint", new { US = Model.UNQSNO_ENCRYPTED })", "_blank")
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
@using (Html.BeginForm())
{
    if (Model.DefaultView == true)
    {
        @Html.HiddenFor(a => Model.maxdate)
        @Html.HiddenFor(a => Model.mindate)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" id="btnSave" value="@Url.Action("SAVE", PageControllerName)" />
        <input type="hidden" id="srhpnl" value="@Url.Action("SearchPannelData", PageControllerName)" />
        <input type="hidden" id="partylinkcd" value="D" />
            <input type="hidden" id="agentlinkcd" value="A" />
            <input type="hidden" id="courierlinkcd" value="U" />
            <input type="hidden" id="trnsportlinkcd" value="T" />
            <input type="hidden" id="itgrptype" value="'A','C','L','P','Y'" />
            <input type="hidden" id="bardatachng" value="Y" />
            @Html.HiddenFor(s => s.DefaultAction)
            @Html.HiddenFor(a => a.T_TXN.AUTONO, new { id = "AUTONO" })
            @Html.HiddenFor(a => a.T_TXN.DOCNO)
            @Html.HiddenFor(a => a.T_CNTRL_HDR.MNTHCD)
            @Html.HiddenFor(a => a.T_CNTRL_HDR.EMD_NO)
            <div class="form-horizontal">
                @if (Model.DefaultAction == "V")
                {
                    @Html.Partial("_FilteredSearch")
                }
                <div class="row" style="margin-top: 5px;">
                    <div class="row">
                        <div class="col-md-5" style="margin-top: 6px;">
                            <div class="editor-label">
                                @Html.Label("", "Document Code")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="editor-field">
                                @if (Model.DefaultAction == "A")
                                {
                                    @Html.DropDownListFor(model => model.T_TXN.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", @onchange = "ChangeDoctype();" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.T_TXN.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", style = "pointer-events:none;background-color:#eee" })
                                }
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Document Date")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXN.DOCDT, new { htmlAttributes = new { @class = "form-control", id = "DOCDT", onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy", maxlength = 10 } })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Document No.")
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXN.DOCNO, new { htmlAttributes = new { @class = "form-control", id = "DOCNO", @placeholder = "Doc. No.", maxlength = 6, @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Job")
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXN.JOBCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "JOBCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetJobDetails", PageControllerName) + "','Job Details','JOBCD','JOBCD=jobcd=1/JOBNM=jobnm=0')", onblur = "GetHelpBlur('" + @Url.Action("GetJobDetails", PageControllerName) + "','Job Details','JOBCD','JOBCD=jobcd=1/JOBNM=jobnm=0');", @placeholder = "Job Code", maxlength = 2 } })
                                <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetJobDetails", PageControllerName)','Job Details','JOBCD','JOBCD=jobcd=1/JOBNM=jobnm=0')" />
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.JOBNM, new { htmlAttributes = new { @class = "form-control", id = "JOBNM", maxlength = 45, @title = "Only for View", @placeholder = "Job Name", @readonly = "readonly", tabindex = "-1" } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-5">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Party Code")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXN.SLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetPartyDetails", PageControllerName) + "','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=slarea=3/GSTNO=gstno=2/TAXGRPCD=TAXGRPCD/PRCCD=PRCCD/DUEDAYS=crdays','DOCDT')", onblur = "GetHelpBlur('" + @Url.Action("GetPartyDetails", PageControllerName) + "','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=slarea=3/GSTNO=gstno=2/TAXGRPCD=TAXGRPCD/PRCCD=PRCCD/DUEDAYS=crdays','DOCDT');", @placeholder = "Code", maxlength = 8 } })
                                <img src="~/Image/search.png" id="PARTY_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetPartyDetails", PageControllerName)','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=slarea=3/GSTNO=gstno=2/TAXGRPCD=TAXGRPCD/PRCCD=PRCCD/DUEDAYS=crdays','DOCDT')" />
                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.SLNM, new { htmlAttributes = new { @class = "form-control", id = "SLNM", maxlength = 45, @title = "Only for View", @placeholder = "Party Name", @readonly = "readonly", tabindex = "-1" } })
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.DISTRICT, new { htmlAttributes = new { @class = "form-control", id = "DISTRICT", @title = "Only for View", @placeholder = "District", @readonly = "readonly", tabindex = "-1" } })
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.GSTNO, new { htmlAttributes = new { @class = "form-control", id = "GSTNO", @title = "Only for View", @placeholder = "GST No.", @readonly = "readonly", tabindex = "-1" } })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXNOTH.TAXGRPCD, new { htmlAttributes = new { @class = "form-control", id = "TAXGRPCD", @title = "Tax Group Code", @placeholder = "Tax Group Code", @readonly = "readonly", tabindex = "-1" } })
                                @Html.HiddenFor(model => Model.T_TXNOTH.PRCCD, new { htmlAttributes = new { @class = "form-control", id = "PRCCD" } })


                            </div>
                        </div>
                        <div class="col-md-1" style="width:auto;">
                            <div class="editor-label" style="margin-top: 6px;">
                                @Html.Label("", "Due Days")
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXN.DUEDAYS, new { htmlAttributes = new { @class = "form-control", id = "DUEDAYS", maxlength = 3, @placeholder = "Due Days" } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-5">
                            <div class="editor-field" style="margin-top: 6px;">
                                @Html.Label("", "Party Bill No")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-10">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXN.PREFNO, new { htmlAttributes = new { @class = "form-control", id = "PREFNO", maxlength = 16, @placeholder = "PREFNO" } })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-field" style="margin-top: 6px;">
                                @Html.Label("", "Party Bill Date")
                                <b style="color:Red;">*</b>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-field">
                                @Html.EditorFor(model => model.T_TXN.PREFDT, new { htmlAttributes = new { @class = "form-control", id = "PREFDT", onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy", maxlength = 10 } })
                            </div>
                        </div>
                        @if (Model.DefaultAction != "V")
                    {
                            <div class="col-md-8">
                                <input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;" id="PendProgramme" value="Get Pending Programme" title="Click to Get Pending Programme" onclick="PendingProgramme()" />
                            </div>
                        }

                    </div>
                </div>
                <div class="row" style="margin-top:5px;">
                    <ul class="nav nav-tabs">
                        <li id="Main_LI4" class="active"><a data-toggle="tab" href="#Main" accesskey="M">Main(M)</a></li>
                        <li id="Programme_LI" class=""><a data-toggle="tab" href="#Programme" accesskey="P">Programme(P)</a></li>
                        <li id="Receive_LI" class=""><a data-toggle="tab" href="#Receive" accesskey="V">Receive(V)</a></li>
                        <li id="Detail_LI" class=""><a data-toggle="tab" href="#DetailTab" accesskey="L">Detail(L)</a></li>
                        <li id="Amounts_LI" class=""><a data-toggle="tab" href="#FreightOthers" accesskey="H" onclick="UpdateTaxPer();">Amount(H)</a></li>
                        <li id="Transport_LI" class=""><a data-toggle="tab" href="#Transport" accesskey="T">Transport(T)</a></li>
                        <li id="Remarks_LI" class=""><a data-toggle="tab" href="#Remarks" accesskey="R">Remarks(R)</a></li>
                        <li id="Documents_LI" class=""><a data-toggle="tab" href="#Documents" accesskey="U">Documents(U)</a></li>
                    </ul>
                    <div class="tab-content">
                        <div id="Main" class="tab-pane fade in active" style="margin-top: 5px;">
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Godown")
                                        <b style="color:Red;">*</b>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXN.GOCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "GOCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetGodownDetails", PageControllerName) + "','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetGodownDetails", PageControllerName) + "','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0');", @placeholder = "Code", maxlength = 6 } })
                                        <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetGodownDetails", PageControllerName)','Godown Details','GOCD','GOCD=GOCD=1/GONM=GONM=0')" />
                                    </div>
                                </div>
                                <div class="col-md-9">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.GONM, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @title = "Godown Name", @placeholder = "Godown Name", @readonly = "readonly" } })
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Mtrl Job Code")
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.MTRLJOBCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "MTRLJOBCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetMaterialJobDetails", PageControllerName) + "','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0/MTBARCODE=MTBARCODE')", onblur = "GetHelpBlur('" + @Url.Action("GetMaterialJobDetails", PageControllerName) + "','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0/MTBARCODE=MTBARCODE');", @placeholder = "Code", maxlength = 2 } })
                                        <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetMaterialJobDetails", PageControllerName)','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0/MTBARCODE=MTBARCODE')" />
                                    </div>
                                </div>
                                <div class="col-md-9">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.MTRLJOBNM, new { htmlAttributes = new { @class = "form-control", @TabIndex = -1, @title = "Mtrl Job Name", @placeholder = "Mtrl Job Name", @readonly = "readonly" } })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-5" style="margin-top: 6px;">
                                    <div class="editor-label">
                                        @Html.Label("", "Barcode")
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="editor-field">
                                        @Html.DropDownListFor(model => model.T_TXN.BARGENTYPE, new SelectList(Model.BARGEN_TYPE, "Value", "Text"), new { @class = "form-control", id = "BARGENTYPE", onchange = "changeBARGENTYPE()" })
                                    </div>
                                </div>

                            </div>


                            <div class="row">
                                <div class="col-md-5">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Total Taxable")
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.TOTTAXVAL, new { htmlAttributes = new { @class = "form-control", id = "TOTTAXVAL", @style = "text-align: right;", @TabIndex = -1, @placeholder = "Taxable Value", @readonly = "readonly" } })
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Total Qnty")
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.TOTQNTY, new { htmlAttributes = new { @class = "form-control", id = "TOTQNTY", @style = "text-align: right;", @TabIndex = -1, @placeholder = "Quantity", @readonly = "readonly" } })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Total Nos.")
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.TOTNOS, new { htmlAttributes = new { @class = "form-control", id = "TOTNOS", @style = "text-align: right;", @TabIndex = -1, @placeholder = "Qnty Nos", @readonly = "readonly" } })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Reverse Charge")
                                    </div>
                                </div>
                                <div class="col-md-7" style="width:auto;">
                                    <div class="editor-field">
                                        @Html.DropDownListFor(model => Model.T_TXN.REVCHRG, new SelectList(Model.Reverse_Charge, "Value", "Text", Model.T_TXN.REVCHRG), "No", new { @class = "form-control", id = "REVCHRG", onchange = "ReverceCharges();" })
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="display:none;">
                                <div class="col-md-5">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Rounded off")
                                    </div>
                                </div>
                                <div class="col-md-1" style="margin-right: -41px;">
                                    <div class="editor-field" style="margin-top:6px;">
                                        @Html.CheckBoxFor(model => model.RoundOff, new { id = "RoundOff", onclick = "BillAmountCalculate();" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXN.ROAMT, new { htmlAttributes = new { @class = "form-control", id = "ROAMT", maxlength = 6, @TabIndex = -1, @placeholder = "Rounded off", @readonly = "readonly" } })
                                    </div>
                                </div>
                                <div class="col-md-1" style="width:auto;">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Bill Amount")
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXN.BLAMT, new { htmlAttributes = new { @class = "form-control", id = "BLAMT", maxlength = 14, @TabIndex = -1, @placeholder = "Bill Amount", @readonly = "readonly", @style = "font-weight:bold;font-size:15px;text-align:right" } })
                                    </div>
                                </div>
                                <div class="col-md-1" style="width:auto;">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Adv. Amt")
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXN.ADVADJ, new { htmlAttributes = new { @class = "form-control", id = "ADVADJ", maxlength = 12, @placeholder = "ADVADJ", @style = "text-align: right;", @onkeypress = "return numericOnly(this,2);", onblur = "BillAmountCalculate();" } })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Net Payable")
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.NETAMT, new { htmlAttributes = new { @class = "form-control", id = "NETAMT", @TabIndex = -1, @placeholder = "Net Payable", @readonly = "readonly" } })

                                        @Html.HiddenFor(model => model.T_TXNOTH.TDSHD, new { id = "TDSHD" })
                                        @Html.HiddenFor(model => model.TDSNM, new { id = "TDSNM" })
                                        @Html.HiddenFor(model => model.T_TXNOTH.TDSON, new { id = "TDSON" })
                                        @Html.HiddenFor(model => model.T_TXNOTH.TDSPER, new { id = "TDSPER" })
                                        @Html.HiddenFor(model => model.T_TXNOTH.TDSAMT, new { id = "TDSAMT" })
                                        @Html.HiddenFor(model => model.TDSROUNDCAL, new { id = "TDSROUNDCAL" })
                                        @Html.HiddenFor(model => model.TDSCALCON, new { id = "TDSCALCON" })
                                    </div>
                                </div>
                            </div>
                            @*<div class="row">
                                    <div class="col-md-5">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "TDS Head")
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.T_TXNOTH.TDSHD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "TDSHD", onkeyup = "GetHelp_WithId('" + @Url.Action("GetTDSDetails", PageControllerName) + "','TDSHD/TDSNM/TDSPER','1/0/2','TDS Details','TDSHD','DOCDT/SLCD')", onblur = "SelectTDSCode(this.value,TDSHD,TDSNM,TDSPER);", @placeholder = "Code", maxlength = 3 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onclick="GetHelp_WithId('@Url.Action("GetTDSDetails", PageControllerName)','TDSHD/TDSNM/TDSPER','1/0/2','TDS Details','TDSHD','DOCDT/SLCD')" />
                                        </div>
                                    </div>
                                    <div class="col-md-9">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.TDSNM, new { htmlAttributes = new { @class = "form-control", id = "TDSNM", @placeholder = "TDS Name", @TabIndex = -1, @readonly = "readonly", @title = "Only for View" } })
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "TDS On")
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="editor-field" style="margin-top:6px;">
                                            @Html.EditorFor(model => model.T_TXNOTH.TDSON, new { htmlAttributes = new { @class = "form-control", id = "TDSON", onblur = "BillAmountCalculate();", @placeholder = "TDS On", maxlength = 15, @onkeypress = "return numericOnly(this,2);" } })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "TDS %")
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field" style="margin-top:6px;">
                                            @Html.EditorFor(model => model.T_TXNOTH.TDSPER, new { htmlAttributes = new { @class = "form-control", id = "TDSPER", onblur = "BillAmountCalculate();", @placeholder = "TDS Per", maxlength = 10, @onkeypress = "return numericOnly(this,2);" } })
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "TDS Amount")
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.T_TXNOTH.TDSAMT, new { htmlAttributes = new { @class = "form-control", id = "TDSAMT", @placeholder = "TDS Amount", maxlength = 15, @onkeypress = "return numericOnly(this,2);", @TabIndex = -1, @readonly = "readonly" } })
                                            @Html.HiddenFor(model => model.TDSROUNDCAL, new { id = "TDSROUNDCAL" })
                                            @Html.HiddenFor(model => model.TDSCALCON, new { id = "TDSCALCON" })
                                        </div>
                                    </div>
                                </div>*@
                        </div>
                        <div id="Programme" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                            @if (Model.DefaultAction != "V")
                            {
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "Bar Code No")
                                            <b style="color:Red;">*</b>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.PROGUNIQNO, new { htmlAttributes = new { @class = "form-control textbox_image", id = "PROGUNIQNO", onkeydown = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','PROGUNIQNO','PROGUNIQNO=proguniqno=2/BARCODE=BARNO=3/PROGAUTOSLNO=PROGAUTOSLNO=9','PROGAUTOSLNO','Y')", onblur = "GetBarnoDetails(this.value);", @placeholder = "Bar Code", maxlength = 25 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetBarCodeDetails", PageControllerName)','Bar Code Details','PROGUNIQNO','PROGUNIQNO=proguniqno=2/BARCODE=BARNO=3/PROGAUTOSLNO=PROGAUTOSLNO=9','PROGAUTOSLNO','Y')" />
                                            @Html.HiddenFor(model => model.PROGAUTOSLNO, new { id = "PROGAUTOSLNO" })
                                            @Html.HiddenFor(model => model.BARCODE, new { id = "BARCODE" })
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                                <div>
                                    <div id="partialdivProgramme" style="margin-top:0px;">
                                        @Html.Partial("_T_OUTRECPROCESS_Programme")
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div id="Receive" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                            <div class="row">
                                <input type="hidden" id="ImageName" value="" />
                                <input type="hidden" id="ImageStr" value="" />
                                <div id="divImageUpload" style="display:none;">
                                    <div class="col-md-1">
                                        <div class="editor-label" style="margin-top: 5px;">
                                            @Html.Label("", "Image Desc")
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="editor-label" style="margin-top: 0px;">
                                            <input type="text" id="ImageDesc" value="" class="form-control" placeholder="Description" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="editor-label" style="margin-top: 0px;">
                                            <input type="file" class="form-control" name="Imageupload" accept="image/*" onchange="fileTypeCheck(this);" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;width:fit-content">
                                <div>
                                    <div id="partialdivReceive" style="margin-top:0px;">
                                        @Html.Partial("_T_OUTRECPROCESS_Receive")
                                    </div>
                                </div>
                            </div>
                            @if (Model.DefaultAction != "V")
                            {
                                <div class="row">
                                    <div class="col-md-1" style="width:auto;">
                                        <input type="button" class="btn btn-info" style="margin-top: 2px;padding: 2px 7px 1px 7px;" name="FillDetail" id="FillDetail" accesskey="K" value="Finalise Detail Data(Alt+K)" title="Click to Finalise Data in Details Tab" onclick="Fill_DetailData()" />
                                    </div>
                                </div>
                            }
                        </div>

                        <div id="DetailTab" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                            <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                                <div>
                                    <div id="partialdivDetail" style="margin-top:0px;">
                                        @Html.Partial("_T_OUTRECPROCESS_Detail")
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="FreightOthers" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                            <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                                <div>
                                    <div id="partialdivAmounts" style="margin-top:0px;">
                                        @Html.Partial("_T_OUTRECPROCESS_Amount")
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="Transport" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Transporter")
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXNTRANS.TRANSLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "TRANSLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Transporter Details','TRANSLCD','TRANSLCD=slcd=1/TRANSLNM=slnm=0','trnsportlinkcd')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Transporter Details','TRANSLCD','TRANSLCD=slcd=1/TRANSLNM=slnm=0','trnsportlinkcd');", @placeholder = "Code", maxlength = 8 } })
                                        <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Transporter Details','TRANSLCD','TRANSLCD=slcd=1/TRANSLNM=slnm=0','trnsportlinkcd')" />
                                    </div>
                                </div>
                                <div class="col-md-10">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.TRANSLNM, new { htmlAttributes = new { @class = "form-control", id = "TRANSLNM", maxlength = 45, @TabIndex = -1, @placeholder = "Transporter Name", @readonly = "readonly" } })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Eway Bill Number")
                                    </div>
                                </div>
                                <div class="col-md-7">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXNTRANS.EWAYBILLNO, new { htmlAttributes = new { @class = "form-control", id = "EWAYBILLNO", maxlength = 20, @placeholder = "Eway Bill Number" } })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "LR Number")
                                    </div>
                                </div>
                                <div class="col-md-7">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXNTRANS.LRNO, new { htmlAttributes = new { @class = "form-control", id = "LRNO", maxlength = 15, @placeholder = "LR Number" } })
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "LR Date")
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXNTRANS.LRDT, new { htmlAttributes = new { @class = "form-control", id = "LRDT", maxlength = 10, onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy" } })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Vechicle Number")
                                    </div>
                                </div>
                                <div class="col-md-7">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXNTRANS.LORRYNO, new { htmlAttributes = new { @class = "form-control", id = "LORRYNO", maxlength = 16, @placeholder = "Vechicle Number" } })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Gross Weight")
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXNTRANS.GRWT, new { htmlAttributes = new { @class = "form-control", id = "GRWT", onblur = "CalulateTareWt(GRWT,NTWT,TRWT);", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "Gross Weight" } })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Net Weight")
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXNTRANS.NTWT, new { htmlAttributes = new { @class = "form-control", id = "NTWT", onblur = "CalulateTareWt(GRWT,NTWT,TRWT);", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "Net Weight" } })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Tare Weight")
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXNTRANS.TRWT, new { htmlAttributes = new { @class = "form-control", id = "TRWT", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "Tare Weight", @readonly = "readonly" } })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "Cases Nos.")
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXNOTH.CASENOS, new { htmlAttributes = new { @class = "form-control", id = "CASENOS", maxlength = 500, @placeholder = "Cases Nos" } })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="editor-label" style="margin-top: 6px;">
                                        @Html.Label("", "No of Cases")
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.T_TXNOTH.NOOFCASES, new { htmlAttributes = new { @class = "form-control", id = "NOOFCASES", @onkeypress = "return numericOnly(this,4);", maxlength = 12, @placeholder = "No of Cases" } })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="Remarks" class="tab-pane fade">
                            <div class="row">
                                <div>
                                    <div id="partialdivRemarks">
                                        @Html.Partial("_TRANSACTIONREMARKS")
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="Documents" class="tab-pane fade" style="margin-top: 10px;">
                            <div class="row" style="background-color:#c4b9b9;border:5px groove;width:fit-content;">
                                <div>
                                    <div id="partialdivDocument" style="margin-top:0px;">
                                        @Html.Partial("_UPLOADDOCUMENTS")
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*<div id="Amounts" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                                <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                                    <div>
                                        <div id="partialdivAmounts" style="margin-top:0px;">
                                            @Html.Partial("_T_SALE_AMOUNT")
                                        </div>
                                    </div>
                                </div>
                            </div>*@

                        @*<div id="SalesBillMade" class="tab-pane fade" style="margin-top: 10px;">

                            </div>*@
                    </div>

                </div>
            </div>

            <div class="container">
                <!-- Modal -->
                <div class="modal fade" id="ViewImageModal" role="dialog">
                    <div class="modal-dialog modal-md">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">Image Preview</h4>
                            </div>
                            <div class="modal-body">
                                <div id="myCarousel" class="carousel" data-ride="carousel">
                                    <div class="carousel-inner" id="div_carousel_inner">
                                        <div class="item active">
                                            <img src="" alt="Los Angeles" style="width:100%;">
                                        </div>
                                        <div class="item">
                                            <img src="" alt="Chicago" style="width:100%;">
                                        </div>
                                    </div>
                                    <!-- Left and right controls -->
                                    <a class="left  carousel-control arrow-left" id="prev">
                                        <span class="glyphicon glyphicon-chevron-left"></span>
                                    </a>
                                    <a class="right  carousel-control arrow-right" id="next">
                                        <span class="glyphicon glyphicon-chevron-right"></span>
                                    </a>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="pull-left">
                                            <input type="hidden" id="ActiveBarRowIndex" />
                                            <input type="hidden" id="BarImages" />
                                            <button type="button" class="btn btn-danger" onclick="deleteBarImages()"><span class="glyphicon glyphicon-trash"></span></button>
                                        </div>
                                    </div>
                                    <div class="col-sm-6"><button type="button" class="btn btn-default" data-dismiss="modal">Close</button></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
    }
    else
    {
        @ViewBag.ErrorMessage
    }

    <div class="container">
        <div id="helpDIV">

        </div>
    </div>
}
