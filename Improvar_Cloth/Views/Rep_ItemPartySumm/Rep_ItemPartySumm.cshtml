@model Improvar.ViewModels.PartyitemSummReport
@{
    ViewBag.Title = "Design Summary";
    Layout = "~/Views/Shared/_ReportLayout.cshtml";
    string PageControllerName = "Rep_ItemPartySumm";
}
<script src="~/Scripts/jquery.min.js"></script>
<link rel="stylesheet" href="~/Content/jquery.stickytable.css">
<link rel="stylesheet" media="all" href="~/Content/main_layout.css?v=105" />
<script src="~/Scripts/Cloth.js?Ver=@System.DateTime.Now"></script>
<style>
    #outer {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.70);
    }

    #inner {
        /*width: 50%;
                height: 50%;*/
        top: 31%;
        margin: 0 auto;
        position: relative;
        background-color: #084267;
        border-radius: 15px;
        border: 4px solid #86abd8;
    }

    #outerP {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.70);
        display: none;
    }

    #innerP {
        /*width: 50%;
                height: 50%;*/
        top: 26%;
        margin: 0 auto;
        position: relative;
        background-color: #f8fbb3;
        border-radius: 15px;
        border: 4px solid #86abd8;
    }

    #outerS {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.70);
        display: none;
    }

    #innerS {
        /*width: 50%;
                height: 50%;*/
        top: 26%;
        margin: 0 auto;
        position: relative;
        background-color: #f8fbb3;
        border-radius: 15px;
        border: 4px solid #86abd8;
    }

    #outerR {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.70);
        display: none;
    }

    #innerR {
        /*width: 50%;
                height: 50%;*/
        top: 26%;
        margin: 0 auto;
        position: relative;
        background-color: #f8fbb3;
        border-radius: 15px;
        border: 4px solid #86abd8;
    }

    #outerT {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.70);
        display: none;
    }

    #innerT {
        /*width: 50%;
                height: 50%;*/
        top: 26%;
        margin: 0 auto;
        position: relative;
        background-color: #f8fbb3;
        border-radius: 15px;
        border: 4px solid #86abd8;
    }

    .centered_imageDIV {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .container_imageDIV {
        position: relative;
        text-align: center;
        color: white;
    }

    .active {
        background-color: #000;
        color: #fff;
    }

    .tabtitle {
        float: right;
        height: 30px;
        background: linear-gradient(#86abd8,#244976);
        width: 80px;
        color: white;
        font-size: 11px;
        font-weight: bold;
        vertical-align: central;
        text-align: center;
        border-bottom-left-radius: 15px;
        border-top-right-radius: 10px;
        line-height: 2;
    }

    .tabtitle1 {
        float: right;
        height: 30px;
        background: linear-gradient(#86abd8,#244976);
        width: 150px;
        color: white;
        font-size: 11px;
        font-weight: bold;
        vertical-align: central;
        text-align: center;
        border-bottom-left-radius: 15px;
        line-height: 2;
    }

    .motherdiv {
        width: 40%;
        margin-top: 20px;
    }

    .tabletd {
        padding-left: 5px;
        width: 70%;
        font-size: 12px;
    }

    .tabletd1 {
        padding-left: 5px;
        width: 30%;
        border-right: 1px solid white;
        font-size: 12px;
    }

    .tabletr {
        height: 30px;
    }

    @@media (max-width: 775px) {
        .motherdiv {
            width: 98%;
            padding-left: 10px;
        }

        .tabletd {
            padding-left: 5px;
            width: 70%;
            font-size: 10px;
            margin-top: 6px;
        }

        .tabletd1 {
            padding-left: 5px;
            width: 30%;
            border-right: 1px solid white;
            font-size: 10px;
            margin-top: 6px;
        }

        .tabletr {
            height: 30px;
        }
    }

    }
</style>
<style>
    /* The container */
    .containerCK {
        display: block;
        position: relative;
        padding-left: 30px;
        margin-bottom: 1px;
        cursor: pointer;
        font-size: 17px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        /* Hide the browser's default radio button */
        .containerCK input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

    /* Create a custom radio button */
    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 20px;
        width: 20px;
        background-color: #eee;
        border-radius: 50%;
    }

    /* On mouse-over, add a grey background color */
    .containerCK:hover input ~ .checkmark {
        background-color: #ccc;
    }

    /* When the radio button is checked, add a blue background */
    .containerCK input:checked ~ .checkmark {
        background-color: #2196F3;
    }

    /* Create the indicator (the dot/circle - hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the indicator (dot/circle) when checked */
    .containerCK input:checked ~ .checkmark:after {
        display: block;
    }

    /* Style the indicator (dot/circle) */
    .containerCK .checkmark:after {
        top: 6px;
        left: 6px;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background: white;
    }
</style>
<style>
    .menu {
        position: absolute;
        width: 200px;
        padding: 2px;
        margin: 0;
        border: 1px solid #bbb;
        background: #eee;
        background: -webkit-linear-gradient(to bottom, #fff 0%, #e5e5e5 100px, #e5e5e5 100%);
        background: linear-gradient(to bottom, #fff 0%, #e5e5e5 100px, #e5e5e5 100%);
        z-index: 100;
        border-radius: 3px;
        box-shadow: 1px 1px 4px rgba(0,0,0,.2);
        opacity: 0;
        -webkit-transform: translate(0, 15px) scale(.95);
        transform: translate(0, 15px) scale(.95);
        transition: transform 0.1s ease-out, opacity 0.1s ease-out;
        pointer-events: none;
    }

    .menu1 {
        position: absolute;
        width: 220px;
        padding: 2px;
        margin: 0;
        border: 1px solid #bbb;
        background: #eee;
        background: -webkit-linear-gradient(to bottom, #fff 0%, #e5e5e5 100px, #e5e5e5 100%);
        background: linear-gradient(to bottom, #fff 0%, #e5e5e5 100px, #e5e5e5 100%);
        z-index: 100;
        border-radius: 3px;
        box-shadow: 1px 1px 4px rgba(0,0,0,.2);
        opacity: 0;
        -webkit-transform: translate(0, 15px) scale(.95);
        transform: translate(0, 15px) scale(.95);
        transition: transform 0.1s ease-out, opacity 0.1s ease-out;
        pointer-events: none;
    }

    .menu2 {
        position: absolute;
        width: 220px;
        padding: 2px;
        margin: 0;
        border: 1px solid #bbb;
        background: #eee;
        background: -webkit-linear-gradient(to bottom, #fff 0%, #e5e5e5 100px, #e5e5e5 100%);
        background: linear-gradient(to bottom, #fff 0%, #e5e5e5 100px, #e5e5e5 100%);
        z-index: 100;
        border-radius: 3px;
        box-shadow: 1px 1px 4px rgba(0,0,0,.2);
        opacity: 0;
        -webkit-transform: translate(0, 15px) scale(.95);
        transform: translate(0, 15px) scale(.95);
        transition: transform 0.1s ease-out, opacity 0.1s ease-out;
        pointer-events: none;
    }

    .menu-item {
        display: block;
        position: relative;
        margin: 0;
        padding: 0;
        white-space: nowrap;
    }

    .menu-btn {
        background: none;
        line-height: normal;
        overflow: visible;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        display: block;
        width: 100%;
        color: #444;
        font-family: 'Roboto', sans-serif;
        font-size: 13px;
        text-align: left;
        cursor: pointer;
        border: 1px solid transparent;
        white-space: nowrap;
        padding: 6px 8px;
        border-radius: 3px;
    }

        .menu-btn::-moz-focus-inner, .menu-btn::-moz-focus-inner {
            border: 0;
            padding: 0;
        }

    .menu-text {
        margin-left: 25px;
    }

    .menu-btn .fa {
        position: absolute;
        left: 8px;
        top: 50%;
        -webkit-transform: translateY(-50%);
        transform: translateY(-50%);
    }

    .menu-item:hover > .menu-btn {
        color: #fff;
        outline: none;
        background-color: #2E3940;
        background: -webkit-linear-gradient(to bottom, #5D6D79, #2E3940);
        background: linear-gradient(to bottom, #5D6D79, #2E3940);
        border: 1px solid #2E3940;
    }

    .menu-item.disabled {
        opacity: .5;
        pointer-events: none;
    }

        .menu-item.disabled .menu-btn {
            cursor: default;
        }

    .menu-separator {
        display: block;
        margin: 7px 5px;
        height: 1px;
        border-bottom: 1px solid #fff;
        background-color: #aaa;
    }

    .menu-item.submenu::after {
        content: "";
        position: absolute;
        right: 6px;
        top: 50%;
        -webkit-transform: translateY(-50%);
        transform: translateY(-50%);
        border: 5px solid transparent;
        border-left-color: #808080;
    }

    .menu-item.submenu:hover::after {
        border-left-color: #fff;
    }

    .menu .menu {
        top: 4px;
        left: 99%;
    }

    .show-menu, .menu-item:hover > .menu {
        opacity: 1;
        -webkit-transform: translate(0, 0) scale(1);
        transform: translate(0, 0) scale(1);
        pointer-events: auto;
    }

    .menu-item:hover > .menu {
        -webkit-transition-delay: 100ms;
        transition-delay: 300ms;
    }
</style>
<style>
    /* ————————————————————–
                    Tree core styles
                  */
    .noselect {
        -webkit-touch-callout: none; /* iOS Safari */
        -webkit-user-select: none; /* Safari */
        -khtml-user-select: none; /* Konqueror HTML */
        -moz-user-select: none; /* Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
        user-select: none; /* Non-prefixed version, currently
                                      supported by Chrome and Opera */
    }

    .tree {
        margin: 1em;
    }

        .tree input {
            position: absolute;
            clip: rect(0, 0, 0, 0);
        }

            .tree input ~ ul {
                display: none;
            }

            .tree input:checked ~ ul {
                display: block;
            }

        /* ————————————————————–
                    Tree rows
                  */
        .tree li {
            line-height: 0.5;
            position: relative;
            padding: 0 0 1em 1em;
        }

        .tree ul li {
            padding: 1em 1em 0 1em;
        }

        .tree > li:last-child {
            padding-bottom: 0;
            top: 0px;
        }

        .tree ul, ol {
            margin-top: -5px;
            margin-left: -1px;
            /*margin-bottom: 10px;*/
        }

        .tree label {
            margin-bottom: -2px;
            margin-top: -2px;
        }
    /* ————————————————————–
                    Tree labels
                  */
    .tree_label {
        position: relative;
        display: inline-block;
        background-color: transparent;
        color: #000;
        font-weight: bold;
    }

    .default_label {
        position: relative;
        display: inline-block;
        background-color: transparent;
        color: #000;
        font-weight: bold;
        cursor: pointer;
        font-size: 10px;
    }

    label.tree_label {
        cursor: pointer;
    }

        label.tree_label:hover {
            color: #000;
        }

    /*span.tree_label:hover {
                  color: #fff;
              }*/

    span.tree_label {
        cursor: pointer;
        color: #080808;
        font-weight: bold;
    }

    /* ————————————————————–
                    Tree expanded icon
                  */
    label.tree_label:before {
        background: Red;
        color: #fff;
        position: relative;
        z-index: 1;
        float: left;
        margin: 0 1em 0 -2em;
        width: 1em;
        height: 1em;
        border-radius: 1em;
        content: '+';
        text-align: center;
        line-height: .9em;
    }

    :checked ~ label.tree_label:before {
        content: '–';
    }

    /* ————————————————————–
                    Tree branches
                  */
    .tree li:before {
        position: absolute;
        top: 2px;
        bottom: -5px;
        left: -.5em;
        display: block;
        width: 0;
        border-left: 1px solid #000;
        content: "";
    }

    .tree_label:after {
        position: absolute;
        top: 2px;
        left: -1.5em;
        display: block;
        height: 0.5em;
        width: 1em;
        border-bottom: 1px solid #000;
        border-left: 1px solid #000;
        border-radius: 0 0 0 .3em;
        content: '';
    }

    label.tree_label:after {
        border-bottom: 0;
    }

    :checked ~ label.tree_label:after {
        border-radius: 0 .3em 0 0;
        border-top: 1px solid #000;
        border-right: 1px solid #000;
        border-bottom: 0;
        border-left: 0;
        bottom: -2px;
        top: 0.5em;
        height: auto;
    }

    .tree li:last-child:before {
        height: 1em;
        bottom: auto;
    }

    .tree > li:last-child:before {
        display: none;
    }

    .tree_custom {
        display: block;
        background: #eee;
        padding: 1em;
        border-radius: 0.3em;
    }

    .menubutton {
        display: block;
        width: 22px;
        height: 2px;
        border-radius: 1px;
    }

    .div-sr {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0 0 0 0);
        border: 0;
    }

    .a {
        color: blue;
    }

    .fileimg {
        width: 16px;
        height: 16px;
        margin-bottom: -2px;
    }

    .groupimg {
        width: 24px;
        height: 17px;
        margin-bottom: 4px;
    }

    .highlight {
        background: red;
    }
</style>

<script>
    $(function () {
        $("#FDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true });
        $("#TDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true });
    });
</script>
<script>
    function SelectBARCODEDetail(id) {
        debugger;
        if (id == "") {
            ClearAllTextBoxes("ITCD,ITNM,WPrate,RPrate");

        }
        else {
            $.ajax({
                type: 'POST',
                beforesend: $("#WaitingMode").show(),
                url: "@Url.Action("GetBarCodeDetails", "Rep_ItemPartySumm")",
                data: $('form').serialize() + "&val=" + id,
                success: function (result) {
                    var MSG = result.indexOf('#helpDIV');
                    if (MSG >= 0) {
                        ClearAllTextBoxes("ITCD,ITNM,WPrate,RPrate");
                        $('#SearchFldValue').val("ITCD");
                        $('#helpDIV').html(result);
                        $('#ReferanceFieldID').val("ITCD/ITNM");//ITCD=ITCD=2/ITNM=STYLENO=3/WPrate=WPRATE/RPrate=RPRATE
                        $('#ReferanceColumn').val("2/0");
                        $('#helpDIV_Header').html("Item Details");

                    }
                    else {
                        var MSG = result.indexOf(String.fromCharCode(181));
                        if (MSG >= 0) {
                            $("#WaitingMode").hide();
                            document.getElementById("ITCD").value = returncolvalue(result, "ITCD");
                            document.getElementById("ITNM").value = returncolvalue(result, "ITSTYLE");
                            document.getElementById("WPrate").value = returncolvalue(result, "WPRATE");
                            document.getElementById("RPrate").value = returncolvalue(result, "RPRATE");
                            document.getElementById("BarImages").value = returncolvalue(result, "BARIMAGE");
                            FillImageModal(returncolvalue(result, "BARIMAGEPATH"));
                        }
                        else {
                            $('#helpDIV').html("");
                            msgInfo("Invalid Design No./Item ! Please Enter a Valid Design No./Item !!");
                            ClearAllTextBoxes("ITCD,ITNM,WPrate,RPrate");
                            message_value = "ITCD";
                        }
                    }
                    $("#WaitingMode").hide();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#WaitingMode").hide();
                    msgError(XMLHttpRequest.responseText);
                    $("body span h1").remove(); $("#msgbody_error style").remove();
                }
            });
        }
    }

    $(document).on('click', '.arrow-left, .arrow-right', function () {
        var next;
        var circler;
        if ($(this).is('.arrow-left')) {
            next = 'prev';
            circler = ':last';
        } else {     // or if there would be more arrows, use : else if ($(this).is('.arrow-right'))
            next = 'next';
            circler = ':first';
        }
        var nextTarget = $('#div_carousel_inner div.active')[next]('div');
        if (nextTarget.length == 0) {
            nextTarget = $('#div_carousel_inner div' + circler);
        }
        $('#div_carousel_inner div').removeClass('active');
        nextTarget.addClass('active');
    });
    function FillImageModal(BARIMAGEPATH) {
        debugger;
        var actt = ""; $("#div_carousel_inner").html('');
        var arr = BARIMAGEPATH;//$("#BarImages").val();
        arr = arr.split(String.fromCharCode(179));
        $.each(arr, function (index, value) {
            var imgname = (value.split('~')[0]);
            var id = (imgname).split('.')[0];
            var ImageDesc = (value.split('~')[1]);
            var htm = ''; if (index == 0) { actt = "active"; } else { actt = ""; }
            htm += '<div id="' + id + '" class="item ' + actt + '">';
            htm += '    <img src="' + imgname + '"  alt="Img Not Found" style="width:100%;height:200px;">';
            htm += '    <span class="carousel-caption">';
            htm += '    <p> ' + ImageDesc + ' </p>';
            htm += '    </span>';
            htm += '</div>';
            $("#div_carousel_inner").append(htm);
        });
    }
</script>
<script>
    function GetItemDetails() {
        debugger;
        if (!emptyFieldCheck("Please Select / Enter Party Code", "ITCD")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Party Code", "SLCD")) { return false; }
        var party = $("#SLCD").val(), frmdt = $("#FDT").val(), todt = $("#TDT").val(), group = $("#ITGRPCDvalue").val(), loc = $("#loccdvalue").val(), sp = $('[id="SALPUR"]:checked').val();
        var CHECK = $("#ONLYSALES").val(), item = $("#ITCD").val(), itemnm = $("#ITNM").val();

        $.ajax({
            type: 'get',
            url: "@Url.Action("GetItemData", PageControllerName)",
            beforesend: $("#WaitingMode").show(),
            data: {
                slcd: party, fdt: frmdt, tdt: todt, itgrpcd: group, check: CHECK, itcd: item, itnm: itemnm, LOCATION: loc, SALPUR: sp
            },
            success: function (result) {
                $("#WaitingMode").hide();
                $("#partial_existing").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError("Error: " + textStatus + "," + errorThrown);
            }
        });

    }
</script>

@using (Html.BeginForm())
{
    if (Model.DefaultView == true)
    {
        <input type="hidden" id="urlname" value="@Url.Action("BSGroupCode", PageControllerName)" />
        <input type="hidden" id="urlMGCreate" value="@Url.Action("CreateMainGroup", PageControllerName)" />
        <input type="hidden" id="urlSGCreate" value="@Url.Action("CreateSubGroup", PageControllerName)" />
        <input type="hidden" id="urlRename" value="@Url.Action("RenameGroup", PageControllerName)" />
        <input type="hidden" id="urlDelete" value="@Url.Action("DeleteGroup", PageControllerName)" />
        <input type="hidden" id="urlIndex" value="@Url.Action("IndexGroup", PageControllerName)" />
        <input type="hidden" id="urladdaccount" value="@Url.Action("ADDACCOUNT", PageControllerName)" />
        <input type="hidden" id="urldeleteaccount" value="@Url.Action("DELETEACCOUNT", PageControllerName)" />
        <input type="hidden" id="urlexistaccount" value="@Url.Action("ExistingAccount", PageControllerName)" />
        <input type="hidden" id="ParameterVal" value="" />
        <input type="hidden" id="ParameterVal1" value="" />
        <input type="hidden" id="partylinkcd" value="party" />
        <input type="hidden" id="itgrptype" value="F" />

        <div style="width:38%;display:inline-block;float:left">
            <div class="row">
                <div class="col-lg-2">
                    <div class="editor-label" style="margin-top: 6px;">
                        @Html.Label("", "Design")
                        <b style="color:Red;">*</b>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.ITCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "ITCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", "Rep_ItemPartySumm") + "','Bar Code Details','ITCD','ITCD=ITCD=2/ITNM=STYLENO=0/WPrate=WPRATE/RPrate=RPRATE')", onblur = "SelectBARCODEDetail(this.value);", @placeholder = "Design No./Item", maxlength = 25 } })
                        <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetBarCodeDetails", "Rep_ItemPartySumm")','Bar Code Details','ITCD','ITCD=ITCD=2/ITNM=STYLENO=0/WPrate=WPRATE/RPrate=RPRATE')" />
                    </div>

                </div>
                <div class="col-md-11">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.ITNM, new { htmlAttributes = new { @class = "form-control", id = "ITNM", maxlength = 60, @TabIndex = -1, @title = "Only for View", @placeholder = "Item Name", @readonly = "readonly" } })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-2">
                    <div class="editor-label" style="margin-top: 6px;">
                        @Html.Label("", "Sales Rate")

                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.WPrate, new { htmlAttributes = new { @class = "form-control", id = "WPrate", maxlength = 60, @TabIndex = -1, @title = "Only for View", @placeholder = "Sales Rate", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="col-lg-2" style="width:auto;">
                    <div class="editor-label" style="margin-top: 6px;">
                        @Html.Label("", "Making Rate")

                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.RPrate, new { htmlAttributes = new { @class = "form-control", id = "RPrate", maxlength = 60, @TabIndex = -1, @title = "Only for View", @placeholder = "Making Rate", @readonly = "readonly" } })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3" style="width:auto;">
                    <div class="row">
                        <div class="editor-label" style="margin-top: 10px;text-align:center;color:#428bca;transform: translate(0%, 0%);z-index: 1100;">
                            @Html.Label("", "BarCode Image")
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.BarImages, new { id = "BarImages" })
                    <div class="row" style="text-align:-webkit-center;width: 200px;height:200px">
                        <div id="myCarousel" class="carousel" data-ride="carousel">
                            <div class="carousel-inner" id="div_carousel_inner">
                                <div class="item active">
                                    <img src="" alt="Los Angeles" style="width:100%;">
                                </div>
                                <div class="item">
                                    <img src="" alt="Chicago" style="width:100%;">
                                </div>
                            </div>
                            <!-- Left and right controls -->
                            <a class="left  carousel-control arrow-left" id="prev">
                                <span class="glyphicon glyphicon-chevron-left"></span>
                            </a>
                            <a class="right  carousel-control arrow-right" id="next">
                                <span class="glyphicon glyphicon-chevron-right"></span>
                            </a>
                        </div>
                    </div>

                </div>
            </div>
            <div class="row">
                <div class="col-lg-2">
                    <div class="editor-label" style="margin-top: 6px;">
                        @Html.Label("", "Party Code")
                        <b style="color:Red;">*</b>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.SLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SLCD", @autocomplete = "off", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=SLAREA','partylinkcd')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=SLAREA','partylinkcd');", @placeholder = "Code", maxlength = 8 } })
                        <img src="~/Image/search.png" id="PARTY_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/SLAREA=SLAREA','partylinkcd')" />
                    </div>
                </div>
                <div class="col-lg-7">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.SLNM, new { htmlAttributes = new { @class = "form-control", id = "SLNM", maxlength = 45, @title = "Only for View", @placeholder = "Party Name", @readonly = "readonly", tabindex = "-1" } })

                    </div>
                </div>
            </div>
            <div class="row" style="margin-top:6px">
                <div class="col-lg-2">
                    <div class="editor-label" style="margin-top:5px">
                        @Html.Label("", "Group")
                    </div>
                </div>
                <div class="col-md-6">
                    @(new HtmlString(Model.ITGRPCD))
                </div>
            </div>
            <div class="row">
                <div class="col-lg-2">
                    <div class="editor-label" style="margin-top:6px">
                        @Html.Label("", "Location")
                    </div>
                </div>
                <div class="col-md-4">
                    @(new HtmlString(Model.LOCATION))
                </div>
            </div>
            <div class="row">
                <div class="col-lg-2">
                    <div class="editor-label" style="margin-top: 6px;">
                        @Html.Label("", "From Date")
                    </div>
                </div>
                <div class="col-md-9">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.FDT, new { htmlAttributes = new { @class = "form-control", id = "FDT", maxlength = 10, onblur = "DocumentDateCHK(this,true);", @placeholder = "dd/mm/yyyy", @autocomplete = "off", required = "required" } })
                    </div>
                </div>
                <div class="col-lg-2">
                    <div class="editor-label" style="margin-top: 6px;">
                        @Html.Label("", "To Date")
                    </div>
                </div>
                <div class="col-md-9">
                    <div class="editor-field">
                        @Html.EditorFor(model => model.TDT, new { htmlAttributes = new { @class = "form-control", id = "TDT", maxlength = 10, onblur = "DocumentDateCHK(this,true);", @placeholder = "dd/mm/yyyy", autocomplete = "off", required = "required" } })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-8">
                    <div class="editor-label" style="margin-top: 6px;">
                        @Html.Label("", "Debtors/Creditors")
                    </div>
                </div>
                <div class="col-lg-9" style="margin-top:6px;width:auto;border: groove;">
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.SALPUR, "S", new { @checked = "checked", id = "SALPUR" })  @Html.Label("Debtors")
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.SALPUR, "P", new { id = "SALPUR" })  @Html.Label("Creditors")
                    </label>
                </div>
                <div class="col-lg-2" style="width:auto;">
                    <div class="editor-label" style="margin-top:6px">
                        @Html.Label("", "Is Only Sales/Purchase")
                    </div>
                </div>
                <div class="col-md-6" style="margin-top:6px;width:auto;">
                    @Html.CheckBoxFor(model => model.CHECK, new { id = "CHECK" })
                </div>
            </div>
            <div class="row">
                <button type="button" class="btn btn-success" style="margin-top:4px" onclick="GetItemDetails();">Show</button>
            </div>

        </div>
        <div style="width:62%;display:inline-block;float:left">
            <input type="text" value="" class="form-control" autocomplete="off" id="searchAV" placeholder="Search From Available Bill Details" style="width:260px; margin-left:10px" onkeyup="filterTable(event, 'exist_GRP');" />
            <span class="fa fa-search" style="margin-top:-18px;margin-left:251px;float:left"></span>
            <div style="height:66vh;margin-top:10px;border-top-right-radius:15px;border-top-left-radius:15px;border-bottom-left-radius:15px;border-bottom-right-radius:15px;border-top:2px solid #86abd8;border-bottom:2px solid #86abd8;border-right:2px solid #86abd8;border-left:2px solid #86abd8;background-color:#d9ebf1">
                <div class="tabtitle">
                    Bill Details
                </div>
                <div id="partial_existing">
                    @Html.Partial("_Rep_ItemPartySumm_Item_Det")
                </div>
            </div>
        </div>

    }
    else
    {
        @ViewBag.ErrorMessage
    }
}


<div class="container">
    <div id="helpDIV">

    </div>
</div>
