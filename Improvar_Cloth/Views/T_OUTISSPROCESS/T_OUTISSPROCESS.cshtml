@model Improvar.ViewModels.TransactionOutIssProcess
@{
    string PageControllerName = "T_OUTISSPROCESS";
    ViewBag.Title = "Issue for Processing";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@{
    switch (Model.MENU_PARA)
    {
        case "DY":
            ViewBag.Title = "Issue for Dyer"; break;
        case "PR":
            ViewBag.Title = "Issue for Printing"; break;
        case "ST":
            ViewBag.Title = "Issue for Stiching"; break;
        case "EM":
            ViewBag.Title = "Issue for Embroidery"; break;
        case "JW":
            ViewBag.Title = "Issue for Other Jobs"; break;
        default: ViewBag.Title = ""; break;
    }
}
<style>
    .TextAreaRemarks {
        height: 190px;
    }
</style>
<script src="~/Scripts/jquery.min.js"></script>
<link rel="stylesheet" href="~/Content/jquery.stickytable.css">
<script type="text/javascript">
    $("#WaitingMode").show();
    $(document).ready(function () {
        if ("@Model.DefaultAction" == "V" || "@Model.DefaultAction" == "D") {
            modeView();
        }
        else if ("@Model.DefaultAction" == "E") {

        }
        else if ("@Model.DefaultAction" == "A") {
            $('form :input:enabled:visible:not([readonly]):first').focus();
        }
        $("#WaitingMode").hide();
    });
</script>
<script>
    @{
        string mldauto = "";
        if (@Model.T_CNTRL_HDR != null)
        {
            if (@Model.T_CNTRL_HDR.AUTONO != null)
            {
                mldauto = Model.T_CNTRL_HDR.AUTONO.ToString();
                if (Model.T_CNTRL_HDR.CANCEL == "Y")
                {
                    ViewBag.formname = ViewBag.formname + "   " + "(Record Cancelled)";
                }
            }
        }
        else
        {
            mldauto = "";
        }
    }
    function ModifyLogDetails() {
        if ("@Model.DefaultAction" == "V") {
            ModifyLogDtl('@mldauto');
        }
    }
</script>
<script>
    function requiredFieldValidator() {
        if (!emptyFieldCheck("Please Select / Enter Document Date", "DOCDT")) { return false; }
        if (!emptyFieldCheck("Please Select / Enter Party", "SLCD")) { return false; }
        //if (!emptyFieldCheck("Please Select / Enter Price List", "PRCCD")) { return false; }
        //if (!emptyFieldCheck("Please Select / Enter Agent", "AGSLCD")) { return false; }
        //if (!emptyFieldCheck("Please Select / Enter SalesMen", "CRSLCD")) { return false; }
        return true;
    }
</script>
<script>
    $(function () {
        if ("@Model.DefaultAction" != "V") {
            $("#DOCDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate', minDate: '@Model.mindate' });
            $("#LRDT").datepicker({ dateFormat: "dd/mm/yy", changeMonth: true, changeYear: true, maxDate: '@Model.maxdate' });
        }
    });
</script>
<script>
    function OpenAmount() {
        var AUTO_NO = document.getElementById("AUTONO").value;
        var A_T_NOS = document.getElementById("T_NOS").value;
        var A_T_QNTY = document.getElementById("T_QNTY").value;
        var A_T_AMT = document.getElementById("T_AMT").value;
        var A_T_TAXABLE = document.getElementById("T_GROSS_AMT").value;
        var A_T_IGST_AMT = document.getElementById("T_IGST_AMT").value;
        var A_T_CGST_AMT = document.getElementById("T_CGST_AMT").value;
        var A_T_SGST_AMT = document.getElementById("T_SGST_AMT").value;
        var A_T_CESS_AMT = document.getElementById("T_CESS_AMT").value;
        var A_T_NET_AMT = document.getElementById("T_NET_AMT").value;

        if (A_T_NOS == "") { A_T_NOS = parseInt(0) } else { A_T_NOS = parseInt(A_T_NOS) }
        if (A_T_QNTY == "") { A_T_QNTY = parseFloat(0) } else { A_T_QNTY = parseFloat(A_T_QNTY) }
        if (A_T_AMT == "") { A_T_AMT = parseFloat(0) } else { A_T_AMT = parseFloat(A_T_AMT) }
        if (A_T_TAXABLE == "") { A_T_TAXABLE = parseFloat(0) } else { A_T_TAXABLE = parseFloat(A_T_TAXABLE) }
        if (A_T_IGST_AMT == "") { A_T_IGST_AMT = parseFloat(0) } else { A_T_IGST_AMT = parseFloat(A_T_IGST_AMT) }
        if (A_T_CGST_AMT == "") { A_T_CGST_AMT = parseFloat(0) } else { A_T_CGST_AMT = parseFloat(A_T_CGST_AMT) }
        if (A_T_SGST_AMT == "") { A_T_SGST_AMT = parseFloat(0) } else { A_T_SGST_AMT = parseFloat(A_T_SGST_AMT) }
        if (A_T_CESS_AMT == "") { A_T_CESS_AMT = parseFloat(0) } else { A_T_CESS_AMT = parseFloat(A_T_CESS_AMT) }
        if (A_T_NET_AMT == "") { A_T_NET_AMT = parseFloat(0) } else { A_T_NET_AMT = parseFloat(A_T_NET_AMT) }

        var IGST_PER = 0; var CGST_PER = 0; var SGST_PER = 0; var CESS_PER = 0;

        var GridRowMain = $("#_T_SALE_DETAIL_GRID > tbody > tr").length;
        for (i = 0; i <= GridRowMain - 1; i++) {
            var IGST = document.getElementById("D_IGSTPER_" + i).value;
            if (IGST == "") { IGST = parseFloat(0); } else { IGST = parseFloat(IGST); }
            var CGST = document.getElementById("D_CGSTPER_" + i).value;
            if (CGST == "") { CGST = parseFloat(0); } else { CGST = parseFloat(CGST); }
            var SGST = document.getElementById("D_SGSTPER_" + i).value;
            if (SGST == "") { SGST = parseFloat(0); } else { SGST = parseFloat(SGST); }
            var CESS = document.getElementById("D_CESSPER_" + i).value;
            if (CESS == "") { CESS = parseFloat(0); } else { CESS = parseFloat(CESS); }
            if (IGST > IGST_PER) {
                IGST_PER = IGST;
            }
            if (CGST > CGST_PER) {
                CGST_PER = CGST;
            }
            if (SGST > SGST_PER) {
                SGST_PER = SGST;
            }
            if (CESS > CESS_PER) {
                CESS_PER = CESS;
            }
        }
        $.ajax({
            type: 'post',
            url: "@Url.Action("OPEN_AMOUNT", PageControllerName)",
            data: $('form').serialize() + "&AUTO_NO=" + AUTO_NO + "&A_T_NOS=" + A_T_NOS + "&A_T_QNTY=" + A_T_QNTY + "&A_T_AMT=" + A_T_AMT + "&A_T_TAXABLE=" + A_T_TAXABLE
                                        + "&A_T_IGST_AMT=" + A_T_IGST_AMT + "&A_T_CGST_AMT=" + A_T_CGST_AMT + "&A_T_SGST_AMT=" + A_T_SGST_AMT + "&A_T_CESS_AMT=" + A_T_CESS_AMT
                                        + "&A_T_NET_AMT=" + A_T_NET_AMT + "&IGST_PER=" + IGST_PER + "&CGST_PER=" + CGST_PER + "&SGST_PER=" + SGST_PER + "&CESS_PER=" + CESS_PER,
            success: function (result) {
                $('#partialdivAmounts').html(result);
                $("#AMTRATE_0").focus();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError("Error: " + textStatus + "," + errorThrown);
            }
        });
    }
</script>
<script>
    function CalulateTareWt(GRWT, NTWT, TRWT) {
        var GROSS = document.getElementById(GRWT.id).value;
        if (GROSS == "") {
            GROSS = parseFloat(0);
        }
        var NET = document.getElementById(NTWT.id).value;
        if (NET == "") {
            NET = parseFloat(0);
        }
        var TARE = GROSS - NET;
        document.getElementById(TRWT.id).value = TARE.toFixed(3);
    }
</script>
<script>
    function Fill_BarCodeData() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("FillBarCodeData", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                //$("#partialdivBarCodeTab").animate({ marginTop: '-10px' }, 50);
                $("#partialdivBarCodeTab").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function Fill_DetailData() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("FillDetailData", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                //$("#partialdivBarCodeTab").animate({ marginTop: '-10px' }, 50);
                $("#partialdivDetail").html(result);
                $("li").removeClass("active").addClass("");
                $(".nav-tabs li:nth-child(3)").addClass('active');
                //below set the  child sequence
                $(".tab-content div").removeClass("active");
                $(".tab-content div:nth-child(3)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }

    function Fill_QtyRequirementData() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("FillQtyRequirementData", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                //$("#partialdivBarCodeTab").animate({ marginTop: '-10px' }, 50);
                $("#partialdivQtyRequirement").html(result);
                $("li").removeClass("active").addClass("");
                $(".nav-tabs li:nth-child(2)").addClass('active');
                //below set the  child sequence
                $(".tab-content div").removeClass("active");
                $(".tab-content div:nth-child(2)").removeClass("tab-pane fade").addClass("tab-pane fade in active");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function AddDOCrow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddDOCRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '-10px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
    function DeleteDOCrow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteDOCRow", PageControllerName)",
            data: $('form').serialize(),
            success: function (result) {
                $("#partialdivDocument").animate({ marginTop: '0px' }, 50);
                $("#partialdivDocument").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function pageprinting() {
        var ty = $("#DOCCD").val();
        $.ajax({
            type: 'get',
            url: "@Url.Action("Print", PageControllerName)",
            data: "DOCNO=" + $("#DOCNO").val() + "&DOC_CD=" + $("#DOCCD").val() + "&DOCDT=" + $("#DOCDT").val(),
            success: function (result) {
                window.open("@Url.Action("Rep_OrdPrint", "Rep_OrdPrint", new { US = Model.UNQSNO_ENCRYPTED })", "_blank")
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }
</script>
<script>
    function CalculateQNTY(i) {
        if ("@Model.DefaultAction" != "V") {
            var NOS_ = document.getElementById('P_NOS_' + i).value;
            if (NOS_ == "") { NOS_ = parseFloat(0) } else { NOS_ = parseFloat(NOS_) }
            var CUTLENGTH_ = document.getElementById('P_CUTLENGTH_' + i).value;
            if (CUTLENGTH_ == "") { CUTLENGTH_ = parseFloat(0) } else { CUTLENGTH_ = parseFloat(CUTLENGTH_) }
            if (NOS_ > 0  && CUTLENGTH_ > 0 ) {
                var qnty = (parseFloat(NOS_) * parseFloat(CUTLENGTH_));
                document.getElementById('P_QNTY_' + i).value = parseFloat(qnty).toFixed(2);
            }

        } CalculateTotal();
    }

    function CalculateTotal() {
        debugger;
        var T_NOS = 0; var T_QNTY = 0; var T_QNTYDAM = 0; var T_STD_AMT = 0; var T_DIS_AMT = 0; var T_GROSS_AMT = 0; var T_IGST_AMT = 0; var T_CGST_AMT = 0;
        var T_SGST_AMT = 0; var T_CESS_AMT = 0; var T_DUTY_AMT = 0; var T_OTHER_AMT = 0; var T_NET_AMT = 0;
        var GridRow = $("#_T_OUTISSPROCESS_Programme_GRID > tbody > tr").length;
        for (var i = 0; i <= GridRow - 1; i++) {
            var NOS = document.getElementById("P_NOS_" + i).value;
            if (NOS != "") { T_NOS = T_NOS + parseFloat(NOS); } else { T_NOS = T_NOS + parseFloat(0); }

            var QNTY = document.getElementById("P_QNTY_" + i).value;
            if (QNTY != "") { T_QNTY = T_QNTY + parseFloat(QNTY); }
            else { T_QNTY = T_QNTY + parseFloat(0); }


        }
        document.getElementById("T_NOS").value = parseFloat(T_NOS).toFixed(0);
        document.getElementById("T_QNTY").value = parseFloat(T_QNTY).toFixed(6);


    }

    function CalculateTotalProgBomQnty() {
        var T_BOMQNTY = 0; var T_EXTRAQNTY = 0;
        var GridRow = $("#__T_OUTISSPROCESS_QtyRequirement_GRID > tbody > tr").length;
        for (var i = 0; i <= GridRow - 1; i++) {

            var BOMQNTY = document.getElementById("Q_BOMQNTY_" + i).value;
            if (BOMQNTY == "") { BOMQNTY = parseFloat(0) } else { BOMQNTY = parseFloat(BOMQNTY) }
            if (BOMQNTY != "") { T_BOMQNTY = T_BOMQNTY + parseFloat(BOMQNTY); }
            else { T_BOMQNTY = T_BOMQNTY + parseFloat(0); }

            var EXTRAQNTY = document.getElementById("Q_EXTRAQNTY_" + i).value;
            if (EXTRAQNTY == "") { EXTRAQNTY = parseFloat(0) } else { EXTRAQNTY = parseFloat(EXTRAQNTY) }
            if (EXTRAQNTY != "") { T_EXTRAQNTY = T_EXTRAQNTY + parseFloat(EXTRAQNTY); }
            else { T_EXTRAQNTY = T_EXTRAQNTY + parseFloat(0); }


        } document.getElementById("T_BOMQNTY").value = parseFloat(T_BOMQNTY).toFixed(6);
        document.getElementById("T_EXTRAQNTY").value = parseFloat(T_EXTRAQNTY).toFixed(6);
    }


</script>
<script>
    function Addrow(ID) {
        var TAG = ""; var COUNT = document.getElementById(ID).value; if (COUNT != "") { COUNT = parseInt(COUNT); } else { COUNT = parseInt(0); } if (COUNT > 0) { TAG = "Y"; }
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddRow", PageControllerName)",
            beforesend: $("#WaitingMode").show(),
            data: $('form').serialize() + "&COUNT=" + COUNT + "&TAG=" + TAG,
            success: function (result) {
                $("#WaitingMode").hide();
                $("#partialdivProgramme").animate({ marginTop: '-10px' }, 50);
                $("#partialdivProgramme").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }

    function DeleteRow() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteRow", PageControllerName)",
            data: $('form').serialize(),
        success: function (result) {
            $("#partialdivProgramme").animate({ marginTop: '0px' }, 50);
            $("#partialdivProgramme").html(result);
        },
        error: function (XMLHttpRequest, textStatus, errorThrown) {
            $("#WaitingMode").hide();
            msgError(XMLHttpRequest.responseText);
            $("body span h1").remove(); $("#msgbody_error style").remove();
        }
    });
    }
</script>
<script>
    function AddrowQTY(ID) {
        var TAG = ""; var COUNT = document.getElementById(ID).value; if (COUNT != "") { COUNT = parseInt(COUNT); } else { COUNT = parseInt(0); } if (COUNT > 0) { TAG = "Y"; }
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddRowQTY", PageControllerName)",
            beforesend: $("#WaitingMode").show(),
            data: $('form').serialize() + "&COUNT=" + COUNT + "&TAG=" + TAG,
            success: function (result) {
                $("#WaitingMode").hide();
                $("#partialdivQtyRequirement").animate({ marginTop: '-10px' }, 50);
                $("#partialdivQtyRequirement").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });
    }

    function DeleteRowQTY() {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteRowQTY", PageControllerName)",
            data: $('form').serialize(),
        success: function (result) {
            $("#partialdivQtyRequirement").animate({ marginTop: '0px' }, 50);
            $("#partialdivQtyRequirement").html(result);
        },
        error: function (XMLHttpRequest, textStatus, errorThrown) {
            $("#WaitingMode").hide();
            msgError(XMLHttpRequest.responseText);
            $("body span h1").remove(); $("#msgbody_error style").remove();
        }
    });
    }
</script>
<script>
    function CopyAboveRow_TPROGBOM(i) {
        debugger;
        i = parseInt(i);
        if (event.key == "F8" && i > 0) {
            //var itnm = $("#Q_RITNM1_" + (i - 1)).val();
            //$("#Q_RITNM1_" + i).val(itnm);
            //var TAG = ""; var COUNT = document.getElementById(i).value;
            $.ajax({
                type: 'POST',
                url: "@Url.Action("CopyAboveRow", PageControllerName)",
                beforesend: $("#WaitingMode").show(),
                data: $('form').serialize() + "&i=" + i,
            success: function (result) {
                $("#WaitingMode").hide();
                $("#partialdivQtyRequirement").animate({ marginTop: '-10px' }, 50);
                $("#partialdivQtyRequirement").html(result);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#WaitingMode").hide();
                msgError(XMLHttpRequest.responseText);
                $("body span h1").remove(); $("#msgbody_error style").remove();
            }
        });

        }
    }
</script>

@using (Html.BeginForm())
{
    if (Model.DefaultView == true)
    {
        @Html.HiddenFor(a => Model.maxdate)
        @Html.HiddenFor(a => Model.mindate)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" id="btnSave" value="@Url.Action("SAVE", PageControllerName)" />
        <input type="hidden" id="srhpnl" value="@Url.Action("SearchPannelData", PageControllerName)" />
        <input type="hidden" id="partylinkcd" value="D" />
        <input type="hidden" id="agentlinkcd" value="A" />
        <input type="hidden" id="courierlinkcd" value="U" />
        <input type="hidden" id="trnsportlinkcd" value="T" />
        <input type="hidden" id="itgrptype" value="'A','C','L','P','Y'" />
        @Html.HiddenFor(s => s.DefaultAction)
        @Html.HiddenFor(a => a.T_TXN.AUTONO, new { id = "AUTONO" })
        @Html.HiddenFor(a => a.T_TXN.DOCNO)
        @Html.HiddenFor(a => a.T_CNTRL_HDR.MNTHCD)
        @Html.HiddenFor(a => a.T_CNTRL_HDR.EMD_NO)
        <div class="form-horizontal">
            @if (Model.DefaultAction == "V")
            {
                @Html.Partial("_FilteredSearch")
            }
            <div class="row" style="margin-top: 5px;">
                <div class="row">
                    <div class="col-md-5" style="margin-top: 6px;">
                        <div class="editor-label">
                            @Html.Label("", "Document Code")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="editor-field">
                            @if (Model.DefaultAction == "A")
                            {
                                @Html.DropDownListFor(model => model.T_TXN.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", @onchange = "ChangeDoctype();" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.T_TXN.DOCCD, new SelectList(Model.DocumentType, "Value", "Text"), new { @class = "form-control", id = "DOCCD", style = "pointer-events:none;background-color:#eee" })
                            }
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Document Date")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.DOCDT, new { htmlAttributes = new { @class = "form-control", id = "DOCDT", onblur = "DocumentDateCHK(this);", autocomplete = "off", @placeholder = "dd/mm/yyyy", maxlength = 10 } })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Document No.")
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.DOCNO, new { htmlAttributes = new { @class = "form-control", id = "DOCNO", @placeholder = "Doc. No.", maxlength = 6, @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Job")
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.JOBCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "JOBCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetJobDetails", PageControllerName) + "','Job Details','JOBCD','JOBCD=jobcd=1/JOBNM=jobnm=0')", onblur = "GetHelpBlur('" + @Url.Action("GetJobDetails", PageControllerName) + "','Job Details','JOBCD','JOBCD=jobcd=1/JOBNM=jobnm=0');", @placeholder = "Job Code", maxlength = 2 } })
                            <img src="~/Image/search.png" id="PARTY_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetJobDetails", PageControllerName)','Job Details','JOBCD','JOBCD=jobcd=1/JOBNM=jobnm=0')" />
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.JOBNM, new { htmlAttributes = new { @class = "form-control", id = "JOBNM", maxlength = 45, @title = "Only for View", @placeholder = "Job Name", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-5">
                        <div class="editor-label" style="margin-top: 6px;">
                            @Html.Label("", "Party Code")
                            <b style="color:Red;">*</b>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.T_TXN.SLCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SLCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/DISTRICT=statecd=4/GSTNO=gstno=2')", onblur = "GetHelpBlur('" + @Url.Action("GetSubLedgerDetails", PageControllerName) + "','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/DISTRICT=statecd=4/GSTNO=gstno=2');", @placeholder = "Code", maxlength = 8 } })
                            <img src="~/Image/search.png" id="PARTY_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSubLedgerDetails", PageControllerName)','Party Details','SLCD','SLCD=slcd=1/SLNM=slnm=0/DISTRICT=statecd=4/GSTNO=gstno=2')" />
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.SLNM, new { htmlAttributes = new { @class = "form-control", id = "SLNM", maxlength = 45, @title = "Only for View", @placeholder = "Party Name", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.DISTRICT, new { htmlAttributes = new { @class = "form-control", id = "DISTRICT", @title = "Only for View", @placeholder = "District", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="editor-field">
                            @Html.EditorFor(model => model.GSTNO, new { htmlAttributes = new { @class = "form-control", id = "GSTNO", @title = "Only for View", @placeholder = "GST No.", @readonly = "readonly", tabindex = "-1" } })
                        </div>
                    </div>

                </div>

            </div>
            <div class="row" style="margin-top:5px;">
                <ul class="nav nav-tabs">
                    <li id="Programme_LI4" class="active"><a data-toggle="tab" href="#Programme" accesskey="P">Programme(P)</a></li>
                    <li id="QtyRequird_LI4" class=""><a data-toggle="tab" href="#QtyRequirement" accesskey="Q">Qty Requirement(Q)</a></li>
                    <li id="MtrlIssue_LI" class=""><a data-toggle="tab" href="#MtrlIssue" accesskey="M">Material Issue(M)</a></li>
                    <li id="Detail_LI4" class=""><a data-toggle="tab" href="#DetailTab" accesskey="D">Detail(D)</a></li>
                    <li id="Remarks_LI4" class=""><a data-toggle="tab" href="#Remarks" accesskey="R">Remarks(R)</a></li>
                    <li id="Documents_LI4" class=""><a data-toggle="tab" href="#Documents"accesskey="U">Documents(U)</a></li>
                </ul>
                <div class="tab-content">
                    <div id="Programme" class="tab-pane fade in active" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                            <div>
                                <div id="partialdivProgramme" style="margin-top:0px;">
                                    @Html.Partial("_T_OUTISSPROCESS_Programme")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="QtyRequirement" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                            <div>
                                <div id="partialdivQtyRequirement" style="margin-top:0px;">
                                    @Html.Partial("_T_OUTISSPROCESS_QtyRequirement")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="MtrlIssue" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row">
                            @if (Model.DefaultAction != "V")
                            {
                                <div class="row">
                                    <div class="col-md-1">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "Bar Code")
                                            <b style="color:Red;">*</b>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.BARCODE, new { htmlAttributes = new { @class = "form-control textbox_image", id = "BARCODE", onkeydown = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','BARCODE','BARCODE=BARNO=0','DOCDT/TAXGRPCD/GOCD/PRCCD')", onblur = "GetHelpBlur('" + @Url.Action("GetBarCodeDetails", PageControllerName) + "','Bar Code Details','BARCODE','BARCODE=BARNO=0','DOCDT/TAXGRPCD/GOCD/PRCCD');GetBarnoDetails(this.value);", @placeholder = "Bar Code", maxlength = 25 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetBarCodeDetails", PageControllerName)','Bar Code Details','BARCODE','BARCODE=BARNO=0','DOCDT/TAXGRPCD/GOCD/PRCCD')" />
                                        </div>
                                    </div>
                                    @*<div class="col-md-8">
                                            <input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;" name="GetBarCode" value="Get BarCode Detail" title="Click to Get BarCode Detail" />
                                        </div>*@
                                    <div class="col-md-4">
                                        <div class="editor-label" style="margin-top: 6px;">
                                            @Html.Label("", "Material Job Code")
                                        </div>
                                    </div>
                                    <div class="col-md-6" style="margin-top:5px;width:auto;height:60px; overflow:auto;border:5px groove;">
                                        @*<div class="col-md-6" style="margin-top:5px;width:auto;height:161px; overflow:auto;">*@
                                        <div class="editor-field">
                                            <table id="exampleLT" border="1" style="width: auto;">
                                                @*<thead>
                                                        <tr>
                                                            <th colspan="3">
                                                                <input type="text" value="" placeholder="Search" style="width:100px;border:none;outline:none" onkeyup="filterTable(event, 'exampleLT');" />
                                                            </th>
                                                        </tr>
                                                        <tr style="background-color:#808080;" class="grid_th">
                                                            <th align="center"></th>
                                                            <th align="center">
                                                                Name
                                                            </th>
                                                            <th align="center">
                                                                Code
                                                            </th>
                                                        </tr>
                                                    </thead>*@
                                                @*<tbody>*@
                                                @for (int i = 0; i < Model.DropDown_list_MTRLJOBCD.Count(); i++)
                                                {
                                                    <tr>
                                                        @if (Model.DefaultAction == "V")
                                                        {
                                                            if (Model.DropDown_list_MTRLJOBCD[i].Checked == true)
                                                            {
                                                                <td align="center">
                                                                    @Html.CheckBoxFor(model => model.DropDown_list_MTRLJOBCD[i].Checked, new { id = "MaterialJobChk_" + i })
                                                                </td>
                                                                <td align="center">
                                                                    @{ string STRC1 = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBNM.ToString();}
                                                                    @Html.DisplayFor(model => STRC1)
                                                                    @Html.HiddenFor(model => model.DropDown_list_MTRLJOBCD[i].MTRLJOBNM)
                                                                </td>
                                                                <td align="center">
                                                                    @{ string STRC = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD.ToString();}
                                                                    @Html.DisplayFor(model => STRC)
                                                                    @Html.HiddenFor(model => model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD)
                                                                </td>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <td align="center">
                                                                                @Html.CheckBoxFor(model => model.DropDown_list_MTRLJOBCD[i].Checked, new { id = "MaterialJobChk_" + i })
                                                                            </td>
                                                                            <td align="center">
                                                                                @{ string STRC1 = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBNM.ToString();}
                                                                                @Html.DisplayFor(model => STRC1)
                                                                                @Html.HiddenFor(model => model.DropDown_list_MTRLJOBCD[i].MTRLJOBNM)
                                                                            </td>
                                                                            <td align="center">
                                                                                @{ string STRC = Model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD.ToString();}
                                                                                @Html.DisplayFor(model => STRC)
                                                                                @Html.HiddenFor(model => model.DropDown_list_MTRLJOBCD[i].MTRLJOBCD)
                                                                            </td>
                                                                                    }

                                                    </tr>
                                                                                    }
                                                @*</tbody>*@
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.TXNSLNO, new { htmlAttributes = new { @class = "form-control", id = "TXNSLNO", maxlength = 4, @onkeypress = "return numericOnly(this);", @placeholder = "Bill Sl" } })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.TextBoxFor(model => Model.ITGRPCD, new { id = "ITGRPCD", maxlength = 4, onkeydown = "GetHelpBlur('" + @Url.Action("GetItemGroupDetails", PageControllerName) + "','Item Group Details','ITGRPCD','ITGRPCD=itgrpcd=1/ITGRPNM=itgrpnm=0');", @class = "form-control textbox_image", onblur = "GetHelpBlur('" + @Url.Action("GetItemGroupDetails", PageControllerName) + "','Item Group Details','ITGRPCD','ITGRPCD=itgrpcd=1/ITGRPNM=itgrpnm=0');", @placeholder = "Item Group Code" })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetItemGroupDetails", PageControllerName)','Item Group Details','ITGRPCD','ITGRPCD=itgrpcd=1/ITGRPNM=itgrpnm=0')" />
                                            @Html.HiddenFor(model => model.ITGRPNM, new { id = "ITGRPNM" })
                                        </div>
                                    </div>
                                    @*<div class="col-md-7">
                                            <div class="editor-field">
                                                @Html.EditorFor(model => model.ITGRPNM, new { htmlAttributes = new { @class = "form-control", id = "ITGRPNM", @title = "Only for View", @placeholder = "Item Group Name", @readonly = "readonly", @TabIndex = -1 } })
                                            </div>
                                        </div>*@
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.MTRLJOBCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "MTRLJOBCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetMaterialJobDetails", PageControllerName) + "','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetMaterialJobDetails", PageControllerName) + "','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0');", @placeholder = "Material Job Code", maxlength = 2 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetMaterialJobDetails", PageControllerName)','Material Job Details','MTRLJOBCD','MTRLJOBCD=MTRLJOBCD=1/MTRLJOBNM=MTRLJOBNM=0')" />
                                            @Html.HiddenFor(model => model.MTRLJOBNM, new { id = "MTRLJOBNM" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.ITCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "ITCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetItemDetails", PageControllerName) + "','Facbric Item Details','ITCD','ITCD=itcd=2/ITNM=itnm=1/UOM=uomcd=3/STYLENO=styleno=0','ITGRPCD')", onblur = "GetHelpBlur('" + @Url.Action("GetItemDetails", PageControllerName) + "','Facbric Item Details','ITCD','ITCD=itcd=2/ITNM=itnm=1/UOM=uomcd=3/STYLENO=styleno=0','ITGRPCD');", @placeholder = "Item Code", maxlength = 8 } })
                                            <img src="~/Image/search.png" id="SLCD_HELP" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetItemDetails", PageControllerName)','Facbric Item Details','ITCD','ITCD=itcd=2/ITNM=itnm=1/UOM=uomcd=3/STYLENO=styleno=0','ITGRPCD')" />
                                            @Html.HiddenFor(model => model.ITNM, new { id = "ITNM" })
                                        </div>
                                    </div>
                                    @*<div class="col-md-8">
                                            <div class="editor-field">
                                                @Html.EditorFor(model => model.ITNM, new { htmlAttributes = new { @class = "form-control", id = "ITNM", maxlength = 30, @title = "Only for View", @placeholder = "Item Name", @readonly = "readonly", @TabIndex = -1 } })
                                            </div>
                                        </div>*@
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.STYLENO, new { htmlAttributes = new { @class = "form-control", id = "STYLENO", maxlength = 30, @title = "Only for View", @placeholder = "Design", @readonly = "readonly", @TabIndex = -1 } })
                                        </div>
                                    </div>

                                    @*<div class="col-md-3">
                                            <div class="editor-field">
                                                @Html.EditorFor(model => model.FABITCD, new { htmlAttributes = new { @class = "form-control", id = "FABITCD", maxlength = 8, @title = "Only for View", @placeholder = "Fabric Item Code", @readonly = "readonly", @TabIndex = -1 } })
                                                @Html.HiddenFor(model => model.FABITNM, new { id = "FABITNM" })
                                            </div>
                                        </div>*@
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.STKTYPE, new { htmlAttributes = new { @class = "form-control textbox_image", id = "STKTYPE", onkeydown = "GetHelpBlur('" + @Url.Action("GetStockDetails", PageControllerName) + "','Stock Details','STKTYPE','STKTYPE=STKTYPE=1/STKNAME=STKNAME=0')", onblur = "GetHelpBlur('" + @Url.Action("GetStockDetails", PageControllerName) + "','Stock Details','STKTYPE','STKTYPE=STKTYPE=1/STKNAME=STKNAME=0');", @placeholder = "Stock Type", maxlength = 1 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetStockDetails", PageControllerName)','Stock Details','STKTYPE','STKTYPE=STKTYPE=1/STKNAME=STKNAME=0')" />
                                            @Html.HiddenFor(model => model.STKNAME, new { id = "STKNAME" })
                                            @*@Html.DropDownListFor(model => model.STKTYPE, new SelectList(Model.DropDown_list_StkType, "Value", "Text"), new { @class = "form-control", id = "STKTYPE" })*@
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.PARTCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "PARTCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetPartDetails", PageControllerName) + "','Part Details','PARTCD','PARTCD=PARTCD=1/PARTNM=PARTNM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetPartDetails", PageControllerName) + "','Part Details','PARTCD','PARTCD=PARTCD=1/PARTNM=PARTNM=0');", @placeholder = "Part Code", maxlength = 4 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetPartDetails", PageControllerName)','Part Details','PARTCD','PARTCD=PARTCD=1/PARTNM=PARTNM=0')" />
                                            @Html.HiddenFor(model => model.PARTNM, new { id = "PARTNM" })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.COLRCD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "COLRCD", onkeydown = "GetHelpBlur('" + @Url.Action("GetColorDetails", PageControllerName) + "','Color Details','COLRCD','COLRCD=COLRCD=1/COLRNM=COLRNM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetColorDetails", PageControllerName) + "','Color Details','COLRCD','COLRCD=COLRCD=1/COLRNM=COLRNM=0');", @placeholder = "Color Code", maxlength = 4 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetColorDetails", PageControllerName)','Color Details','COLRCD','COLRCD=COLRCD=1/COLRNM=COLRNM=0')" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.COLRNM, new { htmlAttributes = new { @class = "form-control", id = "COLRNM", @title = "Only for View", @placeholder = "Color Name", @readonly = "readonly", @TabIndex = -1 } })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.SIZECD, new { htmlAttributes = new { @class = "form-control textbox_image", id = "SIZECD", onkeydown = "GetHelpBlur('" + @Url.Action("GetSizeDetails", PageControllerName) + "','Size Details','SIZECD','SIZECD=SIZECD=1/SIZENM=SIZENM=0')", onblur = "GetHelpBlur('" + @Url.Action("GetSizeDetails", PageControllerName) + "','Size Details','SIZECD','SIZECD=SIZECD=1/SIZENM=SIZENM=0');", @placeholder = "Size Code", maxlength = 4 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetSizeDetails", PageControllerName)','Size Details','SIZECD','SIZECD=SIZECD=1/SIZENM=SIZENM=0')" />
                                            @Html.HiddenFor(model => model.SIZENM, new { id = "SIZENM" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.PSTYLENO, new { htmlAttributes = new { @class = "form-control", id = "PSTYLENO", @placeholder = "pdesign" } })
                                        </div>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.BALSTOCK, new { htmlAttributes = new { @class = "form-control", id = "BALSTOCK", @onkeypress = "return numericOnly(this,2);", maxlength = 12, @placeholder = "Stock", @readonly = "readonly", @TabIndex = -1 } })
                                        </div>
                                    </div>


                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.QNTY, new { htmlAttributes = new { @class = "form-control", id = "QNTY", @onkeypress = "return numericOnly(this,3);", maxlength = 12, @placeholder = "Quantity" } })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.UOM, new { htmlAttributes = new { @class = "form-control", id = "UOM", maxlength = 30, @title = "Only for View", @placeholder = "UOM", @readonly = "readonly", @TabIndex = -1 } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.NOS, new { htmlAttributes = new { @class = "form-control", id = "NOS", @onkeypress = "return numericOnly(this,3);", maxlength = 12, @placeholder = "Nos" } })
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.FLAGMTR, new { htmlAttributes = new { @class = "form-control", id = "FLAGMTR", @onkeypress = "return numericOnly(this,2);", maxlength = 8, @placeholder = "FLAGMTR" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.RATE, new { htmlAttributes = new { @class = "form-control", id = "RATE", @onkeypress = "return numericOnly(this,2);", maxlength = 14, @title = "Only for View", @placeholder = "Rate" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.DISCRATE, new { htmlAttributes = new { @class = "form-control", id = "DISCRATE", @onkeypress = "return numericOnly(this,2);", maxlength = 10, @placeholder = "Disc. Rate" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.DropDownListFor(model => model.DISCTYPE, new SelectList(Model.DISC_TYPE, "Value", "Text"), new { @class = "form-control", id = "DISCTYPE" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="editor-field">
                                            @Html.DropDownListFor(model => model.HSNCODE, new SelectList(Model.HSN_CODE, "Value", "Text"), new { @class = "form-control", id = "HSNCODE" })


                                            @*@Html.EditorFor(model => model.HSNCODE, new { htmlAttributes = new { @class = "form-control", id = "HSNCODE", maxlength = 30, @title = "Only for View", @placeholder = "Hsncode", @readonly = "readonly", @TabIndex = -1 } })*@
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.GSTPER, new { htmlAttributes = new { @class = "form-control", id = "GSTPER", @onkeypress = "return numericOnly(this,2);", maxlength = 5, @placeholder = "GSTPER" } })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.SHADE, new { htmlAttributes = new { @class = "form-control", id = "SHADE", maxlength = 15, @title = "Only for View", @placeholder = "Shade" } })
                                        </div>
                                    </div>

                                </div>
                                <div class="row">
                                    @*@if (Model.MENU_PARA == "PB")
                                        {*@
                                    <div class="col-md-8">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.BALENO, new { htmlAttributes = new { @class = "form-control", id = "BALENO", maxlength = 30, @placeholder = "BALENO" } })
                                        </div>
                                    </div>
                                    @*}*@
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.TDDISCTYPE, new { htmlAttributes = new { @class = "form-control", id = "TDDISCTYPE", @placeholder = "TDDISCTYPE", maxlength = 1, @list = "TDDISCTYPE_List" } })
                                            <datalist id="TDDISCTYPE_List">
                                                @foreach (var jg in Model.TDDISC_TYPE)
                                                {
                                                    <option value="@jg.FIELD_VALUE" />
                                                }
                                            </datalist>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.TDDISCRATE, new { htmlAttributes = new { @class = "form-control", id = "TDDISCRATE", @onkeypress = "return numericOnly(this,2);", maxlength = 10, @placeholder = "TDDISCRATE" } })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.SCMDISCTYPE, new { htmlAttributes = new { @class = "form-control", id = "SCMDISCTYPE", @placeholder = "SCMDISCTYPE", maxlength = 8, @list = "SCMDISCTYPE_List" } })
                                            <datalist id="SCMDISCTYPE_List">
                                                @foreach (var jg in Model.SCMDISC_TYPE)
                                                {
                                                    <option value="@jg.FIELD_VALUE" />
                                                }
                                            </datalist>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.SCMDISCRATE, new { htmlAttributes = new { @class = "form-control", id = "SCMDISCRATE", @onkeypress = "return numericOnly(this,2);", maxlength = 10, @placeholder = "SCMDISCRATE" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.LOCABIN, new { htmlAttributes = new { @class = "form-control textbox_image", id = "LOCABIN", onkeydown = "GetHelpBlur('" + @Url.Action("GetLocationBinDetails", PageControllerName) + "','Location Bin Details','LOCABIN','LOCABIN=LOCABIN=2')", onblur = "GetHelpBlur('" + @Url.Action("GetLocationBinDetails", PageControllerName) + "','SLocation Binize Details','LOCABIN','LOCABIN=LOCABIN=2');", @placeholder = "Location Bin", maxlength = 10 } })
                                            <img src="~/Image/search.png" width="20px" height="20px" class="Help_image_button" title="Help" onmousedown="GetHelpBlur('@Url.Action("GetLocationBinDetails", PageControllerName)','Location Bin Details','LOCABIN','LOCABIN=LOCABIN=2')" />
                                        </div>
                                    </div>
                                    <div class="col-md-1" style="width:auto;">
                                        <input type="button" class="btn btn-primary" style="margin-top: 2px;padding: 2px 7px 1px 7px;" name="AddRow" accesskey="A" value="Add Row(A)" title="Click to Fill Data in Product Details" onclick="Add_BarCodeRow()" />
                                    </div>
                                </div>
                                                                                    }
                            <div>
                                <div id="partialdivBarCodeTab" style="margin-top:4px;background-color:#c4b9b9;border:5px groove;">
                                    @Html.Partial("_T_OUTISSPROCESS_PRODUCT")
                                </div>
                                <div>
                                    <div class="col-md-1" style="width:auto;">
                                        <input type="button" class="btn btn-info" style="margin-top: 2px;padding: 2px 7px 1px 7px;" name="FillDetail" value="Fill Data Into Detail" title="Click to Fill Data in Details Tab" onclick="Fill_DetailData()" />
                                    </div>
                                </div>
                            </div>
                            <div class="PopUp_Backround">
                                <div id="popup" class="row" style="margin-top: 11px;top:40%;left:50%;position:absolute;transform: translate(-50%, -50%);z-index: 1100;">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="DetailTab" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                        <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                            <div>
                                <div id="partialdivDetail" style="margin-top:0px;">
                                    @Html.Partial("_T_OUTISSPROCESS_DETAIL")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Remarks" class="tab-pane fade">
                        <div class="row">
                            <div>
                                <div id="partialdivRemarks">
                                    @Html.Partial("_TRANSACTIONREMARKS")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Documents" class="tab-pane fade" style="margin-top: 10px;">
                        <div class="row" style="background-color:#c4b9b9;border:5px groove;width:fit-content;">
                            <div>
                                <div id="partialdivDocument" style="margin-top:0px;">
                                    @Html.Partial("_UPLOADDOCUMENTS")
                                </div>
                            </div>
                        </div>
                    </div>
                    @*<div id="Amounts" class="tab-pane fade" style="margin-top: 10px;margin-left: 11px;">
                            <div class="row" style="margin-top: 11px;background-color:#c4b9b9;border:5px groove;">
                                <div>
                                    <div id="partialdivAmounts" style="margin-top:0px;">
                                        @Html.Partial("_T_SALE_AMOUNT")
                                    </div>
                                </div>
                            </div>
                        </div>*@

                    @*<div id="SalesBillMade" class="tab-pane fade" style="margin-top: 10px;">

                        </div>*@
                </div>

            </div>
        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        @ViewBag.ErrorMessage
                                                                                    }

                                                                                    <div class="container">
                                                                                        <div id="helpDIV">

                                                                                        </div>
                                                                                    </div>
                                                                                    }
